{"version":3,"sources":["../../src/pages/registration/registration.module.ts","../../src/pages/registration/registration.ts","../../src/pages/registration/validators/matchingPasswordsValidator.ts","../../src/pages/registration/validators/nameValidator.ts"],"names":[],"mappings":"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","file":"6.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { RegistrationPage } from './registration';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RegistrationPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(RegistrationPage),\r\n  ],\r\n})\r\nexport class RegistrationPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/registration/registration.module.ts","import { Tag } from './../../data/Tag';\r\nimport { TagService } from './../../services/tag-service';\r\nimport { User } from './../../data/User';\r\nimport { LoginService } from './../../services/login-service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams, ToastController } from 'ionic-angular';\r\nimport { NgForm, FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\r\nimport { Validator } from 'validator'\r\nimport { matchingPasswords } from \"./validators/matchingPasswordsValidator\";\r\nimport { trigger, style, animate, transition } from '@angular/animations';\r\nimport { nameValidator } from \"./validators/nameValidator\";\r\nimport { validator } from 'validator';\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-registration',\r\n  templateUrl: 'registration.html',\r\n  animations: [\r\n    trigger(\r\n      'enterAnimation', [\r\n        transition(':enter', [\r\n          style({ transform: 'translateY(-10px)', opacity: 0 }),\r\n          animate('200ms', style({ transform: 'translateY(0)', opacity: 1 }))\r\n        ]),\r\n        transition(':leave', [\r\n          style({ transform: 'translateY(0)', opacity: 1 }),\r\n          animate('200ms', style({ transform: 'translateY(-10px)', opacity: 0 }))\r\n        ])\r\n      ]\r\n    ),\r\n    trigger(\r\n      'tagAnimation', [\r\n        transition(':enter', [\r\n          style({ opacity: 0 }),\r\n          animate('600ms', style({ opacity: 1 }))\r\n        ]),\r\n        transition(':leave', [\r\n          style({ transform: 'translateY(0)', opacity: 1 }),\r\n          animate('200ms', style({ transform: 'translateY(-10px)', opacity: 0 }))\r\n        ])\r\n      ]\r\n    ),\r\n  ],\r\n})\r\nexport class RegistrationPage implements OnInit {\r\n\r\n  myForm: FormGroup;\r\n  tags: Tag[];\r\n\r\n  constructor(private fb: FormBuilder,\r\n    public navCtrl: NavController,\r\n    private loginService: LoginService,\r\n    private tagService: TagService,\r\n    private toastCtrl: ToastController) {\r\n  }\r\n\r\n  /**\r\n   * Called after register form has been submitted\r\n   */\r\n  submitRegistration() {\r\n    if (this.myForm.valid) {\r\n\r\n      let tagIds = [];\r\n      if (this.tags) {\r\n        for (let tag of this.tags) {\r\n          tagIds.push(tag.id);\r\n        }\r\n      }\r\n\r\n      let user = new User(this.myForm.value.username, this.myForm.value.email, this.myForm.value.password, this.myForm.value.firstname, this.myForm.value.lastname, null, tagIds);\r\n      this.loginService.register(user).then(() => {\r\n        this.toastCtrl.create({\r\n          message: \"Registration erfolgreich! Eine BestÃ¤tigungs Email wurde an Ihre E-Mail Adresse gesandt.\",\r\n          duration: 5000\r\n        }).present();\r\n        this.navCtrl.setRoot(\"LoginPage\");\r\n      }).catch((error) => {\r\n        this.toastCtrl.create({\r\n          message: \"Registration not successful!\",\r\n          duration: 3000\r\n        }).present();\r\n      });\r\n    }\r\n  }\r\n\r\n  addSkill() {\r\n    this.tagService.openTagDialog((this.tags) ? this.tags : null).then((result) => {\r\n      this.tags = result;\r\n    }).catch((error) => {\r\n      if (error) {\r\n        this.toastCtrl.create({\r\n          message: \"Error getting Tags\",\r\n          duration: 2000\r\n        }).present();\r\n      }\r\n    });\r\n  }\r\n\r\n  removeTag(tag: Tag) {\r\n    this.tags.splice(this.tags.indexOf(tag), 1);\r\n  }\r\n\r\n  ngOnInit() {\r\n    //Initialize Register form\r\n    this.myForm = new FormGroup({\r\n      'firstname': new FormControl(null, [Validators.required, Validators.maxLength(15), nameValidator]),\r\n      'lastname': new FormControl(null, [Validators.required, Validators.maxLength(15), nameValidator]),\r\n      'username': new FormControl(null, [Validators.required, Validators.minLength(5), Validators.maxLength(15)]),\r\n      'email': new FormControl(null, [Validators.required, Validators.email]),\r\n      'password': new FormControl(null, [Validators.required, Validators.maxLength(15), Validators.minLength(5)]),\r\n      'repeatPassword': new FormControl(null, [Validators.required, Validators.maxLength(15), Validators.minLength(5)])\r\n    }, matchingPasswords('password', 'repeatPassword'));\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/registration/registration.ts","import { FormGroup } from '@angular/forms';\r\n\r\nexport function matchingPasswords(passwordKey: string, confirmPasswordKey: string) {\r\n    return (group: FormGroup): { [key: string]: any } => {\r\n        let password = group.controls[passwordKey];\r\n        let confirmPassword = group.controls[confirmPasswordKey];\r\n\r\n        if (password.value !== confirmPassword.value) {\r\n            return {\r\n                mismatchedPasswords: true\r\n            };\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/registration/validators/matchingPasswordsValidator.ts","/** A hero's name can't match the given regular expression */\r\nimport { ValidatorFn } from \"@angular/forms/src/directives/validators\";\r\nimport { AbstractControl, FormControl } from \"@angular/forms/src/model\";\r\n\r\nexport function nameValidator(control: FormControl) {\r\n    console.log(control);\r\n    let problem = false;\r\n    let regexp = new RegExp('^[a-zA-ZÃ¶ÃÃ¤ÃÃ¼Ã]*$');\r\n    if (!regexp.test(control.value)) problem = true;\r\n    return problem ? { 'invalidName': { value: control.value } } : null;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/registration/validators/nameValidator.ts"],"sourceRoot":""}