{"version":3,"sources":["../../../src/@ionic-native/plugins/firebase-dynamic-links/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,MAAA,EAAQ,OAAA,EAAS,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AASxE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAoDG;AAWH;IAA0C,wCAAiB;IAA3D;;IAuBA,CAAC;IArBC;;;OAGG;IAEH,4CAAa,GAAb,cAAgC,MAAM,CAAC,CAAC,CAAC;IAEzC;;;;OAIG;IAEH,6CAAc,GAAd,UAAe,OAA4B,IAAkB,MAAM,CAAC,CAAC,CAAC;IAEjE,+BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,mCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IAfA;QADC,OAAO,EAAE;;;;6DAC+B;IAQzC;QADC,OAAO,EAAE;;;;8DAC4D;IAf3D,oBAAoB;QAVhC,MAAM,CAAC;YACN,UAAU,EAAE,sBAAsB;YAClC,MAAM,EAAE,uCAAuC;YAC/C,SAAS,EAAE,uCAAuC;YAClD,IAAI,EAAE,oEAAoE;YAC1E,OAAO,EAAE,kIAAkI;YAC3I,gBAAgB,EAAE,CAAC,YAAY,EAAE,UAAU,CAAC;YAC5C,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC;SAC9B,CAAC;OAEW,oBAAoB,CAuBhC;IAAD,2BAAC;CAvBD,AAuBC,CAvByC,iBAAiB,GAuB1D;SAvBY,oBAAoB","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\n\nexport interface DynamicLinksOptions {\n  title: string;\n  message: string;\n  deepLink?: string;\n  callToActionText?: string;\n}\n\n/**\n * @beta\n * @name Firebase Dynamic Links\n * @description\n * Cordova plugin for Firebase Invites and Firebase Dynamic Links\n *\n * Variables APP_DOMAIN and APP_PATH specify web URL where your app will start an activity to handle the link. They also used to setup support for App Indexing.\n * Variable REVERSED_CLIENT_ID can be found in your GoogleService-Info.plist under the same key name.\n * Variable PHOTO_LIBRARY_USAGE_DESCRIPTION specifies required value for NSPhotoLibraryUsageDescription on iOS.\n * Go to firebase console and export google-services.json and GoogleService-Info.plist. Put those files into the root of your cordova app folder.\n *\n * Preferences:\n *\n * Preferences GoogleIOSClientId and GoogleAndroidClientId are used to setup dynamic links when you have an app for several platforms.\n * You can find values at your GoogleService-Info.plist (key ANDROID_CLIENT_ID) and google-services.json (key client[0].oauth_client[0].client_id).\n *\n *config.xml:\n * ```xml\n * <platform name=\"android\">\n *     <preference name=\"GoogleIOSClientId\" value=\"...\" />\n * </platform>\n * <platform name=\"ios\">\n *     <preference name=\"GoogleAndroidClientId\" value=\"...\" />\n * </platform>\n * ```\n * @usage\n * ```typescript\n * import { FirebaseDynamicLinks } from '@ionic-native/firebase-dynamic-links';\n *\n *\n * constructor(private firebaseDynamicLinks: FirebaseDynamicLinks) { }\n *\n * ...\n * // The deepLink and callToActionText properties are optional\n * const options: DynamicLinksOptions = {\n *   title: 'My Title';\n *   message: 'My message';\n *   deepLink: 'http://example.com/';\n *   callToActionText: 'Message on button';\n * }\n *\n * this.firebaseDynamicLinks.sendInvitation(options)\n *   .then((res: any) => console.log(res))\n *   .catch((error: any) => console.error(error));\n *\n * this.firebaseDynamicLinks.onDynamicLink()\n *   .then((res: any) => console.log(res)) //Handle the logic here after opening the app with the Dynamic link\n *   .catch((error:any) => console.log(error));\n * ```\n *\n * @interfaces\n * DynamicLinksOptions\n */\n@Plugin({\n  pluginName: 'FirebaseDynamicLinks',\n  plugin: ' cordova-plugin-firebase-dynamiclinks',\n  pluginRef: 'cordova.plugins.firebase.dynamiclinks',\n  repo: 'https://github.com/chemerisuk/cordova-plugin-firebase-dynamiclinks',\n  install: 'ionic cordova plugin add cordova-plugin-firebase-dynamiclinks --save --variable APP_DOMAIN=\"example.com\" --variable APP_PATH=\"/\"',\n  installVariables: ['APP_DOMAIN', 'APP_PATH'],\n  platforms: ['Android', 'iOS']\n})\n\nexport class FirebaseDynamicLinks extends IonicNativePlugin {\n\n  /**\n   * Registers callback that is triggered on each dynamic link click.\n   * @return {Promise<any>} Returns a promise\n   */\n  @Cordova()\n  onDynamicLink(): Promise<any> { return; }\n\n  /**\n   * Display invitation dialog.\n   * @param options {DynamicLinksOptions} Some param to configure something\n   * @return {Promise<any>} Returns a promise\n   */\n  @Cordova()\n  sendInvitation(options: DynamicLinksOptions): Promise<any> { return; }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}