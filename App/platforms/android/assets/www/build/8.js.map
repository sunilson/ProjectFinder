{"version":3,"sources":["../../src/pages/change-password/change-password.module.ts","../../src/pages/change-password/change-password.ts","../../src/pages/change-password/validators/matchingPasswordsValidator.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACO;AAUvD,IAAa,wBAAwB;IAArC;IAAuC,CAAC;IAAD,+BAAC;AAAD,CAAC;AAA3B,wBAAwB;IARpC,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,4EAAkB;SACnB;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,4EAAkB,CAAC;SAC7C;KACF,CAAC;GACW,wBAAwB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;ACXa;AACO;AACgC;AAEb;AACF;AAE1E;;;;;GAKG;AAqBH,IAAa,kBAAkB;IAI7B,4BAAmB,OAAsB,EAAS,SAAoB,EAAU,EAAe;QAA5E,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAAU,OAAE,GAAF,EAAE,CAAa;IAC/F,CAAC;IAED,2CAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;IACnD,CAAC;IAED,2CAAc,GAAd;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;YAC5B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QACvC,CAAC;IACH,CAAC;IAED,qCAAQ,GAAR;QACE,0BAA0B;QAC1B,IAAI,CAAC,YAAY,GAAG,IAAI,iEAAS,CAAC;YAChC,UAAU,EAAE,IAAI,mEAAW,CAAC,IAAI,EAAE,CAAC,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,kEAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3G,gBAAgB,EAAE,IAAI,mEAAW,CAAC,IAAI,EAAE,CAAC,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,kEAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SAClH,EAAE,yGAAiB,CAAC,UAAU,EAAE,gBAAgB,CAAC,CAAC,CAAC;IACtD,CAAC;IAEH,yBAAC;AAAD,CAAC;AAzBY,kBAAkB;IAlB9B,wEAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;QAChC,WAAW,EAAwB;QACnC,gFAAU,CAAE;YACV,mFACE,UAAgB,EAAE;gBAChB,+EAAU,CAAC,QAAQ,EAAE;oBACnB,4EAAM,CAAE,SAAS,0EAAE,gBAAmB,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC;mBACc;+FACnE;gBACF,+EAAU,CAAC,QAAQ,EAAE;oBACnB,4EAAM,CAAE,SAAS,0EAAE,YAAe,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC;kBACsB;cACvE;UAEL;OACF;KACF,CAAC;uBAK+F;AAqBhG;SAzBY,kBAAkB,gB;;;;;;;;;AChCzB,2BAA4B,WAAmB,EAAE,kBAA0B;IAC7E,MAAM,CAAC,UAAC,KAAgB;QACpB,IAAI,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAC3C,IAAI,eAAe,GAAG,KAAK,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;QAEzD,EAAE,CAAC,CAAC,QAAQ,CAAC,KAAK,KAAK,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;YAC3C,MAAM,CAAC;gBACH,mBAAmB,EAAE,IAAI;aAC5B,CAAC;QACN,CAAC;IACL,CAAC;AACL,CAAC","file":"8.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { ChangePasswordPage } from './change-password';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ChangePasswordPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(ChangePasswordPage),\r\n  ],\r\n})\r\nexport class ChangePasswordPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/change-password/change-password.module.ts","import { User } from './../../data/User';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\r\nimport { NgForm, FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\r\nimport { Validator } from 'validator'\r\nimport { matchingPasswords } from \"./validators/matchingPasswordsValidator\";\r\nimport { trigger, style, animate, transition } from '@angular/animations';\r\n\r\n/**\r\n * Generated class for the ChangePasswordPage page.\r\n *\r\n * See https://ionicframework.com/docs/components/#navigation for more info on\r\n * Ionic pages and navigation.\r\n */\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-change-password',\r\n  templateUrl: 'change-password.html',\r\n  animations: [\r\n    trigger(\r\n      'enterAnimation', [\r\n        transition(':enter', [\r\n          style({ transform: 'translateY(-10px)', opacity: 0 }),\r\n          animate('200ms', style({ transform: 'translateY(0)', opacity: 1 }))\r\n        ]),\r\n        transition(':leave', [\r\n          style({ transform: 'translateY(0)', opacity: 1 }),\r\n          animate('200ms', style({ transform: 'translateY(-10px)', opacity: 0 }))\r\n        ])\r\n      ]\r\n    )\r\n  ],\r\n})\r\nexport class ChangePasswordPage implements OnInit {\r\n\r\n  passwordForm: FormGroup;\r\n  \r\n  constructor(public navCtrl: NavController, public navParams: NavParams, private fb: FormBuilder) {\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    console.log('ionViewDidLoad ChangePasswordPage');\r\n  }\r\n\r\n  submitPassword() {\r\n    if (this.passwordForm.valid) {\r\n      console.log(this.passwordForm.value);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    //Initialize Register form\r\n    this.passwordForm = new FormGroup({\r\n      'password': new FormControl(null, [Validators.required, Validators.maxLength(15), Validators.minLength(5)]),\r\n      'repeatPassword': new FormControl(null, [Validators.required, Validators.maxLength(15), Validators.minLength(5)])\r\n    }, matchingPasswords('password', 'repeatPassword'));\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/change-password/change-password.ts","import { FormGroup } from '@angular/forms';\r\n\r\nexport function matchingPasswords(passwordKey: string, confirmPasswordKey: string) {\r\n    return (group: FormGroup): { [key: string]: any } => {\r\n        let password = group.controls[passwordKey];\r\n        let confirmPassword = group.controls[confirmPasswordKey];\r\n\r\n        if (password.value !== confirmPassword.value) {\r\n            return {\r\n                mismatchedPasswords: true\r\n            };\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/change-password/validators/matchingPasswordsValidator.ts"],"sourceRoot":""}