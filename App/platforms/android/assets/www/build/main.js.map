{"version":3,"sources":["../../src/services/location-service.ts","../../node_modules/@angular/core/@angular lazy","../../src/services/notification-service.ts","../../src lazy","../../src/data/Tag.ts","../../src/services/storage-service.ts","../../src/services/tag-service.ts","../../src/services/project-service.ts","../../src/data/Project.ts","../../src/data/Location.ts","../../src/services/refresh-service.ts","../../src/services/search-service.ts","../../src/services/image-upload-service.ts","../../src/data/Payment.ts","../../src/data/Application.ts","../../src/data/User.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../node_modules/moment/locale ^/.*$","../../src/data/ChatMessage.ts","../../src/data/SearchSettings.ts","../../src/data/constants/NetworkConstants.ts","../../src/services/http-interceptor.ts","../../src/services/mapper-service.ts","../../src/services/login-service.ts","../../src/app/app.component.ts","../../src/pages/home/home.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAmD;AACgB;AAG5B;AACI;AAC0B;AAKrE,IAAa,eAAe;IAOxB,yBAAoB,WAAwB,EAChC,cAA8B,EAC9B,SAA0B,EAC1B,WAA8B;QAHtB,gBAAW,GAAX,WAAW,CAAa;QAChC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,cAAS,GAAT,SAAS,CAAiB;QAC1B,gBAAW,GAAX,WAAW,CAAmB;QANlC,mBAAc,GAAsB,IAAI,qDAAO,EAAE,CAAC;QAClD,6BAAwB,GAAyB,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;IAO5F,CAAC;IAEM,kDAAwB,GAA/B,UAAgC,QAAkB;QAC9C,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACvC,CAAC;IAEM,wCAAc,GAArB;QACI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,OAAO,EAAE,CAAC;QACnD,MAAM,CAAC,IAAI,CAAC,wBAAwB,CAAC;IACzC,CAAC;IAED,+FAA+F;IAC/F,qCAAqC;IAC9B,4CAAkB,GAAzB;QAAA,iBAiBC;QAhBG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,MAAM,CAAC,KAAI,CAAC,cAAc,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,eAAK;gBAC7D,EAAE,CAAC,CAAC,KAAK,CAAC;oBAAC,MAAM,CAAC,IAAI,KAAK,CAAC,+DAA+D,CAAC,CAAC,CAAC;gBAE9F,EAAE,CAAC,CAAC,KAAI,CAAC,eAAe,IAAI,KAAI,CAAC,eAAe,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC,eAAe,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC;oBAClG,OAAO,CAAC,KAAI,CAAC,eAAe,CAAC,CAAC;gBAClC,CAAC;gBAED,KAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,WAAW;oBACrE,KAAI,CAAC,eAAe,GAAG,WAAW,CAAC;oBACnC,OAAO,CAAC,KAAI,CAAC,eAAe,CAAC,CAAC;gBAClC,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;oBACX,MAAM,CAAC,KAAK,CAAC,CAAC;gBAClB,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC;IACN,CAAC;IAEM,uCAAa,GAApB,UAAqB,MAAM,EAAE,GAAG;QAAhC,iBA4BC;QA3BG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,IAAI,MAAM,GAAG,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC;gBACjC,OAAO,EAAE,8BAA8B;aAC1C,CAAC,CAAC;YACH,MAAM,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC;gBAClB,KAAI,CAAC,aAAa,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;gBAC/D,IAAI,QAAQ,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAC1C,QAAQ,CAAC,OAAO,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,EAAE,UAAC,MAAM,EAAE,MAAM;oBACpD,EAAE,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,CAAC,CAAC;wBAClB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BACZ,KAAI,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,UAAC,YAAY,EAAE,MAAM;gCAClF,EAAE,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC,CAAC;oCACvD,MAAM,CAAC,OAAO,EAAE;oCAChB,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;gCAC/B,CAAC;gCAAC,IAAI,CAAC,CAAC;oCACJ,MAAM,CAAC,OAAO,EAAE,CAAC;oCACjB,MAAM,EAAE,CAAC;gCACb,CAAC;4BACL,CAAC,CAAC,CAAC;wBACP,CAAC;oBACL,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,MAAM,CAAC,OAAO,EAAE,CAAC;wBACjB,MAAM,EAAE,CAAC;oBACb,CAAC;gBACL,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IACL,sBAAC;AAAD,CAAC;AAzEY,eAAe;IAD3B,yEAAU,EAAE;qCAQwB,8EAAW;QAChB,wEAAc;QACnB,sEAAe;QACb,wEAAiB;GAVjC,eAAe,CAyE3B;AAzE2B;;;;;;;;ACX5B;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,kC;;;;;;;;;;;;;;;;;;;;;;;;;ACVmD;AACV;AAC+B;AACtB;AACP;AACO;AACqB;AAGvE,IAAa,mBAAmB;IAI5B,6BAAoB,QAAkB,EAC1B,IAAgB,EAChB,QAAkB,EAClB,cAA8B,EAC9B,iBAAqC;QAJjD,iBAqFC;QArFmB,aAAQ,GAAR,QAAQ,CAAU;QAC1B,SAAI,GAAJ,IAAI,CAAY;QAChB,aAAQ,GAAR,QAAQ,CAAU;QAClB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,sBAAiB,GAAjB,iBAAiB,CAAoB;QANzC,yBAAoB,GAAG,EAAE,CAAC;QAQ9B,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,KAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC,cAAI;gBACnC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC;oBAAC,KAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC;YACzD,CAAC,CAAC,CAAC;YAEH,KAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC,eAAK;gBAC7C,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;oBAAC,KAAI,CAAC,iBAAiB,CAAC,kBAAkB,EAAE,CAAC;YAC5D,CAAC,CAAC,CAAC;YAEH,KAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,eAAK;gBAC1C,KAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,WAAC;oBAClC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACnB,CAAC,CAAC;YACN,CAAC,CAAC,CAAC;YAEH,KAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,OAAO,EAAE,UAAC,KAAK;gBACrC,6BAA6B;gBAC7B,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,oBAAoB,CAAC,KAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3E,CAAC,CAAC,CAAC;YAEH,KAAI,CAAC,QAAQ,CAAC,kBAAkB,EAAE,CAAC,SAAS,CAAC,sBAAY;gBACrD,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC;oBAAC,MAAM,CAAC;gBAE1B,KAAI,CAAC,cAAc,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,eAAK;oBAC1D,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;wBACT,YAAY,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;wBAChC,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;wBAC7C,MAAM,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;4BACxB,KAAK,gBAAgB;gCACjB,KAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC;oCAC5B,EAAE,EAAE,YAAY,CAAC,EAAE;oCACnB,KAAK,EAAE,gBAAgB;oCACvB,IAAI,EAAE,yCAAyC,GAAG,YAAY,CAAC,YAAY,GAAG,YAAY;oCAC1F,SAAS,EAAE,gBAAgB;iCAC9B,CAAC,CAAC;gCACH,KAAK,CAAC;4BACV,KAAK,0BAA0B;gCAC3B,KAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC;oCAC5B,EAAE,EAAE,YAAY,CAAC,EAAE;oCACnB,KAAK,EAAE,gBAAgB;oCACvB,IAAI,EAAE,+BAA+B,GAAG,YAAY,CAAC,YAAY,GAAG,oBAAoB;iCAC3F,CAAC,CAAC;gCACH,KAAK,CAAC;4BACV,KAAK,eAAe;gCAChB,KAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC;oCAC5B,EAAE,EAAE,YAAY,CAAC,EAAE;oCACnB,KAAK,EAAE,gBAAgB;oCACvB,IAAI,EAAE,cAAc,GAAG,YAAY,CAAC,YAAY,GAAG,qBAAqB;iCAC3E,CAAC,CAAC;gCACH,KAAK,CAAC;4BACV,KAAK,cAAc;gCACf,KAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC;oCAC5B,EAAE,EAAE,YAAY,CAAC,EAAE;oCACnB,KAAK,EAAE,gBAAgB;oCACvB,IAAI,EAAE,cAAc,GAAG,YAAY,CAAC,YAAY,GAAG,0BAA0B;iCAChF,CAAC,CAAC;gCACH,KAAK,CAAC;4BACV,KAAK,gBAAgB;gCACjB,KAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC;oCAC5B,EAAE,EAAE,YAAY,CAAC,EAAE;oCACnB,KAAK,EAAE,gBAAgB;oCACvB,IAAI,EAAE,cAAc,GAAG,YAAY,CAAC,YAAY,GAAG,kBAAkB;iCACxE,CAAC,CAAC;gCACH,KAAK,CAAC;4BACV,KAAK,oBAAoB;gCACrB,KAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC;oCAC5B,EAAE,EAAE,YAAY,CAAC,EAAE;oCACnB,KAAK,EAAE,gBAAgB;oCACvB,IAAI,EAAE,eAAe,GAAG,YAAY,CAAC,SAAS,GAAG,qBAAqB,GAAG,YAAY,CAAC,YAAY,GAAG,YAAY;iCACpH,CAAC,CAAC;gCACH,KAAK,CAAC;4BACV;gCACI,KAAK,CAAC;wBACd,CAAC;oBACL,CAAC;gBACL,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED,8CAAgB,GAAhB,UAAiB,EAAU;QACvB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACxD,EAAE,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC;gBAAC,MAAM,CAAC,CAAC,CAAC;QACxD,CAAC;IACL,CAAC;IAED,oDAAsB,GAAtB;QAAA,iBAWC;QAVG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,eAAK;YAC/B,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,KAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,WAAC;gBAClC,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;gBACjC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACnB,CAAC,CAAC;QACN,CAAC,CAAC,CAAC,KAAK,CAAC,WAAC;YACN,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gDAAkB,GAAlB,UAAmB,KAAa;QAAhC,iBAUC;QATG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,0FAAgB,CAAC,QAAQ,GAAG,sBAAsB,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,GAAG;gBACzH,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;gBACvB,OAAO,EAAE,CAAC;YACd,CAAC,EAAE,UAAC,KAAK;gBACL,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,MAAM,CAAC,KAAK,CAAC,CAAC;YAClB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IACL,0BAAC;AAAD,CAAC;AAzHY,mBAAmB;IAD/B,yEAAU,EAAE;qCAKqB,wEAAQ;QACpB,wEAAU;QACN,+DAAQ;QACF,wEAAc;QACX,6FAAkB;GARxC,mBAAmB,CAyH/B;AAzH+B;;;;;;;;ACThC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;AC9EA;AAAA;IACI,aAAmB,EAAU,EAAS,KAAc;QAAjC,OAAE,GAAF,EAAE,CAAQ;QAAS,UAAK,GAAL,KAAK,CAAS;IAEpD,CAAC;IACL,UAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHsD;AACd;AACmB;AACX;AAIR;AACE;AAEJ;AAGvC,IAAa,cAAc;IAUvB,wBAAoB,OAAgB,EACxB,aAA4B,EAC5B,MAAc,EACd,QAAkB,EAClB,UAAsB;QAJd,YAAO,GAAP,OAAO,CAAS;QACxB,kBAAa,GAAb,aAAa,CAAe;QAC5B,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAU;QAClB,eAAU,GAAV,UAAU,CAAY;QAZ1B,eAAU,GAAkB,IAAI,qDAAO,EAAE,CAAC;QAC1C,yBAAoB,GAAqB,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;QAExE,kBAAa,GAAqB,IAAI,qDAAO,EAAE,CAAC;QAChD,4BAAuB,GAAwB,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;IAUzF,CAAC;IAEO,iCAAQ,GAAhB;QAAA,iBAkEC;QAjEG,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;YACV,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;gBAC/B,OAAO,EAAE,CAAC;YACd,CAAC,CAAC,CAAC;QACP,CAAC;QAGD,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC;YAC9B,MAAM,CAAC,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC;gBACtB,IAAI,EAAE,SAAS;gBACf,QAAQ,EAAE,SAAS;aACtB,CAAC,CAAC;QACP,CAAC,CAAC,CAAC,IAAI,CAAC,UAAC,EAAgB;YACrB,KAAI,CAAC,EAAE,GAAG,EAAE,CAAC;YACb,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC;gBACf,EAAE,CAAC,UAAU,CAAC,kJAAkJ,EAAE,EAAE,CAAC;gBACrK,EAAE,CAAC,UAAU,CAAC,6EAA6E,EAAE,EAAE,CAAC;gBAChG,EAAE,CAAC,UAAU,CAAC,+QAA+Q,EAAE,EAAE,CAAC;gBAClS,EAAE,CAAC,UAAU,CAAC,6PAA6P,EAAE,EAAE,CAAC;gBAChR,EAAE,CAAC,UAAU,CAAC,qMAAqM,EAAE,EAAE,CAAC;gBACxN,EAAE,CAAC,UAAU,CAAC,mOAAmO,EAAE,EAAE,CAAC;gBACtP,EAAE,CAAC,UAAU,CAAC,gOAAgO,EAAE,EAAE,CAAC;gBACnP,EAAE,CAAC,UAAU,CAAC,qPAAqP,EAAE,EAAE,CAAC;gBACxQ,EAAE,CAAC,UAAU,CAAC,uQAAuQ,EAAE,EAAE,CAAC;gBAC1R,EAAE,CAAC,UAAU,CAAC,+NAA+N,EAAE,EAAE,CAAC;gBAClP,EAAE,CAAC,UAAU,CAAC,uNAAuN,EAAE,EAAE,CAAC;aAC7O,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAmCF;IACF,CAAC;IAEM,kCAAS,GAAhB,UAAiB,IAAU;QAA3B,iBAiDC;QAhDG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,KAAI,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC;gBACjB,IAAI,OAAO,GAAG,EAAE,CAAC;gBACjB,OAAO,CAAC,IAAI,CAAC,iIACN,IAAI,CAAC,EAAE,oCACP,IAAI,CAAC,QAAQ,oCACb,IAAI,CAAC,KAAK,oCACV,IAAI,CAAC,SAAS,oCACd,IAAI,CAAC,QAAQ,oCACb,IAAI,CAAC,cAAc,0BACxB,CAAC,CAAC;gBAEJ,OAAO,CAAC,IAAI,CAAC,yCAAyC,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC;gBACxE,GAAG,CAAC,CAAY,UAAS,EAAT,SAAI,CAAC,IAAI,EAAT,cAAS,EAAT,IAAS;oBAApB,IAAI,GAAG;oBACR,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;iBAC3D;gBAED,OAAO,CAAC,IAAI,CAAC,mDAAmD,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC;gBAClF,GAAG,CAAC,CAAgB,UAAmB,EAAnB,SAAI,CAAC,cAAc,EAAnB,cAAmB,EAAnB,IAAmB;oBAAlC,IAAI,OAAO;oBACZ,EAAE,CAAC,CAAC,OAAO,CAAC;wBAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,0BAA0B,CAAC,sBAAsB,EAAE,IAAI,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC;iBACxG;gBAED,OAAO,CAAC,IAAI,CAAC,gDAAgD,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC;gBAC/E,GAAG,CAAC,CAAgB,UAAgB,EAAhB,SAAI,CAAC,WAAW,EAAhB,cAAgB,EAAhB,IAAgB;oBAA/B,IAAI,OAAO;oBACZ,EAAE,CAAC,CAAC,OAAO,CAAC;wBAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,0BAA0B,CAAC,mBAAmB,EAAE,IAAI,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC;iBACrG;gBAED,OAAO,CAAC,IAAI,CAAC,iDAAiD,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC;gBAChF,GAAG,CAAC,CAAoB,UAAiB,EAAjB,SAAI,CAAC,YAAY,EAAjB,cAAiB,EAAjB,IAAiB;oBAApC,IAAI,WAAW;oBAChB,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,8BAA8B,CAAC,IAAI,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC,CAAC;iBAC3E;gBAED,IAAI,UAAU,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC9B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBACtC,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC/C,CAAC;gBAED,KAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;oBAClC,OAAO,CAAC,IAAI,CAAC,CAAC;gBAClB,CAAC,EAAE,UAAC,KAAK;oBACL,MAAM,CAAC,KAAK,CAAC,CAAC;gBAClB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;oBACX,MAAM,CAAC,KAAK,CAAC,CAAC;gBAClB,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;gBACX,MAAM,CAAC,KAAK,CAAC,CAAC;YAClB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,qCAAY,GAAnB,UAAoB,OAAgB;QAApC,iBAiEC;QA/DG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,KAAI,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC;gBACjB,IAAI,KAAK,GAAG,EAAE,CAAC;gBAEf,KAAK,CAAC,IAAI,CAAC,yKACR,OAAO,CAAC,EAAE,gCACV,OAAO,CAAC,KAAK,gCACb,OAAO,CAAC,WAAW,gCACnB,OAAO,CAAC,SAAS,gCACjB,OAAO,CAAC,OAAO,+BACf,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,8BAChC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,+BAC/B,OAAO,CAAC,eAAe,+BACvB,OAAO,CAAC,MAAM,CAAC,EAAE,+BACjB,OAAO,CAAC,MAAM,sBACnB,CAAC,CAAC;gBAEA,IAAI,WAAW,GAAG,KAAI,CAAC,0BAA0B,CAAC,kBAAkB,EAAE,OAAO,CAAC,EAAE,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;gBAClG,GAAG,CAAC,CAAU,UAAW,EAAX,2BAAW,EAAX,yBAAW,EAAX,IAAW;oBAApB,IAAI,CAAC;oBACN,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBACjB;gBAED,KAAK,CAAC,IAAI,CAAC,+CAA+C,GAAG,OAAO,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC;gBAC/E,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;oBACf,GAAG,CAAC,CAAY,UAAY,EAAZ,YAAO,CAAC,IAAI,EAAZ,cAAY,EAAZ,IAAY;wBAAvB,IAAI,GAAG;wBACR,IAAI,aAAW,GAAG,KAAI,CAAC,yBAAyB,CAAC,OAAO,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;wBAClE,GAAG,CAAC,CAAU,UAAW,EAAX,6BAAW,EAAX,yBAAW,EAAX,IAAW;4BAApB,IAAI,CAAC;4BACN,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;yBACjB;qBACJ;gBACL,CAAC;gBAED,KAAK,CAAC,IAAI,CAAC,kDAAkD,GAAG,OAAO,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC;gBAClF,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;oBAClB,GAAG,CAAC,CAAe,UAAe,EAAf,YAAO,CAAC,OAAO,EAAf,cAAe,EAAf,IAAe;wBAA7B,IAAI,MAAM;wBACX,IAAI,aAAW,GAAG,KAAI,CAAC,0BAA0B,CAAC,kBAAkB,EAAE,OAAO,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;wBAC1F,GAAG,CAAC,CAAU,UAAW,EAAX,6BAAW,EAAX,yBAAW,EAAX,IAAW;4BAApB,IAAI,CAAC;4BACN,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;yBACjB;qBACJ;gBACL,CAAC;gBAED,KAAK,CAAC,IAAI,CAAC,uDAAuD,GAAG,OAAO,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC;gBACvF,EAAE,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;oBACvB,GAAG,CAAC,CAAoB,UAAoB,EAApB,YAAO,CAAC,YAAY,EAApB,cAAoB,EAApB,IAAoB;wBAAvC,IAAI,WAAW;wBAChB,IAAI,aAAW,GAAG,KAAI,CAAC,iCAAiC,CAAC,OAAO,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC;wBAClF,GAAG,CAAC,CAAU,UAAW,EAAX,6BAAW,EAAX,yBAAW,EAAX,IAAW;4BAApB,IAAI,CAAC;4BACN,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;yBACjB;qBACJ;gBACL,CAAC;gBAED,KAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;oBAC7B,OAAO,CAAC,OAAO,CAAC,CAAC;gBACrB,CAAC,EAAE,UAAC,KAAK;oBACL,MAAM,CAAC,KAAK,CAAC,CAAC;gBAClB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;oBACX,MAAM,CAAC,KAAK,CAAC,CAAC;gBAClB,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;gBACX,MAAM,CAAC,KAAK,CAAC,CAAC;YAClB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,kCAAS,GAAhB,UAAiB,IAAW;QAA5B,iBAoBC;QAnBG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,KAAI,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC;gBAEjB,IAAI,KAAK,GAAG,EAAE,CAAC;gBACf,GAAG,CAAC,CAAY,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI;oBAAf,IAAI,GAAG;oBACR,KAAK,CAAC,IAAI,CAAC,yDAAsD,GAAG,CAAC,EAAE,cAAO,GAAG,CAAC,KAAK,QAAI,CAAC,CAAC;iBAChG;gBAED,KAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;oBAC7B,OAAO,CAAC,IAAI,CAAC,CAAC;gBAClB,CAAC,EAAE,UAAC,KAAK;oBACL,MAAM,CAAC,KAAK,CAAC,CAAC;gBAClB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;oBACX,MAAM,CAAC,KAAK,CAAC,CAAC;gBAClB,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;gBACX,MAAM,CAAC,KAAK,CAAC,CAAC;YAClB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,yCAAgB,GAAvB,UAAwB,WAAwB;QAAhD,iBA6CC;QA5CG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,KAAI,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC;gBACjB,IAAI,KAAK,GAAG,EAAE,CAAC;gBAEf,IAAI,SAAS,GAAG,KAAI,CAAC,iCAAiC,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;gBAC5E,GAAG,CAAC,CAAU,UAAS,EAAT,uBAAS,EAAT,uBAAS,EAAT,IAAS;oBAAlB,IAAI,CAAC;oBACN,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBACjB;gBAED,IAAI,UAAU,GAAG,KAAI,CAAC,8BAA8B,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;gBACzE,GAAG,CAAC,CAAU,UAAU,EAAV,yBAAU,EAAV,wBAAU,EAAV,IAAU;oBAAnB,IAAI,CAAC;oBACN,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBACjB;gBAED,IAAI,UAAU,GAAG,EAAE,CAAC;gBACpB,GAAG,CAAC,CAAY,UAAuB,EAAvB,gBAAW,CAAC,MAAM,CAAC,IAAI,EAAvB,cAAuB,EAAvB,IAAuB;oBAAlC,IAAI,GAAG;oBACR,UAAU,CAAC,IAAI,CAAC,KAAI,CAAC,sBAAsB,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;iBAC5E;gBAED,GAAG,CAAC,CAAU,UAAU,EAAV,yBAAU,EAAV,wBAAU,EAAV,IAAU;oBAAnB,IAAI,CAAC;oBACN,GAAG,CAAC,CAAW,UAAC,EAAD,OAAC,EAAD,eAAC,EAAD,IAAC;wBAAX,IAAI,EAAE;wBACP,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;qBAClB;iBACJ;gBAED,KAAK,CAAC,IAAI,CAAC,0IACY,WAAW,CAAC,EAAE,mDACd,WAAW,CAAC,OAAO,mDACnB,WAAW,CAAC,MAAM,CAAC,EAAE,mDACrB,WAAW,CAAC,OAAO,CAAC,EAAE,mDACtB,WAAW,CAAC,MAAM,0CACvB,CAAC,CAAC;gBAEpB,KAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;oBAC7B,OAAO,CAAC,WAAW,CAAC,CAAC;gBACzB,CAAC,EAAE,UAAC,KAAK;oBACL,MAAM,CAAC,KAAK,CAAC,CAAC;gBAClB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;oBACX,MAAM,CAAC,KAAK,CAAC,CAAC;gBAClB,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;gBACX,MAAM,CAAC,KAAK,CAAC,CAAC;YAClB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,0DAAiC,GAAzC,UAA0C,OAAgB;QACtD,IAAI,WAAW,GAAG,EAAE,CAAC;QAErB,WAAW,CAAC,IAAI,CAAC,+FACM,OAAO,CAAC,EAAE,2CACV,OAAO,CAAC,KAAK,kCAClB,CAAC,CAAC;QAEpB,WAAW,CAAC,IAAI,CAAC,2DACQ,OAAO,CAAC,KAAK,wDACD,OAAO,CAAC,EAAE,iCAC9B,CAAC,CAAC;QAEnB,MAAM,CAAC,WAAW,CAAC;IACvB,CAAC;IAEO,0DAAiC,GAAzC,UAA0C,SAAS,EAAE,WAAwB;QACzE,IAAI,WAAW,GAAG,EAAE,CAAC;QAErB,IAAI,WAAW,GAAG,IAAI,CAAC,8BAA8B,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAC1E,GAAG,CAAC,CAAU,UAAW,EAAX,2BAAW,EAAX,yBAAW,EAAX,IAAW;YAApB,IAAI,CAAC;YACN,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACvB;QAED,WAAW,CAAC,IAAI,CAAC,iFAAiF,GAAG,SAAS,GAAG,MAAM,GAAG,WAAW,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC;QACjJ,WAAW,CAAC,IAAI,CAAC,kIACM,WAAW,CAAC,EAAE,2CACd,WAAW,CAAC,OAAO,2CACnB,WAAW,CAAC,MAAM,CAAC,EAAE,2CACrB,WAAW,CAAC,OAAO,CAAC,EAAE,2CACtB,WAAW,CAAC,MAAM,kCACvB,CAAC,CAAC;QAEpB,MAAM,CAAC,WAAW,CAAC;IACvB,CAAC;IAEO,uDAA8B,GAAtC,UAAuC,IAAU;QAC7C,IAAI,WAAW,GAAG,EAAE,CAAC;QAErB,WAAW,CAAC,IAAI,CAAC,yHACE,IAAI,CAAC,EAAE,uCACP,IAAI,CAAC,SAAS,uCACd,IAAI,CAAC,QAAQ,uCACb,IAAI,CAAC,cAAc,uCACnB,IAAI,CAAC,KAAK,0BACnB,CAAC,CAAC;QACZ,WAAW,CAAC,IAAI,CAAC,2DACY,IAAI,CAAC,SAAS,gDACf,IAAI,CAAC,QAAQ,sDACP,IAAI,CAAC,cAAc,6CAC5B,IAAI,CAAC,KAAK,qDACD,IAAI,CAAC,EAAE,iCACxB,CAAC,CAAC;QAEnB,MAAM,CAAC,WAAW,CAAC;IACvB,CAAC;IAEO,kDAAyB,GAAjC,UAAkC,SAAS,EAAE,GAAQ;QACjD,IAAI,WAAW,GAAG,EAAE,CAAC;QAErB,WAAW,CAAC,IAAI,CAAC,kEAAkE,GAAG,GAAG,CAAC,EAAE,GAAG,MAAM,GAAG,SAAS,GAAG,IAAI,CAAC,CAAC;QAC1H,WAAW,CAAC,IAAI,CAAC,mFACE,GAAG,CAAC,EAAE,uCACN,GAAG,CAAC,KAAK,4BAClB,CAAC,CAAC;QAEZ,MAAM,CAAC,WAAW,CAAC;IACvB,CAAC;IAEO,mDAA0B,GAAlC,UAAmC,SAAiB,EAAE,SAAiB,EAAE,IAAU;QAC/E,IAAI,WAAW,GAAG,EAAE,CAAC;QAErB,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YACZ,WAAW,CAAC,IAAI,CAAC,wBAAwB,GAAG,SAAS,GAAG,gCAAgC,GAAG,IAAI,CAAC,EAAE,GAAG,MAAM,GAAG,SAAS,GAAG,IAAI,CAAC,CAAC;QACpI,CAAC;QAED,WAAW,CAAC,IAAI,CAAC,8EAA2E,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,SAAS,GAAG,EAAE,kCAC3I,IAAI,CAAC,EAAE,2BACP,IAAI,CAAC,SAAS,2BACd,IAAI,CAAC,QAAQ,2BACb,IAAI,CAAC,cAAc,WAAI,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,iBACpG,CAAC,CAAC;QAEJ,WAAW,CAAC,IAAI,CAAC,2CACJ,IAAI,CAAC,SAAS,gCACf,IAAI,CAAC,QAAQ,sCACP,IAAI,CAAC,cAAc,WAAI,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,oCACrG,IAAI,CAAC,EAAE,iBACxB,CAAC,CAAC;QAEH,MAAM,CAAC,WAAW,CAAC;IACvB,CAAC;IAEO,mDAA0B,GAAlC,UAAmC,SAAiB,EAAE,MAAc,EAAE,OAAgB;QAElF,IAAI,WAAW,GAAG,EAAE,CAAC;QAErB,WAAW,CAAC,IAAI,CAAC,wBAAwB,GAAG,SAAS,GAAG,+BAA+B,GAAG,MAAM,GAAG,MAAM,GAAG,OAAO,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC;QAC/H,WAAW,CAAC,IAAI,CAAC,kHACF,OAAO,CAAC,EAAE,mCACV,OAAO,CAAC,KAAK,oCACb,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,EAAE,GAAG,MAAM,oCAC7C,OAAO,CAAC,SAAS,mCACjB,OAAO,CAAC,MAAM,0BACnB,CAAC,CAAC;QAEZ,WAAW,CAAC,IAAI,CAAC,mDACA,OAAO,CAAC,KAAK,0CACT,OAAO,CAAC,SAAS,sCACpB,OAAO,CAAC,MAAM,gDACH,OAAO,CAAC,EAAE,yBAC9B,CAAC,CAAC;QAEX,EAAE,CAAC,CAAC,SAAS,IAAI,mBAAmB,CAAC,CAAC,CAAC;YACnC,IAAI,WAAW,GAAG,IAAI,CAAC,0BAA0B,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;YAC9E,GAAG,CAAC,CAAU,UAAW,EAAX,2BAAW,EAAX,yBAAW,EAAX,IAAW;gBAApB,IAAI,CAAC;gBACN,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACvB;QACL,CAAC;QAED,MAAM,CAAC,WAAW,CAAC;IACvB,CAAC;IAEO,uDAA8B,GAAtC,UAAuC,MAAc,EAAE,WAAwB;QAE3E,IAAI,WAAW,GAAG,EAAE,CAAC;QAErB,WAAW,CAAC,IAAI,CAAC,2EAA2E,GAAG,MAAM,GAAG,MAAM,GAAG,WAAW,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC;QACxI,WAAW,CAAC,IAAI,CAAC,0HACF,WAAW,CAAC,EAAE,mCACd,WAAW,CAAC,OAAO,mCACnB,WAAW,CAAC,MAAM,CAAC,EAAE,mCACrB,WAAW,CAAC,OAAO,CAAC,EAAE,mCACtB,WAAW,CAAC,MAAM,0BACvB,CAAC,CAAC;QAEZ,IAAI,SAAS,GAAG,IAAI,CAAC,iCAAiC,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAC5E,GAAG,CAAC,CAAU,UAAS,EAAT,uBAAS,EAAT,uBAAS,EAAT,IAAS;YAAlB,IAAI,CAAC;YACN,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACvB;QAED,MAAM,CAAC,WAAW,CAAC;IACvB,CAAC;IAEO,+CAAsB,GAA9B,UAA+B,MAAc,EAAE,GAAQ;QAEnD,IAAI,WAAW,GAAG,EAAE,CAAC;QAErB,WAAW,CAAC,IAAI,CAAC,2DAA2D,GAAG,MAAM,GAAG,MAAM,GAAG,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC;QAChH,WAAW,CAAC,IAAI,CAAC,yDAAsD,GAAG,CAAC,EAAE,cAAO,GAAG,CAAC,KAAK,QAAI,CAAC,CAAC;QAEnG,MAAM,CAAC,WAAW,CAAC;IACvB,CAAC;IAEM,oCAAW,GAAlB,UAAmB,SAAiB;QAApC,iBA6EC;QA5EG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,KAAI,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC;gBACjB,IAAI,WAAW,GAAG,qDAAqD,GAAG,SAAS,GAAG,GAAG,CAAC;gBAE1F,IAAI,WAAW,GAAG,gPAE0B,SAAS,OAAG,CAAC;gBAEzD,IAAI,iBAAiB,GAAG,ocAGgB,SAAS,yCAChC,CAAC;gBAElB,IAAI,SAAS,GAAG,wMAE4B,SAAS,OAAG,CAAC;gBAEzD,gGAAgG;gBAEhG,IAAI,SAAS,GAAG,EAAE,CAAC;gBACnB,KAAI,CAAC,EAAE,CAAC,UAAU,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;oBACzC,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC7B,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;wBAAC,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC;oBAErD,SAAS,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;oBAC1D,SAAS,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;oBACxD,SAAS,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,WAAW,CAAC,CAAC;oBAEzC,IAAI,WAAW,GAAG,iGAA8F,SAAS,CAAC,QAAQ,CAAC,OAAG,CAAC;oBACvI,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC;wBACf,KAAI,CAAC,EAAE,CAAC,UAAU,CAAC,WAAW,EAAE,EAAE,CAAC;wBACnC,KAAI,CAAC,EAAE,CAAC,UAAU,CAAC,iBAAiB,EAAE,EAAE,CAAC;wBACzC,KAAI,CAAC,EAAE,CAAC,UAAU,CAAC,WAAW,EAAE,EAAE,CAAC;wBACnC,KAAI,CAAC,EAAE,CAAC,UAAU,CAAC,SAAS,EAAE,EAAE,CAAC;qBACpC,CAAC,CAAC;gBACP,CAAC,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;oBACR,SAAS,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;oBAC1B,SAAS,CAAC,cAAc,CAAC,GAAG,EAAE,CAAC;oBAC/B,SAAS,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;oBACzB,SAAS,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;oBACvB,SAAS,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC;oBAE1B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;wBAC1C,SAAS,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,KAAI,CAAC,aAAa,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAClF,CAAC;oBAED,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;wBAC1C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;wBACjC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG;4BAC5B,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;4BACjC,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;4BAC3C,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;4BACzC,cAAc,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC;yBACxD,CAAC;wBACF,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG;4BAC7B,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;yBACvC,CAAC;wBACF,SAAS,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,KAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC9F,CAAC;oBAED,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;wBAC1C,SAAS,CAAC,QAAQ,CAAC,GAAG,KAAI,CAAC,aAAa,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC7E,CAAC;oBAED,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;wBAC1C,SAAS,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC9E,CAAC;oBACD,OAAO,CAAC,KAAI,CAAC,aAAa,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC;gBACzD,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;oBACX,MAAM,CAAC,KAAK,CAAC,CAAC;gBAClB,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;gBACX,MAAM,CAAC,KAAK,CAAC,CAAC;YAClB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,wCAAe,GAAtB,UAAuB,aAAqB;QAA5C,iBAsCC;QArCG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,KAAI,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC;gBACjB,IAAI,gBAAgB,GAAG,kYAG4B,aAAa,OAAG,CAAC;gBAEpE,IAAI,SAAS,GAAG,EAAE,CAAC;gBACnB,KAAI,CAAC,EAAE,CAAC,UAAU,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;oBAC9C,IAAI,SAAS,GAAG,wMAE4C,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAG,CAAC;oBAC1F,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC7B,SAAS,CAAC,QAAQ,CAAC,GAAG;wBAClB,EAAE,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;wBAC9B,SAAS,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;wBACxC,QAAQ,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;wBACtC,cAAc,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC;wBAClD,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;qBACnC,CAAC;oBACF,SAAS,CAAC,SAAS,CAAC,GAAG;wBACnB,EAAE,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;wBACjC,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;qBACnC,CAAC;oBACF,MAAM,CAAC,KAAI,CAAC,EAAE,CAAC,UAAU,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;gBAC7C,CAAC,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;oBACR,SAAS,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;oBACjC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;wBACvC,SAAS,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;oBACvD,CAAC;oBAED,OAAO,CAAC,KAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC,CAAC;gBAC7D,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;oBACX,MAAM,CAAC,KAAK,CAAC,CAAC;gBAClB,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,iCAAQ,GAAf,UAAgB,MAAc;QAA9B,iBAuGC;QAtGG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,KAAI,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC;gBACjB,IAAI,WAAW,GAAG,0CAAuC,MAAM,OAAG,CAAC;gBAEnE,IAAI,SAAS,GAAG,8LAE2C,MAAM,OAAG,CAAC;gBAErE,IAAI,eAAe,GAAG,mVAGmB,MAAM,QAAI,CAAC;gBAEpD,IAAI,kBAAkB,GAAG,iWAGoB,MAAM,QAAI,CAAC;gBAExD,IAAI,gBAAgB,GAAG,mdAIsB,MAAM,iDAC1B,CAAC;gBAE1B,IAAI,SAAS,GAAG,EAAE,CAAC;gBACnB,KAAI,CAAC,EAAE,CAAC,UAAU,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;oBACzC,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC7B,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;wBAAC,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;oBAClD,SAAS,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,QAAQ,CAAC,CAAC;oBAEtC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC;wBACf,KAAI,CAAC,EAAE,CAAC,UAAU,CAAC,SAAS,EAAE,EAAE,CAAC;wBACjC,KAAI,CAAC,EAAE,CAAC,UAAU,CAAC,eAAe,EAAE,EAAE,CAAC;wBACvC,KAAI,CAAC,EAAE,CAAC,UAAU,CAAC,kBAAkB,EAAE,EAAE,CAAC;wBAC1C,KAAI,CAAC,EAAE,CAAC,UAAU,CAAC,gBAAgB,EAAE,EAAE,CAAC;qBAC3C,CAAC,CAAC;gBACP,CAAC,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;oBACR,SAAS,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;oBACvB,SAAS,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC;oBAC9B,SAAS,CAAC,gBAAgB,CAAC,GAAG,EAAE,CAAC;oBACjC,SAAS,CAAC,cAAc,CAAC,GAAG,EAAE,CAAC;oBAE/B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;wBAC1C,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;wBACzD,SAAS,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC9E,CAAC;oBAED,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;wBAC1C,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;wBAC7D,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;wBAC9E,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;wBAC5E,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG;4BAC5B,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;4BACjC,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;4BAC3C,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;4BACzC,cAAc,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC;yBACxD;wBAED,SAAS,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,KAAI,CAAC,aAAa,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACzF,CAAC;oBAED,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;wBAC1C,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;wBAC7D,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;wBAC9E,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;wBAC5E,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG;4BAC5B,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;4BACjC,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;4BAC3C,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;4BACzC,cAAc,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC;yBACxD;wBAED,SAAS,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,KAAI,CAAC,aAAa,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC5F,CAAC;oBAED,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;wBAC1C,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC;wBACjE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG;4BAC5B,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;4BACjC,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;4BAC3C,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;4BACzC,cAAc,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC;yBACxD;wBACD,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG;4BAC7B,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;4BACpC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;yBACtC;wBACD,SAAS,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,KAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC9F,CAAC;oBAED,SAAS,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC;oBAC1B,OAAO,CAAC,KAAI,CAAC,aAAa,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;gBACtD,CAAC,EAAE,UAAC,KAAK;oBACL,MAAM,CAAC,KAAK,CAAC,CAAC;gBAClB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;oBACX,MAAM,CAAC,KAAK,CAAC,CAAC;gBAClB,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;gBACX,MAAM,CAAC,KAAK,CAAC,CAAC;YAClB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,iCAAQ,GAAf;QAAA,iBAgBC;QAfG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,KAAI,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC;gBACjB,KAAI,CAAC,EAAE,CAAC,UAAU,CAAC,oBAAoB,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI;oBACnD,IAAI,MAAM,GAAU,EAAE,CAAC;oBAEvB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;wBACxC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjE,CAAC;oBAED,OAAO,CAAC,MAAM,CAAC,CAAC;gBACpB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;oBACX,MAAM,CAAC,KAAK,CAAC,CAAC;gBAClB,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,sCAAa,GAApB,UAAqB,SAAiB;QAAtC,iBA2BC;QA1BG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,KAAI,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC;gBACjB,IAAI,OAAO,GAAG;oBACV,gDAA6C,SAAS,OAAG;oBACzD,2DAAwD,SAAS,OAAG;oBACpE,sDAAmD,SAAS,OAAG;oBAC/D,mDAAgD,SAAS,OAAG;oBAC5D,uDAAoD,SAAS,OAAG;oBAChE,0DAAuD,SAAS,OAAG;oBACnE,8CAA2C,SAAS,OAAG;iBAC1D,CAAC;gBAEF,KAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC;oBAC3B,MAAM,CAAC,KAAI,CAAC,cAAc,EAAE,CAAC;gBACjC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;oBACX,MAAM,CAAC,KAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACjC,CAAC,CAAC,CAAC,IAAI,CAAC,cAAI;oBACR,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBAC3B,OAAO,EAAE,CAAC;gBACd,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,CAAC;oBACP,MAAM,CAAC,CAAC,CAAC,CAAC;gBACd,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,CAAC;gBACP,MAAM,CAAC,CAAC,CAAC,CAAC;YACd,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,6CAAoB,GAA3B,UAA4B,MAAc,EAAE,GAAW;QAAvD,iBAmBC;QAlBG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,KAAI,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC;gBACjB,IAAI,OAAO,GAAG;oBACV,yCAAsC,GAAG,4BAAqB,MAAM,OAAG;iBAC1E,CAAC;gBAEF,KAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC;oBAC3B,MAAM,CAAC,KAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACjC,CAAC,CAAC,CAAC,IAAI,CAAC,cAAI;oBACR,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBAC3B,OAAO,EAAE,CAAC;gBACd,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,CAAC;oBACP,MAAM,CAAC,CAAC,CAAC,CAAC;gBACd,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,CAAC;gBACP,MAAM,CAAC,CAAC,CAAC,CAAC;YACd,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,gDAAuB,GAA9B,UAA+B,SAAiB,EAAE,MAAc,EAAE,OAAgB;QAAlF,iBAwBC;QAvBG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,KAAI,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC;gBACjB,IAAI,OAAO,GAAG,CAAC,mDAAgD,MAAM,6BAAsB,SAAS,OAAG,CAAC,CAAC;gBAEzG,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;oBACV,OAAO,CAAC,IAAI,CAAC,sDAAmD,MAAM,6BAAsB,SAAS,OAAG,CAAC;gBAC7G,CAAC;gBAED,KAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC;oBAC3B,MAAM,CAAC,KAAI,CAAC,cAAc,EAAE,CAAC;gBACjC,CAAC,CAAC,CAAC,IAAI,CAAC,YAAE;oBACN,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,EAAE,KAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACzE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAC,GAAQ;oBACb,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;oBAChC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC7B,OAAO,EAAE,CAAC;gBACd,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,CAAC;oBACP,MAAM,CAAC,CAAC,CAAC,CAAC;gBACd,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,CAAC;gBACP,MAAM,CAAC,CAAC,CAAC,CAAC;YACd,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,gDAAuB,GAA9B,UAA+B,aAAqB,EAAE,SAAiB,EAAE,MAAc,EAAE,MAAc;QAAvG,iBAyBC;QAxBG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,KAAI,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC;gBACjB,IAAI,OAAO,GAAG;oBACV,sCAAoC,MAAM,iCAA2B,aAAa,OAAG;iBACxF,CAAC;gBAEF,EAAE,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;oBACd,OAAO,CAAC,IAAI,CAAC,+DAA4D,SAAS,cAAO,MAAM,QAAI,CAAC,CAAC;gBACzG,CAAC;gBAED,KAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC;oBAC3B,MAAM,CAAC,KAAI,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;gBAC/C,CAAC,CAAC,CAAC,IAAI,CAAC,qBAAW;oBACf,MAAM,CAAC,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;gBACpD,CAAC,CAAC,CAAC,IAAI,CAAC,UAAC,OAAO;oBACZ,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBACjC,OAAO,EAAE,CAAC;gBACd,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,CAAC;oBACP,MAAM,CAAC,CAAC,CAAC,CAAC;gBACd,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,CAAC;gBACP,MAAM,CAAC,CAAC,CAAC,CAAC;YACd,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,qCAAY,GAAnB,UAAoB,SAAiB;QAArC,iBAwBC;QAvBG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,KAAI,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC;gBACjB,IAAI,OAAO,GAAG;oBACV,wDAAqD,SAAS,OAAG;oBACjE,gDAA6C,SAAS,OAAG;oBACzD,2DAAwD,SAAS,OAAG;iBACvE,CAAC;gBAEF,KAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC;oBAC3B,MAAM,CAAC,KAAI,CAAC,cAAc,EAAE,CAAC;gBACjC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;oBACX,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,EAAE,KAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBAC7E,CAAC,CAAC,CAAC,IAAI,CAAC,aAAG;oBACP,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;oBAChC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC7B,OAAO,EAAE,CAAC;gBACd,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,CAAC;oBACP,MAAM,CAAC,CAAC,CAAC,CAAC;gBACd,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,CAAC;gBACP,MAAM,CAAC,CAAC,CAAC,CAAC;YACd,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED,iCAAiC;IAC1B,uCAAc,GAArB,UAAsB,WAAwB;QAA9C,iBAkCC;QAjCG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,KAAI,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC;gBACjB,IAAI,OAAO,GAAG;oBACV,gGACO,WAAW,CAAC,QAAQ,uCACpB,WAAW,CAAC,EAAE,8BACnB;oBACF,+HACO,WAAW,CAAC,EAAE,uCACd,WAAW,CAAC,OAAO,uCACnB,WAAW,CAAC,QAAQ,uCACpB,WAAW,CAAC,SAAS,uCACrB,WAAW,CAAC,MAAM,8BACvB;oBACF,sGACO,WAAW,CAAC,SAAS,uCACrB,WAAW,CAAC,EAAE,8BACnB;iBACL,CAAC;gBAEF,KAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC;oBAC3B,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBACvG,CAAC,CAAC,CAAC,IAAI,CAAC,aAAG;oBACP,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC7B,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;oBAChC,OAAO,EAAE,CAAC;gBACd,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,CAAC;oBACP,MAAM,CAAC,CAAC,CAAC,CAAC;gBACd,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,CAAC;gBACP,MAAM,CAAC,CAAC,CAAC,CAAC;YACd,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,4CAAmB,GAA1B,UAA2B,OAAgB;QAA3C,iBAkCC;QAjCG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,KAAI,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC;gBACjB,IAAI,SAAS,GAAG,iGACT,OAAO,CAAC,MAAM,CAAC,EAAE,mCACjB,OAAO,CAAC,EAAE,0BACf,CAAC;gBACH,IAAI,WAAW,GAAG,qKACX,OAAO,CAAC,EAAE,mCACV,OAAO,CAAC,KAAK,mCACb,OAAO,CAAC,WAAW,mCACnB,OAAO,CAAC,SAAS,mCACjB,OAAO,CAAC,OAAO,kCACf,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,iCAChC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,kCAC/B,OAAO,CAAC,eAAe,mCACvB,OAAO,CAAC,MAAM,0BACnB,CAAC;gBAEH,KAAI,CAAC,EAAE,CAAC,QAAQ,CAAC;oBACb,SAAS;oBACT,WAAW;iBACd,CAAC,CAAC,IAAI,CAAC;oBACJ,MAAM,CAAC,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;gBAC5C,CAAC,CAAC,CAAC,IAAI,CAAC,cAAI;oBACR,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBAC3B,OAAO,EAAE,CAAC;gBACd,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,CAAC;oBACP,MAAM,CAAC,CAAC,CAAC,CAAC;gBACd,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,CAAC;gBACP,MAAM,CAAC,CAAC,CAAC,CAAC;YACd,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,kCAAS,GAAhB;QACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IACtC,CAAC;IAEM,kCAAS,GAAhB,UAAiB,MAAO,EAAE,MAAe,EAAE,OAAgB;QACvD,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACT,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAC9C,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE;gBAC9B,WAAW,EAAE,MAAM;gBACnB,YAAY,EAAE,OAAO;aACxB,CAAC,CAAC;QACP,CAAC;IACL,CAAC;IAEM,uCAAc,GAArB;QACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACpC,CAAC;IAEM,8CAAqB,GAA5B;QACI,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC;IACrC,CAAC;IAEM,iDAAwB,GAA/B;QACI,MAAM,CAAC,IAAI,CAAC,uBAAuB,CAAC;IACxC,CAAC;IAEM,0CAAiB,GAAxB,UAAyB,IAAU;QAC/B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClF,CAAC;IAEM,0CAAiB,GAAxB,UAAyB,GAAW,EAAE,KAAU;QAC5C,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IACxC,CAAC;IAEM,wCAAe,GAAtB,UAAuB,GAAW;QAC9B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;IAEM,+BAAM,GAAb;QACI,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,6BAA6B,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACnH,CAAC;IACL,qBAAC;AAAD,CAAC;AAl5BY,cAAc;IAD1B,yEAAU,EAAE;qCAWoB,+DAAO;QACT,sEAAa;QACpB,oEAAM;QACJ,+DAAQ;QACN,6EAAU;GAdzB,cAAc,CAk5B1B;AAl5B0B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdkB;AACM;AACiC;AACZ;AACpC;AACc;AACP;AAG3C,IAAa,UAAU;IAEnB,oBAAoB,IAAgB,EACxB,SAA0B,EAC1B,WAA8B,EAC9B,cAA8B,EAC9B,SAA0B;QAJlB,SAAI,GAAJ,IAAI,CAAY;QACxB,cAAS,GAAT,SAAS,CAAiB;QAC1B,gBAAW,GAAX,WAAW,CAAmB;QAC9B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,cAAS,GAAT,SAAS,CAAiB;IAGtC,CAAC;IAED,4BAAO,GAAP;QAAA,iBAeC;QAbG,IAAI,KAAK,GAAG,2DAAU,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC,CAAC;QAEnE,IAAI,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,0FAAgB,CAAC,QAAQ,GAAG,OAAO,CAAC,CAAC,OAAO,CAAC,UAAC,MAAa;YACnF,IAAI,UAAU,GAAG,EAAE,CAAC;YACpB,MAAM,CAAC,OAAO,CAAC,iBAAO;gBAClB,UAAU,CAAC,IAAI,CAAC,IAAI,sDAAG,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;YACzD,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,2DAAU,CAAC,WAAW,CAAC,KAAI,CAAC,cAAc,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;QAC7E,CAAC,CAAC,CAAC,OAAO,CAAC,UAAC,MAAa;YACrB,MAAM,CAAC,2DAAU,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,2DAAU,CAAC,GAAG,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IAC1C,CAAC;IAED,sCAAiB,GAAjB;QACI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YAClB,KAAK,EAAE,mBAAmB;YAC1B,QAAQ,EAAE,uCAAuC;YACjD,OAAO,EAAE,oHAAoH;YAC7H,qBAAqB,EAAE,KAAK;YAC5B,OAAO,EAAE;gBACL;oBACI,IAAI,EAAE,QAAQ;oBACd,IAAI,EAAE,QAAQ;iBACjB;aACJ;SACJ,CAAC,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,kCAAa,GAAb,UAAc,QAAgB;QAA9B,iBAkEC;QAjEG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,IAAI,MAAM,GAAG,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC;gBACjC,OAAO,EAAE,cAAc;aAC1B,CAAC,CAAC;YACH,MAAM,CAAC,OAAO,EAAE,CAAC;YACjB,KAAI,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,UAAC,OAAO;gBAErC,MAAM,CAAC,OAAO,EAAE,CAAC;gBACjB,IAAI,MAAM,CAAC;gBAEX,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;oBACtC,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;gBACxB,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;oBAC7C,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;gBACxB,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,MAAM,CAAC;gBACX,CAAC;gBAED,IAAI,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;gBACpC,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;wCACpB,CAAC;oBACN,KAAK,CAAC,QAAQ,CAAC;wBACX,IAAI,EAAE,UAAU;wBAChB,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK;wBACtB,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK;wBAC3C,OAAO,EAAE;4BACL,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gCACX,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,GAAQ;oCACpC,MAAM,CAAC,GAAG,CAAC,EAAE,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;gCAClC,CAAC,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC,CAAC;4BACvB,CAAC;4BACD,MAAM,CAAC,KAAK,CAAC;wBACjB,CAAC,EAAE;qBACN,CAAC,CAAC;gBACP,CAAC;gBAdD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE;4BAA7B,CAAC;iBAcT;gBACD,KAAK,CAAC,SAAS,CAAC;oBACZ,IAAI,EAAE,WAAW;oBACjB,OAAO,EAAE,cAAI;oBACb,CAAC;iBACJ,CAAC,CAAC;gBACH,KAAK,CAAC,SAAS,CAAC;oBACZ,IAAI,EAAE,QAAQ;oBACd,OAAO,EAAE,cAAI;wBACT,IAAI,IAAI,GAAU,EAAE,CAAC;wBACrB,IAAI,CAAC,OAAO,CAAC,iBAAO;4BAChB,IAAI,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;4BAChC,IAAI,CAAC,IAAI,CAAC,IAAI,sDAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC7C,CAAC,CAAC,CAAC;wBACH,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;4BAClB,OAAO,CAAC,IAAI,CAAC,CAAC;wBAClB,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACJ,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gCAClB,OAAO,EAAE,6CAA6C;gCACtD,QAAQ,EAAE,IAAI;6BACjB,CAAC,CAAC,OAAO,EAAE,CAAC;4BACb,MAAM,CAAC,KAAK,CAAC;wBACjB,CAAC;oBACL,CAAC;iBACJ,CAAC,CAAC;gBACH,KAAK,CAAC,OAAO,EAAE,CAAC;YACpB,CAAC,EAAE,UAAC,KAAK;gBACL,MAAM,CAAC,OAAO,EAAE,CAAC;gBACjB,MAAM,CAAC,KAAK,CAAC,CAAC;YAClB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IACL,iBAAC;AAAD,CAAC;AA9GY,UAAU;IADtB,yEAAU,EAAE;qCAGiB,wEAAU;QACb,sEAAe;QACb,wEAAiB;QACd,wEAAc;QACnB,sEAAe;GAN7B,UAAU,CA8GtB;AA9GsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTsB;AACM;AACF;AAEuB;AAEtB;AAEP;AACf;AAG5B,IAAa,cAAc;IAEvB,wBAAoB,IAAgB,EACxB,aAA4B,EAC5B,cAA8B;QAFtB,SAAI,GAAJ,IAAI,CAAY;QACxB,kBAAa,GAAb,aAAa,CAAe;QAC5B,mBAAc,GAAd,cAAc,CAAgB;IAE1C,CAAC;IAED,yCAAgB,GAAhB,UAAiB,SAAiB;QAAlC,iBAYC;QAVG,IAAI,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,0FAAgB,CAAC,QAAQ,GAAG,YAAY,GAAG,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,UAAC,GAAG;YAC1G,IAAI,OAAO,GAAG,KAAI,CAAC,aAAa,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;YACpD,MAAM,CAAC,2DAAU,CAAC,WAAW,CAAC,KAAI,CAAC,cAAc,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC;QAC7E,CAAC,CAAC,CAAC;QAEH,IAAI,YAAY,GAAG,2DAAU,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;YAC9F,MAAM,CAAC,2DAAU,CAAC,KAAK,EAAE,CAAC;QAC9B,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,2DAAU,CAAC,KAAK,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;IAC1D,CAAC;IAED,6CAAoB,GAApB,UAAqB,aAAqB;QAA1C,iBAYC;QAXG,IAAI,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,0FAAgB,CAAC,QAAQ,GAAG,yBAAyB,GAAG,aAAa,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CACtH,UAAC,MAAM;YACH,IAAI,WAAW,GAAG,KAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;YAC/D,MAAM,CAAC,2DAAU,CAAC,WAAW,CAAC,KAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,CAAC;QACrF,CAAC,CAAC,CAAC;QAEP,IAAI,YAAY,GAAG,2DAAU,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;YACtG,MAAM,CAAC,2DAAU,CAAC,KAAK,EAAE,CAAC;QAC9B,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,2DAAU,CAAC,KAAK,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;IAC1D,CAAC;IAED,+CAAsB,GAAtB;QAAA,iBAoBC;QAnBG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,0FAAgB,CAAC,QAAQ,GAAG,+BAA+B,CAAC,CAAC,SAAS,CAChF,UAAC,MAAW;gBACR,IAAI,QAAQ,GAAG,KAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;gBAC7D,IAAI,QAAQ,GAAG,EAAE,CAAC;gBAClB,GAAG,CAAC,CAAgB,UAAQ,EAAR,qBAAQ,EAAR,sBAAQ,EAAR,IAAQ;oBAAvB,IAAI,OAAO;oBACZ,QAAQ,CAAC,IAAI,CAAC,KAAI,CAAC,cAAc,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC;iBAC5D;gBAED,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC;oBACvB,OAAO,CAAC,QAAQ,CAAC,CAAC;gBACtB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,CAAC;oBACP,MAAM,CAAC,CAAC,CAAC,CAAC;gBACd,CAAC,CAAC;YACN,CAAC,EACD,UAAC,KAAK;gBACF,MAAM,CAAC,KAAK,CAAC,CAAC;YAClB,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mCAAU,GAAV,UAAW,OAAgB;QAA3B,iBAgBC;QAfG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,IAAI,IAAI,GAAG;gBACP,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;aAChC,CAAC;YACF,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,0FAAgB,CAAC,QAAQ,GAAG,eAAe,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,MAAW;gBACpF,OAAO,CAAC,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;gBAC3B,KAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC;oBAClD,OAAO,CAAC,MAAM,CAAC,CAAC;gBACpB,CAAC,CAAC,CAAC,KAAK,CAAC,WAAC;oBACN,MAAM,CAAC,CAAC,CAAC,CAAC;gBACd,CAAC,CAAC,CAAC;YACP,CAAC,EAAE,UAAC,KAAK;gBACL,MAAM,CAAC,KAAK,CAAC,CAAC;YAClB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED,sCAAa,GAAb,UAAc,EAAU;QAAxB,iBAYC;QAXG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,KAAI,CAAC,IAAI,CAAC,MAAM,CAAC,0FAAgB,CAAC,QAAQ,GAAG,YAAY,GAAG,EAAE,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,MAAW;gBAC5G,KAAI,CAAC,cAAc,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC;oBACvC,OAAO,EAAE,CAAC;gBACd,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;oBACX,MAAM,CAAC,KAAK,CAAC;gBACjB,CAAC,CAAC,CAAC;YACP,CAAC,EAAE,UAAC,KAAK;gBACL,MAAM,CAAC,KAAK,CAAC,CAAC;YAClB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED,oCAAW,GAAX,UAAY,OAAgB;IAE5B,CAAC;IAED,iCAAQ,GAAR,UAAS,IAAS,EAAE,SAAiB;QACjC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACpB,GAAG,CAAC,CAAoB,UAAiB,EAAjB,SAAI,CAAC,YAAY,EAAjB,cAAiB,EAAjB,IAAiB;gBAApC,IAAI,WAAW;gBAChB,EAAE,CAAC,CAAC,WAAW,CAAC,QAAQ,IAAI,IAAI,CAAC,EAAE,IAAI,WAAW,CAAC,SAAS,IAAI,SAAS,CAAC,CAAC,CAAC;oBACxE,MAAM,CAAC,WAAW,CAAC;gBACvB,CAAC;aACJ;QACL,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAED,iCAAQ,GAAR,UAAS,IAAU,EAAE,OAAgB;QACjC,GAAG,CAAC,CAAe,UAAe,EAAf,YAAO,CAAC,OAAO,EAAf,cAAe,EAAf,IAAe;YAA7B,IAAI,MAAM;YACX,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,MAAM,CAAC,EAAE,CAAC;gBAAC,MAAM,CAAC,IAAI,CAAC;SACzC;QAED,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAED,wCAAe,GAAf,UAAgB,WAAwB;QAAxC,iBAwBC;QAtBG,IAAI,IAAI,GAAG;YACP,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;SACpC;QAED,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;QACtD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;QACvD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QAEpD,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,0FAAgB,CAAC,QAAQ,GAAG,wBAAwB,EAAE,IAAI,CAAC,CAAC,SAAS,CAChF,UAAC,MAAW;gBACR,WAAW,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,aAAa,CAAC;gBACzC,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC;oBACjD,OAAO,EAAE,CAAC;gBACd,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;oBACX,MAAM,CAAC,KAAK,CAAC,CAAC;gBAClB,CAAC,CAAC,CAAC;YACP,CAAC,EACD,UAAC,KAAK;gBACF,MAAM,CAAC,KAAK,CAAC,CAAC;YAClB,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gDAAuB,GAAvB,UAAwB,EAAU,EAAE,SAAiB,EAAE,MAAc,EAAE,MAAc;QAArF,iBA0BC;QAxBG,IAAI,GAAG,GAAG,EAAE,CAAC;QAEb,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACb,KAAK,CAAC;gBACF,GAAG,GAAG,SAAS,CAAC;gBAChB,KAAK,CAAC;YACV,KAAK,CAAC;gBACF,GAAG,GAAG,SAAS,CAAC;gBAChB,KAAK,CAAC;YACV;gBACI,MAAM,CAAC;QACf,CAAC;QAED,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,0FAAgB,CAAC,QAAQ,GAAG,yBAAyB,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,MAAM;gBAC9H,KAAI,CAAC,cAAc,CAAC,uBAAuB,CAAC,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,IAAI,CAAC;oBAC5E,OAAO,EAAE,CAAC;gBACd,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;oBACX,MAAM,CAAC,KAAK,CAAC,CAAC;gBAClB,CAAC,CAAC,CAAC;YACP,CAAC,EAAE,UAAC,KAAK;gBACL,MAAM,CAAC,KAAK,CAAC,CAAC;YAClB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED,qCAAY,GAAZ,UAAa,MAAc,EAAE,SAAiB,EAAE,OAAgB;QAAhE,iBAgBC;QAfG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,IAAI,IAAI,GAAG,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC;YACpD,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,0FAAgB,CAAC,QAAQ,GAAG,iBAAiB,EAAE,IAAI,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC,SAAS,CACnG,UAAC,MAAM;gBACH,KAAI,CAAC,cAAc,CAAC,uBAAuB,CAAC,SAAS,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC;oBACzE,OAAO,EAAE,CAAC;gBACd,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;oBACX,MAAM,CAAC,KAAK,CAAC,CAAC;gBAClB,CAAC,CAAC,CAAC;YACP,CAAC,EACD,UAAC,KAAK;gBACF,MAAM,CAAC,KAAK,CAAC,CAAC;YAClB,CAAC,CACJ;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,qCAAY,GAAZ,UAAa,SAAiB;QAA9B,iBAgBC;QAfG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,IAAI,IAAI,GAAG,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC;YACpC,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,0FAAgB,CAAC,QAAQ,GAAG,iBAAiB,EAAE,IAAI,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC,SAAS,CACnG,UAAC,MAAM;gBACH,KAAI,CAAC,cAAc,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC;oBAC7C,OAAO,EAAE,CAAC;gBACd,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;oBACX,MAAM,CAAC,KAAK,CAAC,CAAC;gBAClB,CAAC,CAAC,CAAC;YACP,CAAC,EACD,UAAC,KAAK;gBACF,MAAM,CAAC,KAAK,CAAC,CAAC;YAClB,CAAC,CACJ;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,oCAAW,GAAX,UAAY,IAAY;QACpB,8CAAM,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QAClC,MAAM,CAAC,8CAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACpC,CAAC;IAED,0CAAiB,GAAjB,UAAkB,KAAa,EAAE,KAAa;QAC1C,IAAI,SAAS,GAAG,8CAAM,CAAC,KAAK,CAAC,CAAC;QAC9B,IAAI,UAAU,GAAG,8CAAM,CAAC,KAAK,CAAC,CAAC;QAE/B,IAAI,QAAQ,GAAG,8CAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QAC3D,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC;IACpD,CAAC;IACL,qBAAC;AAAD,CAAC;AAvNY,cAAc;IAD1B,yEAAU,EAAE;qCAGiB,wEAAU;QACT,sEAAa;QACZ,wEAAc;GAJjC,cAAc,CAuN1B;AAvN0B;;;;;;;;;;;;ACPC;AAE5B;IAEI,iBAAmB,KAAa,EACrB,WAAmB,EACnB,OAAgB,EAChB,IAAW,EACX,eAAuB,EACvB,SAAiB,EACjB,OAAe,EACf,MAAc,EACd,MAAa,EACb,QAAmB,EACnB,YAA4B,EAC5B,EAAW,EACX,OAAgB,EAChB,YAAqB,EACrB,KAAe;QAdP,UAAK,GAAL,KAAK,CAAQ;QACrB,gBAAW,GAAX,WAAW,CAAQ;QACnB,YAAO,GAAP,OAAO,CAAS;QAChB,SAAI,GAAJ,IAAI,CAAO;QACX,oBAAe,GAAf,eAAe,CAAQ;QACvB,cAAS,GAAT,SAAS,CAAQ;QACjB,YAAO,GAAP,OAAO,CAAQ;QACf,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAO;QACb,aAAQ,GAAR,QAAQ,CAAW;QACnB,iBAAY,GAAZ,YAAY,CAAgB;QAC5B,OAAE,GAAF,EAAE,CAAS;QACX,YAAO,GAAP,OAAO,CAAS;QAChB,iBAAY,GAAZ,YAAY,CAAS;QACrB,UAAK,GAAL,KAAK,CAAU;IAC1B,CAAC;IAEM,4BAAU,GAAjB;QACI,IAAI,UAAU,GAAG,8CAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;IAC/B,CAAC;IAEL,cAAC;AAAD,CAAC;;;;;;;;;;AC/BD;AAAA;IACI,kBAAmB,WAAqB,EAAS,IAAa;QAA3C,gBAAW,GAAX,WAAW,CAAU;QAAS,SAAI,GAAJ,IAAI,CAAS;IAE9D,CAAC;IACL,eAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;ACJ0C;AAEJ;AAGvC,IAAa,cAAc;IAKvB;QAHQ,eAAU,GAAiB,IAAI,qDAAO,EAAE,CAAC;QAC1C,sBAAiB,GAAoB,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;IAI3E,CAAC;IAEM,gCAAO,GAAd,UAAe,IAAS;QACpB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAEL,qBAAC;AAAD,CAAC;AAbY,cAAc;IAD1B,yEAAU,EAAE;;GACA,cAAc,CAa1B;AAb0B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLsB;AACE;AAEqB;AACtB;AAEQ;AACf;AACJ;AAGvC,IAAa,aAAa;IAMtB,uBAAoB,IAAgB,EAAU,cAA8B,EAChE,aAA4B;QADpB,SAAI,GAAJ,IAAI,CAAY;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAChE,kBAAa,GAAb,aAAa,CAAe;QALjC,mBAAc,GAAmB,IAAI,4EAAc,EAAE,CAAC;QACrD,yBAAoB,GAAG,IAAI,qDAAO,EAAkB,CAAC;QACrD,6BAAwB,GAA+B,IAAI,CAAC,oBAAoB,CAAC,YAAY,EAAE,CAAC;IAIxG,CAAC;IAED,4CAAoB,GAApB,UAAqB,GAAG,EAAE,KAAK;QAC3B,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACjC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACxD,CAAC;IAED,yCAAiB,GAAjB;QACI,MAAM,CAAC,IAAI,CAAC,wBAAwB,CAAC;IACzC,CAAC;IAED,qCAAa,GAAb;QACI,IAAI,CAAC,cAAc,GAAG,IAAI,4EAAc,EAAE,CAAC;IAC/C,CAAC;IAED,mCAAW,GAAX,UAAY,cAA8B,EAAE,IAAa;QAAzD,iBA2CC;QA1CG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,IAAI,KAAK,GAAG,EAAE,CAAC;YAEf,EAAE,CAAC,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;gBACvB,KAAK,IAAI,SAAS,GAAG,cAAc,CAAC,KAAK,CAAC;YAC9C,CAAC;YAED,EAAE,CAAC,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC1B,KAAK,IAAI,OAAO,GAAG,cAAc,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBAC1D,KAAK,IAAI,OAAO,GAAG,cAAc,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YAC9D,CAAC;YAED,EAAE,CAAC,CAAC,cAAc,CAAC,IAAI,IAAI,cAAc,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBACxD,GAAG,CAAC,CAAY,UAAmB,EAAnB,mBAAc,CAAC,IAAI,EAAnB,cAAmB,EAAnB,IAAmB;oBAA9B,IAAI,GAAG;oBACR,KAAK,IAAI,QAAQ,GAAG,GAAG,CAAC,EAAE,CAAC;iBAC9B;YACL,CAAC;YAED,EAAE,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;gBACtB,KAAK,IAAI,YAAY,CAAC;YAC1B,CAAC;YAED,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACP,KAAK,IAAI,QAAQ,GAAG,IAAI,CAAC;YAC7B,CAAC;YAED,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,0FAAgB,CAAC,QAAQ,GAAG,mBAAmB,GAAG,KAAK,CAAC,CAAC,SAAS,CAAC,UAAC,MAAW;gBACzF,IAAI,QAAQ,GAAc,EAAE,CAAC;gBAE7B,EAAE,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;oBAC9B,MAAM,CAAC,OAAO,CAAC,iBAAO;wBAClB,IAAI,WAAW,GAAG,KAAI,CAAC,aAAa,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;wBAC5D,KAAI,CAAC,cAAc,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;wBAC9C,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;oBAC/B,CAAC,CAAC,CAAC;gBACP,CAAC;gBAED,OAAO,CAAC,QAAQ,CAAC,CAAC;YACtB,CAAC,EAAE,UAAC,KAAK;gBACL,MAAM,CAAC,KAAK,CAAC,CAAC;YAClB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IACL,oBAAC;AAAD,CAAC;AAnEY,aAAa;IADzB,yEAAU,EAAE;qCAOiB,wEAAU,EAA0B,wEAAc;QACjD,sEAAa;GAP/B,aAAa,CAmEzB;AAnEyB;;;;;;;;;;;;;;;;;;;;;;;;;ACXqB;AACG;AACsB;AAC7B;AACoC;AACrC;AAM1C,IAAa,kBAAkB;IAE3B,4BAAoB,QAAsB,EAAU,YAA0B,EAAU,WAA8B,EAAU,IAAU;QAAtH,aAAQ,GAAR,QAAQ,CAAc;QAAU,iBAAY,GAAZ,YAAY,CAAc;QAAU,gBAAW,GAAX,WAAW,CAAmB;QAAU,SAAI,GAAJ,IAAI,CAAM;IAE1I,CAAC;IAEM,iDAAoB,GAA3B,UAA4B,QAAgB;QAA5C,iBAuCC;QAtCG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,IAAI,MAAM,GAAG,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC;gBACjC,OAAO,EAAE,cAAc;aAC1B,CAAC,CAAC;YACH,MAAM,CAAC,OAAO,EAAE,CAAC;YAEjB,IAAM,YAAY,GAAuB,KAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;YAChE,IAAI,UAAU,CAAC;YACf,IAAI,CAAC;gBACD,UAAU,GAAG,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;YAC7C,CAAC;YAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACb,MAAM,CAAC,KAAK,CAAC,CAAC;YAClB,CAAC;YAED,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;gBACd,MAAM,CAAC,OAAO,EAAE,CAAC;gBACjB,MAAM,EAAE,CAAC;YACb,CAAC;YAED,KAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,eAAK;gBAC1C,IAAI,OAAO,GAAG;oBACV,OAAO,EAAE,MAAM;oBACf,QAAQ,EAAE,QAAQ;oBAClB,WAAW,EAAE,KAAK;oBAClB,QAAQ,EAAE,qBAAqB;oBAC/B,OAAO,EAAE,EAAE,eAAe,EAAE,SAAS,GAAG,KAAK,EAAE;oBAC/C,MAAM,EAAE,EAAE,UAAU,EAAE,QAAQ,EAAE;iBACnC,CAAC;gBAEF,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,UAAU,EAAE,0FAAgB,CAAC,QAAQ,GAAG,gBAAgB,EAAE,OAAO,CAAC,CAAC;YAClG,CAAC,CAAC,CAAC,IAAI,CAAC,UAAC,IAAS;gBACd,MAAM,CAAC,OAAO,EAAE,CAAC;gBACjB,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;YAC3C,CAAC,CAAC,CAAC,KAAK,CAAC,WAAC;gBACN,MAAM,CAAC,OAAO,EAAE,CAAC;gBACjB,MAAM,CAAC,CAAC,CAAC,CAAC;YACd,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,yCAAY,GAAnB,UAAoB,GAAG;QACnB,EAAE,CAAC,CAAC,GAAG,KAAK,IAAI,CAAC,CAAC,CAAC;YACf,MAAM,CAAC,EAAE,CAAC;QACd,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;QACzC,CAAC;IACL,CAAC;IAEM,4CAAe,GAAtB,UAAuB,QAAQ,EAAE,WAAW,EAAE,WAAW;QAAzD,iBAQC;QAPG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,KAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,WAAW,EAAE,KAAI,CAAC,IAAI,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC,IAAI,CAAC,iBAAO;gBACxF,OAAO,CAAC,WAAW,CAAC,CAAC;YACzB,CAAC,EAAE,eAAK;gBACJ,MAAM,CAAC,KAAK,CAAC,CAAC;YAClB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEL,yBAAC;AAAD,CAAC;AAjEY,kBAAkB;IAD9B,yEAAU,EAAE;qCAGqB,iFAAY,EAAwB,oEAAY,EAAuB,wEAAiB,EAAgB,gEAAI;GAFjI,kBAAkB,CAiE9B;AAjE8B;;;;;;;;;ACX/B;AAAA;IACI,iBAAmB,IAAa,EAAS,MAAe;QAArC,SAAI,GAAJ,IAAI,CAAS;QAAS,WAAM,GAAN,MAAM,CAAS;IAExD,CAAC;IACL,cAAC;AAAD,CAAC;;;;;;;;;;ACDD;AAAA;IACI,qBAAmB,OAAe,EACvB,SAAiB,EACjB,QAAgB,EAChB,MAAe,EACf,MAAa,EACb,EAAW,EACX,OAAiB;QANT,YAAO,GAAP,OAAO,CAAQ;QACvB,cAAS,GAAT,SAAS,CAAQ;QACjB,aAAQ,GAAR,QAAQ,CAAQ;QAChB,WAAM,GAAN,MAAM,CAAS;QACf,WAAM,GAAN,MAAM,CAAO;QACb,OAAE,GAAF,EAAE,CAAS;QACX,YAAO,GAAP,OAAO,CAAU;IAE5B,CAAC;IACL,kBAAC;AAAD,CAAC;;;;;;;;;;ACVD;AAAA;IACI,cAAmB,QAAgB,EACxB,KAAa,EACb,QAAgB,EAChB,SAAiB,EACjB,QAAgB,EAChB,cAAuB,EACvB,IAAY,EACZ,EAAW,EACX,YAA4B,EAC5B,WAAuB,EACvB,cAA0B,EAC1B,KAAe;QAXP,aAAQ,GAAR,QAAQ,CAAQ;QACxB,UAAK,GAAL,KAAK,CAAQ;QACb,aAAQ,GAAR,QAAQ,CAAQ;QAChB,cAAS,GAAT,SAAS,CAAQ;QACjB,aAAQ,GAAR,QAAQ,CAAQ;QAChB,mBAAc,GAAd,cAAc,CAAS;QACvB,SAAI,GAAJ,IAAI,CAAQ;QACZ,OAAE,GAAF,EAAE,CAAS;QACX,iBAAY,GAAZ,YAAY,CAAgB;QAC5B,gBAAW,GAAX,WAAW,CAAY;QACvB,mBAAc,GAAd,cAAc,CAAY;QAC1B,UAAK,GAAL,KAAK,CAAU;IAG1B,CAAC;IACL,WAAC;AAAD,CAAC;;;;;;;;;;;;;ACnB0E;AAElC;AAEzC,yGAAsB,EAAE,CAAC,eAAe,CAAC,8DAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJoB;AACtB;AACuB;AACF;AACR;AAEA;AACF;AAEN;AAGA;AACQ;AAEF;AACI;AACP;AACH;AACkB;AACd;AACN;AACI;AACO;AACxB;AACM;AACW;AACS;AACV;AACJ;AACI;AACuB;AACxB;AACT;AACA;AACM;AACO;AACjB;AACS;AACU;AA2E7D,IAAa,SAAS;IAAtB;IAAyB,CAAC;IAAD,gBAAC;AAAD,CAAC;AAAb,SAAS;IAxErB,wEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,8DAAK;YACL,mEAAQ;SACT;QACD,OAAO,EAAE;YACP,iFAAa;YACb,sGAAuB;YACvB,+EAAgB;YAChB,mEAAW,CAAC,OAAO,CAAC,8DAAK,EAAE,EAAE,EACjC;gBACE,KAAK,EAAE;oBACL,EAAE,YAAY,EAAE,8DAA8D,EAAE,IAAI,EAAE,gBAAgB,EAAE,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE;oBACrK,EAAE,YAAY,EAAE,+DAA+D,EAAE,IAAI,EAAE,iBAAiB,EAAE,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE;oBACvK,EAAE,YAAY,EAAE,0EAA0E,EAAE,IAAI,EAAE,oBAAoB,EAAE,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE;oBACzL,EAAE,YAAY,EAAE,uEAAuE,EAAE,IAAI,EAAE,mBAAmB,EAAE,OAAO,EAAE,gBAAgB,EAAE,QAAQ,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE;oBACpL,EAAE,YAAY,EAAE,iEAAiE,EAAE,IAAI,EAAE,iBAAiB,EAAE,OAAO,EAAE,cAAc,EAAE,QAAQ,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE;oBAC1K,EAAE,YAAY,EAAE,0CAA0C,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE;oBACpI,EAAE,YAAY,EAAE,0EAA0E,EAAE,IAAI,EAAE,oBAAoB,EAAE,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE;oBACzL,EAAE,YAAY,EAAE,6CAA6C,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE;oBACzI,EAAE,YAAY,EAAE,6CAA6C,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE;oBACzI,EAAE,YAAY,EAAE,uEAAuE,EAAE,IAAI,EAAE,mBAAmB,EAAE,OAAO,EAAE,gBAAgB,EAAE,QAAQ,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE;oBACpL,EAAE,YAAY,EAAE,mDAAmD,EAAE,IAAI,EAAE,aAAa,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE;oBACnJ,EAAE,YAAY,EAAE,kEAAkE,EAAE,IAAI,EAAE,kBAAkB,EAAE,OAAO,EAAE,cAAc,EAAE,QAAQ,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE;oBAC5K,EAAE,YAAY,EAAE,oEAAoE,EAAE,IAAI,EAAE,kBAAkB,EAAE,OAAO,EAAE,eAAe,EAAE,QAAQ,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE;oBAC/K,EAAE,YAAY,EAAE,iEAAiE,EAAE,IAAI,EAAE,iBAAiB,EAAE,OAAO,EAAE,cAAc,EAAE,QAAQ,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE;oBAC1K,EAAE,YAAY,EAAE,gDAAgD,EAAE,IAAI,EAAE,YAAY,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE;oBAC9I,EAAE,YAAY,EAAE,sDAAsD,EAAE,IAAI,EAAE,cAAc,EAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE;iBACzJ;aACF,CAAC;YACE,oEAAW;YACX,4EAAmB;YACnB,2EAAkB,CAAC,OAAO,EAAE;SAC7B;QACD,SAAS,EAAE,CAAC,gEAAQ,CAAC;QACrB,eAAe,EAAE;YACf,8DAAK;YACL,mEAAQ;SACT;QACD,SAAS,EAAE;YACT,oFAAa;YACb,iEAAI;YACJ,0EAAQ;YACR,kFAAY;YACZ,0FAAkB;YAClB,qEAAM;YACN,2EAAS;YACT,6FAAkB;YAClB,wEAAQ;YACR,4EAAS;YACT,kFAAY;YACZ,oFAAe;YACf,8EAAY;YACZ,+EAAW;YACX,iFAAc;YACd,8EAAU;YACV,yEAAU;YACV,6EAAU;YACV,qEAAM;YACN,gFAAa;YACb,+EAAa;YACb,iFAAc;YACd,2FAAmB;YACnB,iFAAc;YACd;gBACE,OAAO,EAAE,gFAAiB;gBAC1B,QAAQ,EAAE,qFAAgB;gBAC1B,KAAK,EAAE,IAAI;aACZ;YACD,EAAE,OAAO,EAAE,oEAAY,EAAE,QAAQ,EAAE,yEAAiB,EAAE;SACvD;KACF,CAAC;GACW,SAAS,CAAI;AAAJ;;;;;;;;AClHtwB;;;;;;;;AC3PA;AAAA;IACI,qBAAmB,OAAe,EAAS,MAAY,EAAS,IAAU;QAAvD,YAAO,GAAP,OAAO,CAAQ;QAAS,WAAM,GAAN,MAAM,CAAM;QAAS,SAAI,GAAJ,IAAI,CAAM;IAE1E,CAAC;IACL,kBAAC;AAAD,CAAC;;;;;;;;;;ACHD;AAAA;IAAA;IAMA,CAAC;IAAD,qBAAC;AAAD,CAAC;;;;;;;;;;ACRD;AAAA;IAAA;IAOA,CAAC;IAAD,uBAAC;AAAD,CAAC;;AANG,2DAA2D;AAC3D,+DAA+D;AAC/D,8DAA8D;AAC9D,8DAA8D;AAChD,yBAAQ,GAAW,2BAA2B,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLO;AACpB;AACP;AACE;AACM;AAOpC;AACyC;AACD;AAGzD;;GAEG;AAEH,IAAa,gBAAgB;IACzB,0BAAoB,GAAa,EAAU,GAAQ,EAAU,SAA0B;QAAnE,QAAG,GAAH,GAAG,CAAU;QAAU,QAAG,GAAH,GAAG,CAAK;QAAU,cAAS,GAAT,SAAS,CAAiB;IAAI,CAAC;IAE5F,oCAAS,GAAT,UAAU,OAAyB,EAAE,IAAiB;QAAtD,iBAyFC;QAvFG,IAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,oEAAY,CAAC,CAAC;QAExC,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,0FAAgB,CAAC,QAAQ,GAAG,OAAO,CAAC,IAAI,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,0FAAgB,CAAC,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;YAC7H,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,UAAC,KAAqB;YACnE,CAAC,EAAE,UAAC,GAAQ;gBACR,EAAE,CAAC,CAAC,GAAG,YAAY,+EAAiB,CAAC,CAAC,CAAC;oBACnC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;wBAC1H,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;4BAClB,OAAO,EAAE,sBAAsB;4BAC/B,QAAQ,EAAE,IAAI;yBACjB,CAAC,CAAC,OAAO,EAAE,CAAC;wBACb,IAAI,CAAC,MAAM,EAAE,CAAC;wBACd,KAAI,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;oBAC/C,CAAC;oBACD,MAAM,CAAC,2DAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACjC,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;QAED,qEAAqE;QACrE,MAAM,CAAC,gFAAW,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC,SAAS,CAAC,gBAAM;YACvD,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACT,mCAAmC;gBACnC,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;oBACpB,UAAU,EAAE;wBACR,aAAa,EAAE,SAAS,GAAG,MAAM;wBACjC,eAAe,EAAE,UAAU;wBAC3B,MAAM,EAAE,UAAU;wBAClB,OAAO,EAAE,+BAA+B;qBAC3C;iBACJ,CAAC,CAAC;YACP,CAAC;YAED,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,UAAC,KAAqB;YACnE,CAAC,EAAE,UAAC,GAAQ;gBACR,EAAE,CAAC,CAAC,GAAG,YAAY,+EAAiB,CAAC,CAAC,CAAC;oBACnC,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;wBACnB,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;4BAClB,OAAO,EAAE,2DAA2D;4BACpE,QAAQ,EAAE,IAAI;yBACjB,CAAC,CAAC,OAAO,EAAE,CAAC;oBAEjB,CAAC;oBAED,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC;wBACrB,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC;4BACf,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gCAClB,OAAO,EAAE,gBAAgB;gCACzB,QAAQ,EAAE,IAAI;6BACjB,CAAC,CAAC,OAAO,EAAE,CAAC;4BACb,KAAI,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;wBAC/C,CAAC,CAAC,CAAC;oBACP,CAAC;oBAED,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC;wBACrB;;;;;0BAKE;oBACN,CAAC;oBAED,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC;wBACrB,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;4BAClB,OAAO,EAAE,YAAY;4BACrB,QAAQ,EAAE,IAAI;yBACjB,CAAC,CAAC,OAAO,EAAE,CAAC;wBACb,KAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,GAAG,EAAE,CAAC;oBAClC,CAAC;oBAED,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC;wBACrB;;;;;0BAKE;oBACN,CAAC;oBAED,MAAM,CAAC,2DAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACjC,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;YACX,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAC3B,MAAM,CAAC,2DAAU,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;IACP,CAAC;IACL,uBAAC;AAAD,CAAC;AA7FY,gBAAgB;IAD5B,yEAAU,EAAE;qCAEgB,+DAAQ,EAAe,0DAAG,EAAqB,sEAAe;GAD9E,gBAAgB,CA6F5B;AA7F4B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBuB;AACN;AACF;AACA;AACQ;AAChB;AACE;AACK;AAG3C,IAAa,aAAa;IAEtB;IAEA,CAAC;IAEM,kCAAU,GAAjB,UAAkB,IAAS;QACvB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACR,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QACD,MAAM,CAAC,IAAI,wDAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAC5B,IAAI,CAAC,OAAO,CAAC,EACb,IAAI,CAAC,UAAU,CAAC,EAChB,IAAI,CAAC,WAAW,CAAC,EACjB,IAAI,CAAC,UAAU,CAAC,EAChB,IAAI,CAAC,gBAAgB,CAAC,EACtB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EACjC,IAAI,CAAC,IAAI,CAAC,EACV,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,EACjD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,EAC5C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAC/C,IAAI,CAAC,OAAO,CAAC,CAChB,CAAC;IACN,CAAC;IAEM,uCAAe,GAAtB,UAAuB,IAAS;QAC5B,IAAI,MAAM,GAAW,EAAE,CAAC;QACxB,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAC1B,GAAG,CAAC,CAAa,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI;gBAAhB,IAAI,IAAI;gBACT,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;aACtC;QACL,CAAC;QAED,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IAEM,sCAAc,GAArB,UAAsB,IAAS;QAC3B,IAAI,MAAM,GAAU,EAAE,CAAC;QACvB,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAC1B,GAAG,CAAC,CAAY,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI;gBAAf,IAAI,GAAG;gBACR,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;aACpC;QACL,CAAC;QAED,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IAED,iCAAS,GAAT,UAAU,IAAS;QACf,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACR,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QACD,MAAM,CAAC,IAAI,sDAAG,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IAC9C,CAAC;IAED,8CAAsB,GAAtB,UAAuB,IAAS;QAC5B,IAAI,MAAM,GAAkB,EAAE,CAAC;QAC/B,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAC1B,GAAG,CAAC,CAAoB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI;gBAAvB,IAAI,WAAW;gBAChB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC,CAAC;aACpD;QACL,CAAC;QAED,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IAED,yCAAiB,GAAjB,UAAkB,IAAS;QACvB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACR,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YACnB,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAED,MAAM,CAAC,IAAI,sEAAW,CAClB,IAAI,CAAC,SAAS,CAAC,EACf,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,EACrB,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,EACpB,IAAI,CAAC,QAAQ,CAAC,EACd,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAC/B,IAAI,CAAC,IAAI,CAAC,EACV,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IAC7C,CAAC;IAED,qCAAa,GAAb,UAAc,IAAS;QACnB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACR,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QACD,MAAM,CAAC,IAAI,8DAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IACrD,CAAC;IAED,sCAAc,GAAd,UAAe,IAAS;QACpB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACR,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QACD,MAAM,CAAC,IAAI,gEAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,0CAAkB,GAAlB,UAAmB,IAAS;QACxB,IAAI,MAAM,GAAc,EAAE,CAAC;QAC3B,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAC1B,GAAG,CAAC,CAAgB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI;gBAAnB,IAAI,OAAO;gBACZ,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC;aAC5C;QACL,CAAC;QAED,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IAED,qCAAa,GAAb,UAAc,IAAS;QACnB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACR,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QACD,MAAM,CAAC,IAAI,8DAAO,CAAC,IAAI,CAAC,OAAO,CAAC,EAC5B,IAAI,CAAC,aAAa,CAAC,EACnB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EACnC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EACjC,IAAI,CAAC,iBAAiB,CAAC,EACvB,IAAI,CAAC,WAAW,CAAC,EACjB,IAAI,CAAC,SAAS,CAAC,EACf,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EACrC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAC/B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,EACrC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,EACjD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,EACvC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EACrC,IAAI,CAAC,cAAc,CAAC,EACpB,IAAI,CAAC,OAAO,CAAC,CAAC;IACtB,CAAC;IAED,yCAAiB,GAAjB,UAAkB,IAAS;QACvB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACR,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAED,MAAM,CAAC,IAAI,sEAAW,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACrG,CAAC;IAED,8CAAsB,GAAtB,UAAuB,IAAS;QAC5B,IAAI,MAAM,GAAkB,EAAE,CAAC;QAC/B,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAC1B,GAAG,CAAC,CAAgB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI;gBAAnB,IAAI,OAAO;gBACZ,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC;aAChD;QACL,CAAC;QAED,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IACL,oBAAC;AAAD,CAAC;AApJY,aAAa;IADzB,yEAAU,EAAE;;GACA,aAAa,CAoJzB;AApJyB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVmC;AAEV;AACF;AACJ;AAE2B;AAC7B;AACO;AAGlD,IAAI,SAAS,GAAQ,mBAAO,CAAC,GAAY,CAAC,CAAC;AAG3C,IAAa,YAAY;IAIrB,sBAAoB,IAAgB,EACxB,cAA8B,EAC9B,mBAAwC,EACxC,aAA4B;QAHpB,SAAI,GAAJ,IAAI,CAAY;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,kBAAa,GAAb,aAAa,CAAe;IAExC,CAAC;IAEM,4BAAK,GAAZ,UAAa,QAAiB,EAAE,QAAiB,EAAE,OAAgB;QAAnE,iBAmCC;QAlCG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,QAAQ,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACzC,MAAM,EAAE,CAAC;YACb,CAAC;YAED,IAAI,IAAI,GAAG,EAAE;YACb,IAAI,GAAG,GAAG,EAAE,CAAC;YACb,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBACV,IAAI,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC;gBAC7C,GAAG,GAAG,mBAAmB,CAAC;YAC9B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC;gBAC9C,GAAG,GAAG,aAAa,CAAC;YACxB,CAAC;YAED,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,0FAAgB,CAAC,QAAQ,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC,SAAS,CAC3D,UAAC,MAAM;gBACH,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;oBACrC,OAAO,CAAC,GAAG,CAAC,CAAC,KAAI,CAAC,cAAc,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,KAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,KAAI,CAAC,aAAa,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;wBACtJ,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;wBACrB,KAAI,CAAC,mBAAmB,CAAC,sBAAsB,EAAE,CAAC;wBAClD,OAAO,EAAE,CAAC;oBACd,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,CAAC;wBACP,MAAM,CAAC,CAAC,CAAC,CAAC;oBACd,CAAC,CAAC,CAAC;gBACP,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,MAAM,EAAE;gBACZ,CAAC;YACL,CAAC,EACD,UAAC,KAAK;gBACF,MAAM,CAAC,KAAK,CAAC,CAAC;YAClB,CAAC,CACJ,CAAC;QACN,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,+BAAQ,GAAf,UAAgB,IAAU;QAA1B,iBAYC;QAXG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,IAAI,IAAI,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC;YAC1C,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,0FAAgB,CAAC,QAAQ,GAAG,gBAAgB,EAAE,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CACjF,UAAC,MAAM;gBACH,OAAO,EAAE,CAAC;YACd,CAAC,EACD,UAAC,KAAK;gBACF,MAAM,CAAC,KAAK,CAAC,CAAC;YAClB,CAAC,CACJ;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,kCAAW,GAAlB;QACI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IAEM,uCAAgB,GAAvB;QAAA,iBAQC;QAPG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,KAAK;YAC9B,KAAI,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC;gBACxB,OAAO,CAAC,IAAI,CAAC,CAAC;YAClB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;gBACX,OAAO,CAAC,KAAK,CAAC,CAAC;YACnB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;OAIG;IACI,sCAAe,GAAtB;QAAA,iBAuBC;QAtBG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,KAAI,CAAC,cAAc,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,UAAC,MAAM;gBACxC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACV,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;oBACtB,MAAM,EAAE,CAAC;gBACb,CAAC;gBAED,IAAI,OAAO,GAAG,SAAS,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;gBAC5C,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC;oBAC3C,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;oBACrB,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;gBAChC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,MAAM,CAAC,KAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;gBACxD,CAAC;YACL,CAAC,CAAC,CAAC,IAAI,CAAC,UAAC,WAAW;gBAChB,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,OAAO,CAAC,WAAW,CAAC,CAAC;YACzB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;gBACX,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACtB,MAAM,CAAC,KAAK,CAAC,CAAC;YAClB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED,4DAA4D;IACpD,yCAAkB,GAA1B,UAA2B,YAAoB;QAA/C,iBAiBC;QAhBG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,IAAI,IAAI,GAAG,EAAE,YAAY,EAAE,YAAY,EAAE,CAAC;YAE1C,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,0FAAgB,CAAC,QAAQ,GAAG,oBAAoB,EAAE,IAAI,CAAC,CAAC,SAAS,CAC5E,UAAC,MAAM;gBACH,EAAE,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;oBACxB,KAAI,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,EAAE,MAAM,CAAC,aAAa,CAAC,EAAE,YAAY,CAAC,CAAC;oBACzE,OAAO,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;gBACnC,CAAC;gBACD,MAAM,EAAE,CAAC;YACb,CAAC,EACD,UAAC,KAAK;gBACF,MAAM,CAAC,KAAK,CAAC,CAAC;YAClB,CAAC,CACJ,CAAC;QACN,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,oCAAa,GAApB,UAAqB,IAAY;QAAjC,iBAcC;QAbG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,IAAI,IAAI,GAAG;gBACP,IAAI,EAAE,IAAI;aACb,CAAC;YACF,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,0FAAgB,CAAC,QAAQ,GAAG,qBAAqB,EAAE,IAAI,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC,SAAS,CACvG,UAAC,MAAM;gBACH,OAAO,EAAE,CAAC;YACd,CAAC,EACD,UAAC,KAAK;gBACF,MAAM,CAAC,KAAK,CAAC,CAAC;YAClB,CAAC,CACJ;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,6CAAsB,GAA7B;QAAA,iBAQC;QAPG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,KAAI,CAAC,cAAc,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,UAAC,MAAM;gBACxC,OAAO,CAAC,MAAM,CAAC,CAAC;YACpB,CAAC,CAAC,CAAC,KAAK,CAAC;gBACL,OAAO,EAAE,CAAC;YACd,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,8BAAO,GAAd;QAAA,iBAeC;QAdG,IAAI,YAAY,GAAG,2DAAU,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC,CAAC,OAAO,CAAC,UAAC,MAAM;YAC3F,MAAM,CAAC,2DAAU,CAAC,WAAW,CAAC,KAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;QACxE,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;YACX,MAAM,CAAC,2DAAU,CAAC,KAAK,EAAE,CAAC;QAC9B,CAAC,CAAC,CAAC;QAEH,IAAI,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,0FAAgB,CAAC,QAAQ,GAAG,gBAAgB,CAAC,CAAC,OAAO,CAAC,UAAC,IAAI;YAC1F,IAAI,UAAU,GAAG,KAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACrD,MAAM,CAAC,2DAAU,CAAC,WAAW,CAAC,KAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC,CAAC;QACrF,CAAC,CAAC,CAAC,OAAO,CAAC,UAAC,GAAG;YACX,MAAM,CAAC,2DAAU,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,2DAAU,CAAC,KAAK,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;IAC1D,CAAC;IAEM,iCAAU,GAAjB,UAAkB,IAAU;QAA5B,iBAsBC;QApBG,IAAM,IAAI,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3C,IAAI,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;QACzC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;QAC1B,GAAG,CAAC,CAAY,UAAS,EAAT,SAAI,CAAC,IAAI,EAAT,cAAS,EAAT,IAAS;YAApB,IAAI,GAAG;YACR,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;SACrC;QAED,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,0FAAgB,CAAC,QAAQ,GAAG,UAAU,EAAE,IAAI,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG;gBACjG,KAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC;oBAC7C,OAAO,EAAE,CAAC;gBACd,CAAC,CAAC,CAAC,KAAK,CAAC,eAAK;oBACV,MAAM,CAAC,KAAK,CAAC,CAAC;gBAClB,CAAC,CAAC;YACN,CAAC,EAAE,eAAK;gBACJ,MAAM,CAAC,KAAK,CAAC,CAAC;YAClB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,mCAAY,GAAnB;QAAA,iBAIC;QAHG,MAAM,CAAC,2DAAU,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC,CAAC,OAAO,CAAC,UAAC,MAAM;YAC/E,MAAM,CAAC,2DAAU,CAAC,WAAW,CAAC,KAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;QACxE,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,oCAAa,GAApB,UAAqB,KAAa;QAAlC,iBAcC;QAbG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,IAAI,IAAI,GAAG;gBACP,KAAK,EAAE,KAAK;aACf,CAAC;YACF,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,0FAAgB,CAAC,QAAQ,GAAG,iBAAiB,EAAE,IAAI,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC,SAAS,CACnG,UAAC,MAAM;gBACH,OAAO,EAAE,CAAC;YACd,CAAC,EACD,UAAC,KAAK;gBACF,MAAM,CAAC,KAAK,CAAC,CAAC;YAClB,CAAC,CACJ;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,6BAAM,GAAb;QACI,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC;IACxC,CAAC;IACL,mBAAC;AAAD,CAAC;AA1NY,YAAY;IADxB,yEAAU,EAAE;qCAKiB,wEAAU;QACR,wEAAc;QACT,kFAAmB;QACzB,sEAAa;GAP/B,YAAY,CA0NxB;AA1NwB;;;;;;;;;;;;;;;;;;;;;;;;;ACdsC;AAEJ;AACN;AACU;AACV;AACM;AAI3D,IAAa,KAAK;IAMhB,eAAY,QAAkB,EAAE,SAAoB,EAClD,YAA0B,EAClB,YAA0B,EAC1B,cAA8B,EAC9B,SAA0B,EAC3B,GAAQ;QALjB,iBA4CC;QA1CS,iBAAY,GAAZ,YAAY,CAAc;QAC1B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,cAAS,GAAT,SAAS,CAAiB;QAC3B,QAAG,GAAH,GAAG,CAAK;QARjB,aAAQ,GAAQ,UAAU,CAAC;QASzB,QAAQ,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC;YACpB,gEAAgE;YAChE,iEAAiE;YACjE,SAAS,CAAC,YAAY,EAAE,CAAC;YACzB,YAAY,CAAC,IAAI,EAAE,CAAC;YACpB,UAAU,EAAE,CAAC;YAEb,KAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,UAAC,IAAI;gBACzC,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACnB,CAAC,EAAE,UAAC,KAAK;YAET,CAAC,CAAC,CAAC;YAEH,KAAI,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC,SAAS,CAAC,UAAC,IAAI;gBACzD,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACnB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC;YACxB,UAAU,EAAE,CAAC;QACf,CAAC,CAAC,CAAC;QAEH,IAAM,UAAU,GAAG;YACjB,kBAAkB;YAClB,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAAC,MAAM;YAAC,CAAC;YACvC,IAAM,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;YAChC,MAAM,CAAC,WAAW,CAAC,cAAI;gBACrB,EAAE,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC;oBACjC,+BAA+B;oBAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBAClB,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;wBACnB,KAAI,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,EAAE;4BAC3B,SAAS,EAAE,IAAI,CAAC,SAAS;yBAC1B,CAAC,CAAC;oBACL,CAAC;gBACH,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,6BAAa,GAAb;QACE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YACpB,KAAK,EAAE,WAAW;YAClB,OAAO,EAAE,+JAA+J;YACxK,OAAO,EAAE;gBACP;oBACE,IAAI,EAAE,IAAI;oBACV,IAAI,EAAE,QAAQ;iBACf;gBACD;oBACE,IAAI,EAAE,QAAQ;oBACd,OAAO,EAAE;oBAET,CAAC;iBACF;aACF;SACF,CAAC;IACJ,CAAC;IAED,sBAAM,GAAN;QAAA,iBAIC;QAHC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC;YAC9B,KAAI,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;IACL,CAAC;IACH,YAAC;AAAD,CAAC;AA1EyB;IAAvB,0EAAS,CAAC,WAAW,CAAC;;kCAAK;AAFjB,KAAK;IAHjB,wEAAS,CAAC;OACc;KACxB,CAAC;0FAOoD;QACpC,6EAAY;QACJ,iFAAY;QACV,sEAAc;QACnB,4DAAe;QACtB,EAAG;AAiElB;SA5EY,KAAK,2B;;;;;;;;;;;;;;;;;;;;;ACVkD;AAC1B;AACI;AAM9C,IAAa,QAAQ;IAEnB,kBAAmB,OAAsB,EAAS,eAAgC;QAA/D,YAAO,GAAP,OAAO,CAAe;QAAS,oBAAe,GAAf,eAAe,CAAiB;IAClF,CAAC;IAGD,4BAAS,GAAT;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAED,2BAAQ,GAAR;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAChC,CAAC;IAED,kCAAe,GAAf;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,EAAE;YACnC,OAAO,EAAE,0BAA0B;SACpC,CAAC,CAAC;IACL,CAAC;IAED,iCAAc,GAAd;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACtC,CAAC;IAED,+BAAY,GAAZ;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACpC,CAAC;IAED,8BAAW,GAAX;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE;YAC/B,SAAS,EAAE,0BAA0B;SACtC,CAAC,CAAC;IACL,CAAC;IAED,kCAAe,GAAf;QACE,IAAI,CAAC,eAAe,CAAC,cAAc,EAAE,CAAC;IACxC,CAAC;IAEH,eAAC;AAAD,CAAC;AAtCY,QAAQ;IAJpB,wEAAS,CAAC;QACT,QAAQ,EAAE,WAAW;OACG;KACzB,CAAC;aAGkF;AAoCnF;SAtCY,QAAQ,e","file":"main.js","sourcesContent":["import { StorageService } from './storage-service';\r\nimport { ModalController, LoadingController } from 'ionic-angular';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Location } from './../data/Location';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Injectable } from '@angular/core';\r\nimport { Geolocation, Geoposition } from '@ionic-native/geolocation';\r\n\r\ndeclare var google;\r\n\r\n@Injectable()\r\nexport class LocationService {\r\n\r\n    placesService: any;\r\n    private currentLocation: Geoposition;\r\n    private locationChange: Subject<Location> = new Subject();\r\n    private locationChangeObservable: Observable<Location> = this.locationChange.asObservable();\r\n\r\n    constructor(private geoLocation: Geolocation,\r\n        private storageService: StorageService,\r\n        private modalCtrl: ModalController,\r\n        private loadingCtrl: LoadingController) {\r\n\r\n    }\r\n\r\n    public notifiyLocationSelection(location: Location): void {\r\n        this.locationChange.next(location);\r\n    }\r\n\r\n    public selectLocation(): Observable<Location> {\r\n        this.modalCtrl.create(\"SearchPlacePage\").present();\r\n        return this.locationChangeObservable;\r\n    }\r\n\r\n    //Get current location either a saved value (if not expired) or a new value from the device GPS\r\n    //TODO Store and get in Local Storage\r\n    public getCurrentLocation(): Promise<Geoposition> {\r\n        return new Promise((resolve, reject) => {\r\n            return this.storageService.getLocalStorage(\"location\").then(value => {\r\n                if (value) reject(new Error(\"Keine Berechtigung! Kann in den Einstellungen geändert werden\"));\r\n\r\n                if (this.currentLocation && this.currentLocation.timestamp > new Date().getMilliseconds() - 1800000) {\r\n                    resolve(this.currentLocation);\r\n                }\r\n\r\n                this.geoLocation.getCurrentPosition({ timeout: 10000 }).then((coordinates) => {\r\n                    this.currentLocation = coordinates;\r\n                    resolve(this.currentLocation);\r\n                }).catch((error) => {\r\n                    reject(error);\r\n                });\r\n            });\r\n        })\r\n    }\r\n\r\n    public findPlaceName(latLng, map): Promise<string> {\r\n        return new Promise((resolve, reject) => {\r\n            let loader = this.loadingCtrl.create({\r\n                content: \"Getting place information...\"\r\n            });\r\n            loader.present().then(() => {\r\n                this.placesService = new google.maps.places.PlacesService(map);\r\n                let geocoder = new google.maps.Geocoder();\r\n                geocoder.geocode({ \"location\": latLng }, (result, status) => {\r\n                    if (status === \"OK\") {\r\n                        if (result[2]) {\r\n                            this.placesService.getDetails({ \"placeId\": result[2].place_id }, (placeDetails, status) => {\r\n                                if (status === google.maps.places.PlacesServiceStatus.OK) {\r\n                                    loader.dismiss()\r\n                                    resolve(placeDetails.name);\r\n                                } else {\r\n                                    loader.dismiss();\r\n                                    reject();\r\n                                }\r\n                            });\r\n                        }\r\n                    } else {\r\n                        loader.dismiss();\r\n                        reject();\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/location-service.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 152;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 152\n// module chunks = 16","import { StorageService } from './storage-service';\r\nimport { Platform } from 'ionic-angular';\r\nimport { NetworkConstants } from './../data/constants/NetworkConstants';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Firebase } from '@ionic-native/firebase';\r\nimport { LocalNotifications } from '@ionic-native/local-notifications';\r\n\r\n@Injectable()\r\nexport class NotificationService {\r\n\r\n    private currentNotifications = [];\r\n\r\n    constructor(private firebase: Firebase,\r\n        private http: HttpClient,\r\n        private platform: Platform,\r\n        private storageService: StorageService,\r\n        private localNotification: LocalNotifications\r\n    ) {\r\n        this.platform.ready().then(() => {\r\n            console.log(\"bla\");\r\n            this.firebase.hasPermission().then(data => {\r\n                if (!data.isEnabled) this.firebase.grantPermission();\r\n            });\r\n\r\n            this.localNotification.hasPermission().then(value => {\r\n                if (!value) this.localNotification.registerPermission();\r\n            });\r\n\r\n            this.firebase.onTokenRefresh().subscribe(token => {\r\n                this.storeTokenToServer(token).catch(e => {\r\n                    console.log(e);\r\n                })\r\n            });\r\n\r\n            this.localNotification.on(\"click\", (event) => {\r\n                //window.location.href = url;\r\n                console.log(this.currentNotifications[this.findNotification(event.id)])\r\n            });\r\n\r\n            this.firebase.onNotificationOpen().subscribe(notification => {\r\n                if (!notification) return;\r\n\r\n                this.storageService.getLocalStorage(\"notification\").then(value => {\r\n                    if (!value) {\r\n                        notification[\"id\"] = Date.now();\r\n                        this.currentNotifications.push(notification);\r\n                        switch (notification.type) {\r\n                            case \"newApplication\":\r\n                                this.localNotification.schedule({\r\n                                    id: notification.id,\r\n                                    title: \"Project Finder\",\r\n                                    text: 'Du hast eine neue Bewerbung im Projekt ' + notification.projectTitle + ' erhalten!',\r\n                                    smallIcon: 'res://calendar'\r\n                                });\r\n                                break;\r\n                            case \"applicationStatusChanged\":\r\n                                this.localNotification.schedule({\r\n                                    id: notification.id,\r\n                                    title: \"Project Finder\",\r\n                                    text: 'Deine Bewerbung fürs Projekt ' + notification.projectTitle + ' wurde bearbeitet!'\r\n                                });\r\n                                break;\r\n                            case \"projectClosed\":\r\n                                this.localNotification.schedule({\r\n                                    id: notification.id,\r\n                                    title: \"Project Finder\",\r\n                                    text: 'Das Projekt ' + notification.projectTitle + ' wurde geschlossen!'\r\n                                });\r\n                                break;\r\n                            case \"memberJoined\":\r\n                                this.localNotification.schedule({\r\n                                    id: notification.id,\r\n                                    title: \"Project Finder\",\r\n                                    text: 'Das Projekt ' + notification.projectTitle + ' hat ein neues Mitglied!'\r\n                                });\r\n                                break;\r\n                            case \"projectRemoved\":\r\n                                this.localNotification.schedule({\r\n                                    id: notification.id,\r\n                                    title: \"Project Finder\",\r\n                                    text: 'Das Projekt ' + notification.projectTitle + ' wurde entfernt!'\r\n                                });\r\n                                break;\r\n                            case \"removedFromProject\":\r\n                                this.localNotification.schedule({\r\n                                    id: notification.id,\r\n                                    title: \"Project Finder\",\r\n                                    text: 'Das Mitglied ' + notification.firstname + ' wurde vom Projekt ' + notification.projectTitle + ' entfernt!'\r\n                                });\r\n                                break;\r\n                            default:\r\n                                break;\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    findNotification(id: string) {\r\n        for (let i = 0; i < this.currentNotifications.length; i++) {\r\n            if (this.currentNotifications[i].id == id) return i;\r\n        }\r\n    }\r\n\r\n    storeNotificationToken() {\r\n        this.firebase.getToken().then(token => {\r\n            console.log(token);\r\n            this.storeTokenToServer(token).catch(e => {\r\n                console.log(\"Store token Error\");\r\n                console.log(e);\r\n            })\r\n        }).catch(e => {\r\n            console.log(\"Token error\");\r\n            console.log(e);\r\n        });\r\n    }\r\n\r\n    storeTokenToServer(token: string) {\r\n        return new Promise((resolve, reject) => {\r\n            this.http.post(NetworkConstants.HOME_URL + \"/notifications/token\", { token: token }, { responseType: \"text\" }).subscribe((res) => {\r\n                console.log(\"success\");\r\n                resolve();\r\n            }, (error) => {\r\n                console.log(error);\r\n                reject(error);\r\n            });\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/notification-service.ts","var map = {\n\t\"../pages/add-project/add-project.module\": [\n\t\t732,\n\t\t2\n\t],\n\t\"../pages/application/application.module\": [\n\t\t733,\n\t\t5\n\t],\n\t\"../pages/change-password/change-password.module\": [\n\t\t734,\n\t\t8\n\t],\n\t\"../pages/delete-account/delete-account.module\": [\n\t\t735,\n\t\t15\n\t],\n\t\"../pages/edit-project/edit-project.module\": [\n\t\t736,\n\t\t4\n\t],\n\t\"../pages/feed/feed.module\": [\n\t\t737,\n\t\t3\n\t],\n\t\"../pages/forgot-password/forgot-password.module\": [\n\t\t738,\n\t\t0\n\t],\n\t\"../pages/intro/intro.module\": [\n\t\t739,\n\t\t14\n\t],\n\t\"../pages/login/login.module\": [\n\t\t740,\n\t\t13\n\t],\n\t\"../pages/password-reset/password-reset.module\": [\n\t\t741,\n\t\t12\n\t],\n\t\"../pages/project/project.module\": [\n\t\t742,\n\t\t1\n\t],\n\t\"../pages/registration/registration.module\": [\n\t\t743,\n\t\t6\n\t],\n\t\"../pages/search-filter/search-filter.module\": [\n\t\t744,\n\t\t11\n\t],\n\t\"../pages/search-place/search-place.module\": [\n\t\t745,\n\t\t9\n\t],\n\t\"../pages/search/search.module\": [\n\t\t746,\n\t\t7\n\t],\n\t\"../pages/settings/settings.module\": [\n\t\t747,\n\t\t10\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 197;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 197\n// module chunks = 16","export class Tag {\r\n    constructor(public id: string, public title?: string) {\r\n\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/data/Tag.ts","import { Tag } from './../data/Tag';\r\nimport { GooglePlus } from '@ionic-native/google-plus';\r\nimport { Platform } from 'ionic-angular';\r\nimport { SQLite, SQLiteObject } from '@ionic-native/sqlite';\r\nimport { MapperService } from './mapper-service';\r\nimport { User } from './../data/User';\r\nimport { Project } from './../data/Project';\r\nimport { Application } from './../data/Application';\r\nimport { Storage } from '@ionic/storage';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\n@Injectable()\r\nexport class StorageService {\r\n\r\n    private userChange: Subject<User> = new Subject();\r\n    private userChangeObservable: Observable<User> = this.userChange.asObservable();\r\n\r\n    private projectChange: Subject<Project> = new Subject();\r\n    private projectChangeObservable: Observable<Project> = this.projectChange.asObservable();\r\n\r\n    private db: SQLiteObject;\r\n\r\n    constructor(private storage: Storage,\r\n        private mapperService: MapperService,\r\n        private sqlite: SQLite,\r\n        private platform: Platform,\r\n        private googlePlus: GooglePlus) {\r\n\r\n    }\r\n\r\n    private createDB() {\r\n        if (this.db) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve();\r\n            });\r\n        }\r\n\r\n\r\n        return this.platform.ready().then(() => {\r\n            return this.sqlite.create({\r\n                name: 'data.db',\r\n                location: 'default'\r\n            });\r\n        }).then((db: SQLiteObject) => {\r\n            this.db = db;\r\n            return Promise.all([\r\n                db.executeSql('CREATE TABLE IF NOT EXISTS USERS(userID VARCHAR(255) PRIMARY KEY, username TEXT, email TEXT, firstname TEXT, lastname TEXT, profilepicture TEXT)', {}),\r\n                db.executeSql(\"CREATE TABLE IF NOT EXISTS TAGS(tagID VARCHAR(255) PRIMARY KEY, title TEXT)\", {}),\r\n                db.executeSql(\"CREATE TABLE IF NOT EXISTS PROJECTS(projectID VARCHAR(255) PRIMARY KEY, title TEXT, description TEXT, startDate TEXT, endDate TEXT, location TEXT, payment TEXT, maxMemberAmount INTEGER, author VARCHAR(255), status INTEGER, FOREIGN KEY(author) REFERENCES USERS (userID))\", {}),\r\n                db.executeSql(\"CREATE TABLE IF NOT EXISTS APPLICATIONS(applicationID VARCHAR(255) PRIMARY KEY, message TEXT, author VARCHAR(255), project VARCHAR(255), status INTEGER, FOREIGN KEY(author) REFERENCES USERS(userID), FOREIGN KEY(project) REFERENCES PROJECTS(projectID))\", {}),\r\n                db.executeSql(\"CREATE TABLE IF NOT EXISTS USERS_TAGS(userID VARCHAR(255), tagID VARCHAR(255), PRIMARY KEY(userID, tagID), FOREIGN KEY(userID) REFERENCES USERS(userID), FOREIGN KEY(tagID) REFERENCES TAGS(tagID))\", {}),\r\n                db.executeSql(\"CREATE TABLE IF NOT EXISTS USERS_MEMBERPROJECTS(userID VARCHAR(255), projectID VARCHAR(255), PRIMARY KEY(userID, projectID), FOREIGN KEY(userID) REFERENCES USERS(userID), FOREIGN KEY(projectID) REFERENCES PROJECTS(projectID))\", {}),\r\n                db.executeSql(\"CREATE TABLE IF NOT EXISTS USERS_OWNPROJECTS(userID VARCHAR(255), projectID VARCHAR(255), PRIMARY KEY(userID, projectID), FOREIGN KEY(userID) REFERENCES USERS(userID), FOREIGN KEY(projectID) REFERENCES PROJECTS(projectID))\", {}),\r\n                db.executeSql(\"CREATE TABLE IF NOT EXISTS USERS_APPLICATIONS(userID VARCHAR(255), applicationID VARCHAR(255), PRIMARY KEY(userID, applicationID), FOREIGN KEY(userID) REFERENCES USERS(userID), FOREIGN KEY(applicationID) REFERENCES APPLICATIONS(applicationID))\", {}),\r\n                db.executeSql(\"CREATE TABLE IF NOT EXISTS PROJECTS_APPLICATIONS(projectID VARCHAR(255), applicationID VARCHAR(255), PRIMARY KEY(projectID, applicationID), FOREIGN KEY(projectID) REFERENCES PROJECTS(projectID), FOREIGN KEY(applicationID) REFERENCES APPLICATIONS(applicationID))\", {}),\r\n                db.executeSql(\"CREATE TABLE IF NOT EXISTS PROJECTS_MEMBERS(projectID VARCHAR(255), userID VARCHAR(255), PRIMARY KEY(projectID, userID), FOREIGN KEY(projectID) REFERENCES PROJECTS(projectID), FOREIGN KEY(userID) REFERENCES USERS(userID))\", {}),\r\n                db.executeSql(\"CREATE TABLE IF NOT EXISTS PROJECTS_TAGS(projectID VARCHAR(255), tagID VARCHAR(255), PRIMARY KEY(projectID, tagID), FOREIGN KEY(projectID) REFERENCES PROJECTS(projectID), FOREIGN KEY(tagID) REFERENCES TAGS(tagID))\", {})\r\n            ]);\r\n        });\r\n\r\n        /*\r\n\r\nreturn this.platform.ready().then(() => {\r\n    return this.deleteDatabase();\r\n}).then(() => {\r\n    return this.sqlite.create({\r\n        name: 'data.db',\r\n        location: 'default'\r\n    });\r\n}).then((db: SQLiteObject) => {\r\n    this.db = db;\r\n    return Promise.all([\r\n        db.executeSql('CREATE TABLE IF NOT EXISTS USERS(userID VARCHAR(255) PRIMARY KEY, username TEXT, email TEXT, firstname TEXT, lastname TEXT, profilepicture TEXT)', {}),\r\n        db.executeSql(\"CREATE TABLE IF NOT EXISTS TAGS(tagID VARCHAR(255) PRIMARY KEY, title TEXT)\", {}),\r\n        db.executeSql(\"CREATE TABLE IF NOT EXISTS PROJECTS(projectID VARCHAR(255) PRIMARY KEY, title TEXT, description TEXT, startDate TEXT, endDate TEXT, location TEXT, payment TEXT, maxMemberAmount INTEGER, author VARCHAR(255), status INTEGER, FOREIGN KEY(author) REFERENCES USERS (userID))\", {}),\r\n        db.executeSql(\"CREATE TABLE IF NOT EXISTS APPLICATIONS(applicationID VARCHAR(255) PRIMARY KEY, message TEXT, author VARCHAR(255), project VARCHAR(255), status INTEGER, FOREIGN KEY(author) REFERENCES USERS(userID), FOREIGN KEY(project) REFERENCES PROJECTS(projectID))\", {}),\r\n        db.executeSql(\"CREATE TABLE IF NOT EXISTS USERS_TAGS(userID VARCHAR(255), tagID VARCHAR(255), PRIMARY KEY(userID, tagID), FOREIGN KEY(userID) REFERENCES USERS(userID), FOREIGN KEY(tagID) REFERENCES TAGS(tagID))\", {}),\r\n        db.executeSql(\"CREATE TABLE IF NOT EXISTS USERS_MEMBERPROJECTS(userID VARCHAR(255), projectID VARCHAR(255), PRIMARY KEY(userID, projectID), FOREIGN KEY(userID) REFERENCES USERS(userID), FOREIGN KEY(projectID) REFERENCES PROJECTS(projectID))\", {}),\r\n        db.executeSql(\"CREATE TABLE IF NOT EXISTS USERS_OWNPROJECTS(userID VARCHAR(255), projectID VARCHAR(255), PRIMARY KEY(userID, projectID), FOREIGN KEY(userID) REFERENCES USERS(userID), FOREIGN KEY(projectID) REFERENCES PROJECTS(projectID))\", {}),\r\n        db.executeSql(\"CREATE TABLE IF NOT EXISTS USERS_APPLICATIONS(userID VARCHAR(255), applicationID VARCHAR(255), PRIMARY KEY(userID, applicationID), FOREIGN KEY(userID) REFERENCES USERS(userID), FOREIGN KEY(applicationID) REFERENCES APPLICATIONS(applicationID))\", {}),\r\n        db.executeSql(\"CREATE TABLE IF NOT EXISTS PROJECTS_APPLICATIONS(projectID VARCHAR(255), applicationID VARCHAR(255), PRIMARY KEY(projectID, applicationID), FOREIGN KEY(projectID) REFERENCES PROJECTS(projectID), FOREIGN KEY(applicationID) REFERENCES APPLICATIONS(applicationID))\", {}),\r\n        db.executeSql(\"CREATE TABLE IF NOT EXISTS PROJECTS_MEMBERS(projectID VARCHAR(255), userID VARCHAR(255), PRIMARY KEY(projectID, userID), FOREIGN KEY(projectID) REFERENCES PROJECTS(projectID), FOREIGN KEY(userID) REFERENCES USERS(userID))\", {}),\r\n        db.executeSql(\"CREATE TABLE IF NOT EXISTS PROJECTS_TAGS(projectID VARCHAR(255), tagID VARCHAR(255), PRIMARY KEY(projectID, tagID), FOREIGN KEY(projectID) REFERENCES PROJECTS(projectID), FOREIGN KEY(tagID) REFERENCES TAGS(tagID))\", {})\r\n    ]);\r\n});\r\n\r\n    }\r\n\r\n    private deleteDatabase() {\r\n        return this.sqlite.deleteDatabase({\r\n            name: 'data.db',\r\n            location: 'default'\r\n        });\r\n    }\r\n\r\n    */\r\n    }\r\n\r\n    public storeUser(user: User) {\r\n        return new Promise((resolve, reject) => {\r\n            this.createDB().then(() => {\r\n                let queries = [];\r\n                queries.push(`INSERT OR REPLACE INTO USERS (userID, username, email, firstname, lastname, profilepicture) VALUES (\r\n                    \"${user.id}\", \r\n                    \"${user.username}\", \r\n                    \"${user.email}\", \r\n                    \"${user.firstname}\", \r\n                    \"${user.lastname}\", \r\n                    \"${user.profilepicture}\"\r\n                )`);\r\n\r\n                queries.push(\"DELETE FROM USERS_TAGS WHERE userID = '\" + user.id + \"'\");\r\n                for (let tag of user.tags) {\r\n                    queries.push(this.storeTagFromUserObject(user.id, tag));\r\n                }\r\n\r\n                queries.push(\"DELETE FROM USERS_MEMBERPROJECTS WHERE userID = '\" + user.id + \"'\");\r\n                for (let project of user.memberProjects) {\r\n                    if (project) queries.push(this.storeProjectFromUserObject(\"USERS_MEMBERPROJECTS\", user.id, project));\r\n                }\r\n\r\n                queries.push(\"DELETE FROM USERS_OWNPROJECTS WHERE userID = '\" + user.id + \"'\");\r\n                for (let project of user.ownProjects) {\r\n                    if (project) queries.push(this.storeProjectFromUserObject(\"USERS_OWNPROJECTS\", user.id, project));\r\n                }\r\n\r\n                queries.push(\"DELETE FROM USERS_APPLICATIONS WHERE userID = '\" + user.id + \"'\");\r\n                for (let application of user.applications) {\r\n                    queries.push(this.storeApplicationFromUserObject(user.id, application));\r\n                }\r\n\r\n                let finalQuery = [queries[0]];\r\n                for (let i = 1; i < queries.length; i++) {\r\n                    finalQuery = finalQuery.concat(queries[i]);\r\n                }\r\n\r\n                this.db.sqlBatch(finalQuery).then((res) => {\r\n                    resolve(user);\r\n                }, (error) => {\r\n                    reject(error);\r\n                }).catch((error) => {\r\n                    reject(error);\r\n                });\r\n            }).catch((error) => {\r\n                reject(error);\r\n            });\r\n        });\r\n    }\r\n\r\n    public storeProject(project: Project) {\r\n\r\n        return new Promise((resolve, reject) => {\r\n            this.createDB().then(() => {\r\n                let query = [];\r\n\r\n                query.push(`INSERT OR REPLACE INTO PROJECTS (projectID, title, description, startDate, endDate, location, payment, maxMemberAmount, author, status) VALUES (\r\n                \"${project.id}\", \r\n                \"${project.title}\", \r\n                \"${project.description}\", \r\n                \"${project.startDate}\", \r\n                \"${project.endDate}\", \r\n                '${JSON.stringify(project.location)}', \r\n                '${JSON.stringify(project.payment)}', \r\n                \"${project.maxMemberAmount}\",\r\n                \"${project.author.id}\",\r\n                \"${project.status}\"\r\n            )`);\r\n\r\n                let tempQueries = this.storeUserFromProjectObject(\"PROJECTS_MEMBERS\", project.id, project.author);\r\n                for (let q of tempQueries) {\r\n                    query.push(q);\r\n                }\r\n\r\n                query.push(\"DELETE FROM PROJECTS_TAGS WHERE projectID = '\" + project.id + \"'\");\r\n                if (project.tags) {\r\n                    for (let tag of project.tags) {\r\n                        let tempQueries = this.storeTagFromProjectObject(project.id, tag);\r\n                        for (let q of tempQueries) {\r\n                            query.push(q);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                query.push(\"DELETE FROM PROJECTS_MEMBERS WHERE projectID = '\" + project.id + \"'\");\r\n                if (project.members) {\r\n                    for (let member of project.members) {\r\n                        let tempQueries = this.storeUserFromProjectObject(\"PROJECTS_MEMBERS\", project.id, member);\r\n                        for (let q of tempQueries) {\r\n                            query.push(q);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                query.push(\"DELETE FROM PROJECTS_APPLICATIONS WHERE projectID = '\" + project.id + \"'\");\r\n                if (project.applications) {\r\n                    for (let application of project.applications) {\r\n                        let tempQueries = this.storeApplicationFromProjectObject(project.id, application);\r\n                        for (let q of tempQueries) {\r\n                            query.push(q);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.db.sqlBatch(query).then((res) => {\r\n                    resolve(project);\r\n                }, (error) => {\r\n                    reject(error);\r\n                }).catch((error) => {\r\n                    reject(error);\r\n                });\r\n            }).catch((error) => {\r\n                reject(error);\r\n            });\r\n        });\r\n    }\r\n\r\n    public storeTags(tags: Tag[]) {\r\n        return new Promise((resolve, reject) => {\r\n            this.createDB().then(() => {\r\n\r\n                let query = [];\r\n                for (let tag of tags) {\r\n                    query.push(`INSERT OR REPLACE INTO TAGS (tagID, title) VALUES(\"${tag.id}\", \"${tag.title}\")`);\r\n                }\r\n\r\n                this.db.sqlBatch(query).then((res) => {\r\n                    resolve(tags);\r\n                }, (error) => {\r\n                    reject(error);\r\n                }).catch((error) => {\r\n                    reject(error);\r\n                });\r\n            }).catch((error) => {\r\n                reject(error);\r\n            });\r\n        });\r\n    }\r\n\r\n    public storeApplication(application: Application) {\r\n        return new Promise((resolve, reject) => {\r\n            this.createDB().then(() => {\r\n                let query = [];\r\n\r\n                let tempQuery = this.storeProjectFromApplicationObject(application.project);\r\n                for (let q of tempQuery) {\r\n                    query.push(q);\r\n                }\r\n\r\n                let tempQuery2 = this.storeUserFromApplicationObject(application.author);\r\n                for (let q of tempQuery2) {\r\n                    query.push(q);\r\n                }\r\n\r\n                let tempQuery3 = [];\r\n                for (let tag of application.author.tags) {\r\n                    tempQuery3.push(this.storeTagFromUserObject(application.author.id, tag));\r\n                }\r\n\r\n                for (let q of tempQuery3) {\r\n                    for (let q2 of q) {\r\n                        query.push(q2);\r\n                    }\r\n                }\r\n\r\n                query.push(`INSERT OR REPLACE INTO APPLICATIONS (applicationID, message, author, project, status) VALUES(\r\n                                    \"${application.id}\",\r\n                                    \"${application.message}\",\r\n                                    \"${application.author.id}\",\r\n                                    \"${application.project.id}\",\r\n                                    \"${application.status}\"\r\n                                )`);\r\n\r\n                this.db.sqlBatch(query).then((res) => {\r\n                    resolve(application);\r\n                }, (error) => {\r\n                    reject(error);\r\n                }).catch((error) => {\r\n                    reject(error);\r\n                });\r\n            }).catch((error) => {\r\n                reject(error);\r\n            });\r\n        });\r\n    }\r\n\r\n    private storeProjectFromApplicationObject(project: Project) {\r\n        let resultQuery = [];\r\n\r\n        resultQuery.push(`INSERT OR IGNORE INTO PROJECTS (projectID, title) VALUES (\r\n                            \"${project.id}\",\r\n                            \"${project.title}\"\r\n                        )`);\r\n\r\n        resultQuery.push(`UPDATE PROJECTS SET \r\n                        title=\"${project.title}\"\r\n                        WHERE projectID = \"${project.id}\"\r\n                        `);\r\n\r\n        return resultQuery;\r\n    }\r\n\r\n    private storeApplicationFromProjectObject(projectID, application: Application) {\r\n        let resultQuery = [];\r\n\r\n        let tempQueries = this.storeUserFromApplicationObject(application.author);\r\n        for (let q of tempQueries) {\r\n            resultQuery.push(q);\r\n        }\r\n\r\n        resultQuery.push(\"INSERT OR IGNORE INTO PROJECTS_APPLICATIONS (projectID, applicationID) VALUES('\" + projectID + \"', '\" + application.id + \"')\");\r\n        resultQuery.push(`INSERT OR REPLACE INTO APPLICATIONS (applicationID, message, author, project, status) VALUES(\r\n                            \"${application.id}\",\r\n                            \"${application.message}\",\r\n                            \"${application.author.id}\",\r\n                            \"${application.project.id}\",\r\n                            \"${application.status}\"\r\n                        )`);\r\n\r\n        return resultQuery;\r\n    }\r\n\r\n    private storeUserFromApplicationObject(user: User) {\r\n        let resultQuery = [];\r\n\r\n        resultQuery.push(`INSERT OR IGNORE INTO USERS (userID, firstname, lastname, profilepicture, email) VALUES(\r\n                        \"${user.id}\",\r\n                        \"${user.firstname}\",\r\n                        \"${user.lastname}\",\r\n                        \"${user.profilepicture}\",\r\n                        \"${user.email}\"\r\n                )`);\r\n        resultQuery.push(`UPDATE USERS SET\r\n                        firstname=\"${user.firstname}\",\r\n                        lastname=\"${user.lastname}\",\r\n                        profilepicture=\"${user.profilepicture}\",\r\n                        email=\"${user.email}\"\r\n                        WHERE userID = \"${user.id}\"\r\n                        `);\r\n\r\n        return resultQuery;\r\n    }\r\n\r\n    private storeTagFromProjectObject(projectID, tag: Tag) {\r\n        let resultQuery = [];\r\n\r\n        resultQuery.push(\"INSERT OR IGNORE INTO PROJECTS_TAGS (tagID, projectID) VALUES ('\" + tag.id + \"', '\" + projectID + \"')\");\r\n        resultQuery.push(`INSERT OR REPLACE INTO TAGS (tagID, title) VALUES(\r\n                        \"${tag.id}\",\r\n                        \"${tag.title}\"  \r\n                )`);\r\n\r\n        return resultQuery;\r\n    }\r\n\r\n    private storeUserFromProjectObject(joinTable: string, projectID: string, user: User) {\r\n        let resultQuery = [];\r\n\r\n        if (joinTable) {\r\n            resultQuery.push(\"INSERT OR IGNORE INTO \" + joinTable + \" (userID, projectID) VALUES ('\" + user.id + \"', '\" + projectID + \"')\");\r\n        }\r\n\r\n        resultQuery.push(`INSERT OR IGNORE INTO USERS (userID, firstname, lastname, profilepicture${(user.email && user.email.length > 0) ? \", email\" : \"\"}) VALUES(\r\n            \"${user.id}\",\r\n            \"${user.firstname}\",\r\n            \"${user.lastname}\",\r\n            \"${user.profilepicture}\"${(user.email && user.email.length > 0) ? (\", '\" + user.email + \"' \") : \"\"}\r\n        )`);\r\n\r\n        resultQuery.push(`UPDATE USERS SET\r\n        firstname=\"${user.firstname}\",\r\n        lastname=\"${user.lastname}\",\r\n        profilepicture=\"${user.profilepicture}\"${(user.email && user.email.length > 0) ? (\", email='\" + user.email + \"' \") : \"\"}\r\n        WHERE userID = \"${user.id}\"\r\n        `);\r\n\r\n        return resultQuery;\r\n    }\r\n\r\n    private storeProjectFromUserObject(joinTable: string, userID: string, project: Project) {\r\n\r\n        let resultQuery = [];\r\n\r\n        resultQuery.push(\"INSERT OR IGNORE INTO \" + joinTable + \" (userID, projectID) VALUES('\" + userID + \"', '\" + project.id + \"')\");\r\n        resultQuery.push(`INSERT OR IGNORE INTO PROJECTS (projectID, title, author, startDate, status) VALUES (\r\n                    \"${project.id}\",\r\n                    \"${project.title}\",\r\n                    \"${(project.author) ? project.author.id : userID}\",\r\n                    \"${project.startDate}\",\r\n                    \"${project.status}\"\r\n                )`);\r\n\r\n        resultQuery.push(`UPDATE PROJECTS SET \r\n                title=\"${project.title}\", \r\n                startDate=\"${project.startDate}\",\r\n                status=\"${project.status}\"\r\n                WHERE projectID = \"${project.id}\"\r\n                `);\r\n\r\n        if (joinTable != \"USERS_OWNPROJECTS\") {\r\n            let tempQueries = this.storeUserFromProjectObject(null, null, project.author);\r\n            for (let q of tempQueries) {\r\n                resultQuery.push(q);\r\n            }\r\n        }\r\n\r\n        return resultQuery;\r\n    }\r\n\r\n    private storeApplicationFromUserObject(userID: string, application: Application) {\r\n\r\n        let resultQuery = [];\r\n\r\n        resultQuery.push(\"INSERT OR IGNORE INTO USERS_APPLICATIONS (userID, applicationID) VALUES('\" + userID + \"', '\" + application.id + \"')\");\r\n        resultQuery.push(`INSERT OR REPLACE INTO APPLICATIONS (applicationID, message, author, project, status) VALUES(\r\n                    \"${application.id}\",\r\n                    \"${application.message}\",\r\n                    \"${application.author.id}\",\r\n                    \"${application.project.id}\",\r\n                    \"${application.status}\"\r\n                )`);\r\n\r\n        let tempQuery = this.storeProjectFromApplicationObject(application.project);\r\n        for (let q of tempQuery) {\r\n            resultQuery.push(q);\r\n        }\r\n\r\n        return resultQuery;\r\n    }\r\n\r\n    private storeTagFromUserObject(userID: string, tag: Tag) {\r\n\r\n        let resultQuery = [];\r\n\r\n        resultQuery.push(\"INSERT OR IGNORE INTO USERS_TAGS (userID, tagID) VALUES('\" + userID + \"', '\" + tag.id + \"')\");\r\n        resultQuery.push(`INSERT OR REPLACE INTO TAGS (tagID, title) VALUES(\"${tag.id}\", \"${tag.title}\")`);\r\n\r\n        return resultQuery;\r\n    }\r\n\r\n    public loadProject(projectId: string): Promise<Project> {\r\n        return new Promise((resolve, reject) => {\r\n            this.createDB().then(() => {\r\n                let selectQuery = \"SELECT DISTINCT * FROM PROJECTS WHERE projectID = '\" + projectId + \"'\";\r\n\r\n                let memberQuery = `SELECT u.userID as id, u.firstname, u.lastname, u.profilepicture FROM USERS as u\r\n                                    LEFT JOIN PROJECTS_MEMBERS AS pm ON pm.userID = u.userID\r\n                                    WHERE pm.projectID = \"${projectId}\"`;\r\n\r\n                let applicationsQuery = `SELECT a.applicationID as id, a.message, a.status, a.project as projectID, u.userID as userID, u.firstname as firstname, u.lastname as lastname, u.profilepicture as profilepicture FROM APPLICATIONS as a \r\n                                LEFT JOIN USERS AS u ON u.userID = a.author\r\n                                INNER JOIN PROJECTS_APPLICATIONS AS pa ON pa.applicationID = a.applicationID\r\n                                WHERE pa.projectID = \"${projectId}\"\r\n                                `;\r\n\r\n                let tagsQuery = `SELECT t.tagID as id, t.title FROM TAGS AS t\r\n                                    INNER JOIN PROJECTS_TAGS AS pt ON pt.tagID = t.tagID\r\n                                    WHERE pt.projectID = \"${projectId}\"`;\r\n\r\n                // let applicationsAuthorQuery = `SELECT userID, firstname, lastname, profilepicture FROM USERS`\r\n\r\n                let resObject = {};\r\n                this.db.executeSql(selectQuery, []).then((res) => {\r\n                    resObject = res.rows.item(0);\r\n                    if (!resObject) throw new Error(\"No Project found!\");\r\n\r\n                    resObject[\"location\"] = JSON.parse(resObject[\"location\"]);\r\n                    resObject[\"payment\"] = JSON.parse(resObject[\"payment\"]);\r\n                    resObject[\"id\"] = resObject[\"projectID\"];\r\n\r\n                    let authorQuery = `SELECT userID as id, firstname, lastname, profilepicture, email FROM USERS WHERE userID = \"${resObject['author']}\"`;\r\n                    return Promise.all([\r\n                        this.db.executeSql(memberQuery, []),\r\n                        this.db.executeSql(applicationsQuery, []),\r\n                        this.db.executeSql(authorQuery, []),\r\n                        this.db.executeSql(tagsQuery, [])\r\n                    ]);\r\n                }).then((res) => {\r\n                    resObject[\"members\"] = [];\r\n                    resObject[\"applications\"] = [];\r\n                    resObject[\"author\"] = {};\r\n                    resObject[\"tags\"] = [];\r\n                    resObject[\"local\"] = true;\r\n\r\n                    for (let i = 0; i < res[0].rows.length; i++) {\r\n                        resObject[\"members\"].push(this.mapperService.jsonToUser(res[0].rows.item(i)));\r\n                    }\r\n\r\n                    for (let i = 0; i < res[1].rows.length; i++) {\r\n                        console.log(res[1].rows.item(i));\r\n                        res[1].rows.item(i)[\"author\"] = {\r\n                            id: res[1].rows.item(i)[\"userID\"],\r\n                            firstname: res[1].rows.item(i)[\"firstname\"],\r\n                            lastname: res[1].rows.item(i)[\"lastname\"],\r\n                            profilepicture: res[1].rows.item(i)[\"profilepicture\"]\r\n                        };\r\n                        res[1].rows.item(i)[\"project\"] = {\r\n                            id: res[1].rows.item(i)[\"projectID\"]\r\n                        };\r\n                        resObject[\"applications\"].push(this.mapperService.jsonToApplication(res[1].rows.item(i)));\r\n                    }\r\n\r\n                    for (let i = 0; i < res[2].rows.length; i++) {\r\n                        resObject[\"author\"] = this.mapperService.jsonToUser(res[2].rows.item(i));\r\n                    }\r\n\r\n                    for (let i = 0; i < res[3].rows.length; i++) {\r\n                        resObject[\"tags\"].push(this.mapperService.jsonToTag(res[3].rows.item(i)));\r\n                    }\r\n                    resolve(this.mapperService.jsonToProject(resObject));\r\n                }).catch((error) => {\r\n                    reject(error);\r\n                });\r\n            }).catch((error) => {\r\n                reject(error);\r\n            });\r\n        });\r\n    }\r\n\r\n    public loadApplication(applicationID: string): Promise<Application> {\r\n        return new Promise((resolve, reject) => {\r\n            this.createDB().then(() => {\r\n                let applicationQuery = `SELECT DISTINCT a.*, u.userID, u.firstname, u.lastname, u.profilepicture, u.email, p.projectID, p.title, p.status from APPLICATIONS as a\r\n                                        LEFT JOIN USERS as u ON u.userID = a.author\r\n                                        LEFT JOIN PROJECTS as p ON p.projectID = a.project\r\n                                        WHERE a.applicationID = \"${applicationID}\"`;\r\n\r\n                let resObject = {};\r\n                this.db.executeSql(applicationQuery, []).then((res) => {\r\n                    let tagsQuery = `SELECT DISTINCT t.tagID, t.title FROM TAGS as t \r\n                                     INNER JOIN USERS_TAGS as ut\r\n                                     ON ut.tagID = t.tagID WHERE ut.userID = \"${res.rows.item(0)[\"userID\"]}\"`;\r\n                    resObject = res.rows.item(0);\r\n                    resObject[\"author\"] = {\r\n                        id: res.rows.item(0)[\"userID\"],\r\n                        firstname: res.rows.item(0)[\"firstname\"],\r\n                        lastname: res.rows.item(0)[\"lastname\"],\r\n                        profilepicture: res.rows.item(0)[\"profilepicture\"],\r\n                        email: res.rows.item(0)[\"email\"]\r\n                    };\r\n                    resObject[\"project\"] = {\r\n                        id: res.rows.item(0)[\"projectID\"],\r\n                        title: res.rows.item(0)[\"title\"]\r\n                    };\r\n                    return this.db.executeSql(tagsQuery, []);\r\n                }).then((res) => {\r\n                    resObject[\"author\"][\"tags\"] = [];\r\n                    for (let i = 0; i < res.rows.length; i++) {\r\n                        resObject[\"author\"][\"tags\"].push(res.rows.item(i));\r\n                    }\r\n\r\n                    resolve(this.mapperService.jsonToApplication(resObject));\r\n                }).catch((error) => {\r\n                    reject(error);\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    public loadUser(userID: string): Promise<User> {\r\n        return new Promise((resolve, reject) => {\r\n            this.createDB().then(() => {\r\n                let selectQuery = `SELECT * FROM USERS WHERE userID = \"${userID}\"`;\r\n\r\n                let tagsQuery = `SELECT DISTINCT t.tagID, t.title FROM TAGS as t INNER JOIN \r\n                                USERS_TAGS as ut\r\n                                ON ut.tagID = t.tagID WHERE ut.userID = \"${userID}\"`;\r\n\r\n                let ownProjectQuery = `SELECT DISTINCT p.*, u.userID, u.firstname, u.lastname, u.profilepicture FROM PROJECTS as p \r\n                                    LEFT JOIN USERS as u ON u.userID = p.author\r\n                                    INNER JOIN USERS_OWNPROJECTS as op ON op.projectID = p.projectID \r\n                                    WHERE op.userID = \"${userID}\" `;\r\n\r\n                let memberProjectQuery = `SELECT DISTINCT p.*, u.userID, u.firstname, u.lastname, u.profilepicture FROM PROJECTS as p\r\n                                        LEFT JOIN USERS as u ON u.userID = p.author\r\n                                        INNER JOIN USERS_MEMBERPROJECTS as mp ON mp.projectID = p.projectID \r\n                                        WHERE mp.userID = \"${userID}\" `;\r\n\r\n                let applicationQuery = `SELECT a.*, u.userID, u.firstname, u.lastname, u.profilepicture, p.projectID, p.title from APPLICATIONS as a\r\n                                        LEFT JOIN USERS as u ON u.userID = a.author\r\n                                        LEFT JOIN PROJECTS as p ON p.projectID = a.project\r\n                                        INNER JOIN USERS_APPLICATIONS as ua ON ua.applicationID = a.applicationID\r\n                                        WHERE ua.userID = \"${userID}\"\r\n                                        `;\r\n\r\n                let resObject = {};\r\n                this.db.executeSql(selectQuery, []).then((res) => {\r\n                    resObject = res.rows.item(0);\r\n                    if (!resObject) throw new Error(\"No User found!\");\r\n                    resObject[\"id\"] = resObject[\"userID\"];\r\n\r\n                    return Promise.all([\r\n                        this.db.executeSql(tagsQuery, []),\r\n                        this.db.executeSql(ownProjectQuery, []),\r\n                        this.db.executeSql(memberProjectQuery, []),\r\n                        this.db.executeSql(applicationQuery, [])\r\n                    ]);\r\n                }).then((res) => {\r\n                    resObject[\"tags\"] = [];\r\n                    resObject[\"ownProjects\"] = [];\r\n                    resObject[\"memberProjects\"] = [];\r\n                    resObject[\"applications\"] = [];\r\n\r\n                    for (let i = 0; i < res[0].rows.length; i++) {\r\n                        res[0].rows.item(i)[\"id\"] = res[0].rows.item(i)[\"tagID\"];\r\n                        resObject[\"tags\"].push(this.mapperService.jsonToTag(res[0].rows.item(i)));\r\n                    }\r\n\r\n                    for (let i = 0; i < res[1].rows.length; i++) {\r\n                        res[1].rows.item(i)[\"id\"] = res[1].rows.item(i)[\"projectID\"];\r\n                        res[1].rows.item(i)[\"location\"] = JSON.parse(res[1].rows.item(i)[\"location\"]);\r\n                        res[1].rows.item(i)[\"payment\"] = JSON.parse(res[1].rows.item(i)[\"payment\"]);\r\n                        res[1].rows.item(i)[\"author\"] = {\r\n                            id: res[1].rows.item(i)[\"userID\"],\r\n                            firstname: res[1].rows.item(i)[\"firstname\"],\r\n                            lastname: res[1].rows.item(i)[\"lastname\"],\r\n                            profilepicture: res[1].rows.item(i)[\"profilepicture\"]\r\n                        }\r\n\r\n                        resObject[\"ownProjects\"].push(this.mapperService.jsonToProject(res[1].rows.item(i)));\r\n                    }\r\n\r\n                    for (let i = 0; i < res[2].rows.length; i++) {\r\n                        res[2].rows.item(i)[\"id\"] = res[2].rows.item(i)[\"projectID\"];\r\n                        res[2].rows.item(i)[\"location\"] = JSON.parse(res[2].rows.item(i)[\"location\"]);\r\n                        res[2].rows.item(i)[\"payment\"] = JSON.parse(res[2].rows.item(i)[\"payment\"]);\r\n                        res[2].rows.item(i)[\"author\"] = {\r\n                            id: res[2].rows.item(i)[\"userID\"],\r\n                            firstname: res[2].rows.item(i)[\"firstname\"],\r\n                            lastname: res[2].rows.item(i)[\"lastname\"],\r\n                            profilepicture: res[2].rows.item(i)[\"profilepicture\"]\r\n                        }\r\n\r\n                        resObject[\"memberProjects\"].push(this.mapperService.jsonToProject(res[2].rows.item(i)));\r\n                    }\r\n\r\n                    for (let i = 0; i < res[3].rows.length; i++) {\r\n                        res[3].rows.item(i)[\"id\"] = res[3].rows.item(i)[\"applicationID\"];\r\n                        res[3].rows.item(i)[\"author\"] = {\r\n                            id: res[3].rows.item(i)[\"userID\"],\r\n                            firstname: res[3].rows.item(i)[\"firstname\"],\r\n                            lastname: res[3].rows.item(i)[\"lastname\"],\r\n                            profilepicture: res[3].rows.item(i)[\"profilepicture\"]\r\n                        }\r\n                        res[3].rows.item(i)[\"project\"] = {\r\n                            id: res[3].rows.item(i)[\"projectID\"],\r\n                            title: res[3].rows.item(i)[\"title\"]\r\n                        }\r\n                        resObject[\"applications\"].push(this.mapperService.jsonToApplication(res[3].rows.item(i)));\r\n                    }\r\n\r\n                    resObject[\"local\"] = true;\r\n                    resolve(this.mapperService.jsonToUser(resObject));\r\n                }, (error) => {\r\n                    reject(error);\r\n                }).catch((error) => {\r\n                    reject(error);\r\n                });\r\n            }).catch((error) => {\r\n                reject(error);\r\n            });\r\n        });\r\n    }\r\n\r\n    public loadTags(): Promise<Tag[]> {\r\n        return new Promise((resolve, reject) => {\r\n            this.createDB().then(() => {\r\n                this.db.executeSql(\"SELECT * FROM TAGS\", []).then((tags) => {\r\n                    let result: Tag[] = [];\r\n\r\n                    for (let i = 0; i < tags.rows.length; i++) {\r\n                        result.push(this.mapperService.jsonToTag(tags.rows.item(i)));\r\n                    }\r\n\r\n                    resolve(result);\r\n                }).catch((error) => {\r\n                    reject(error);\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    public removeProject(projectId: string) {\r\n        return new Promise((resolve, reject) => {\r\n            this.createDB().then(() => {\r\n                let queries = [\r\n                    `DELETE FROM APPLICATIONS WHERE project = \"${projectId}\"`,\r\n                    `DELETE FROM PROJECTS_APPLICATIONS WHERE projectID = \"${projectId}\"`,\r\n                    `DELETE FROM PROJECTS_MEMBERS WHERE projectID = \"${projectId}\"`,\r\n                    `DELETE FROM PROJECTS_TAGS WHERE projectID = \"${projectId}\"`,\r\n                    `DELETE FROM USERS_OWNPROJECTS WHERE projectID = \"${projectId}\"`,\r\n                    `DELETE FROM USERS_MEMBERPROJECTS WHERE projectID = \"${projectId}\"`,\r\n                    `DELETE FROM PROJECTS WHERE projectID = \"${projectId}\"`\r\n                ];\r\n\r\n                this.db.sqlBatch(queries).then(() => {\r\n                    return this.getCurrentUser();\r\n                }).then((userID) => {\r\n                    return this.loadUser(userID);\r\n                }).then(user => {\r\n                    this.userChange.next(user);\r\n                    resolve();\r\n                }).catch((e) => {\r\n                    reject(e);\r\n                });\r\n            }).catch((e) => {\r\n                reject(e);\r\n            });\r\n        });\r\n    }\r\n\r\n    public updateProfilePicture(userID: string, url: string) {\r\n        return new Promise((resolve, reject) => {\r\n            this.createDB().then(() => {\r\n                let queries = [\r\n                    `UPDATE USERS SET profilepicture = \"${url}\" WHERE userID = \"${userID}\"`\r\n                ];\r\n\r\n                this.db.sqlBatch(queries).then(() => {\r\n                    return this.loadUser(userID);\r\n                }).then(user => {\r\n                    this.userChange.next(user);\r\n                    resolve();\r\n                }).catch((e) => {\r\n                    reject(e);\r\n                });\r\n            }).catch((e) => {\r\n                reject(e);\r\n            });\r\n        });\r\n    }\r\n\r\n    public removeMemberFromProject(projectID: string, userID: string, leaving: boolean) {\r\n        return new Promise((resolve, reject) => {\r\n            this.createDB().then(() => {\r\n                let queries = [`DELETE FROM PROJECTS_MEMBERS WHERE userID = \"${userID}\" AND projectID = \"${projectID}\"`];\r\n\r\n                if (leaving) {\r\n                    queries.push(`DELETE FROM USERS_MEMBERPROJECTS WHERE userID =\"${userID}\" AND projectID = \"${projectID}\"`)\r\n                }\r\n\r\n                this.db.sqlBatch(queries).then(() => {\r\n                    return this.getCurrentUser();\r\n                }).then(id => {\r\n                    return Promise.all([this.loadProject(projectID), this.loadUser(id)]);\r\n                }).then((res: any) => {\r\n                    this.projectChange.next(res[0]);\r\n                    this.userChange.next(res[1]);\r\n                    resolve();\r\n                }).catch((e) => {\r\n                    reject(e);\r\n                });\r\n            }).catch((e) => {\r\n                reject(e);\r\n            });\r\n        });\r\n    }\r\n\r\n    public changeApplicationStatus(applicationID: string, projectID: string, userID: string, status: number) {\r\n        return new Promise((resolve, reject) => {\r\n            this.createDB().then(() => {\r\n                let queries = [\r\n                    `UPDATE APPLICATIONS SET status = ${status} WHERE applicationID = \"${applicationID}\"`\r\n                ];\r\n\r\n                if (status == 2) {\r\n                    queries.push(`INSERT INTO PROJECTS_MEMBERS (projectID, userID) VALUES(\"${projectID}\", \"${userID}\")`);\r\n                }\r\n\r\n                this.db.sqlBatch(queries).then(() => {\r\n                    return this.loadApplication(applicationID);\r\n                }).then(application => {\r\n                    return this.loadProject(application.project.id);\r\n                }).then((project) => {\r\n                    this.projectChange.next(project);\r\n                    resolve();\r\n                }).catch((e) => {\r\n                    reject(e);\r\n                });\r\n            }).catch((e) => {\r\n                reject(e);\r\n            });\r\n        });\r\n    }\r\n\r\n    public closeProject(projectID: string) {\r\n        return new Promise((resolve, reject) => {\r\n            this.createDB().then(() => {\r\n                let queries = [\r\n                    `UPDATE PROJECTS SET status = 1 WHERE projectID = \"${projectID}\"`,\r\n                    `DELETE FROM APPLICATIONS WHERE project = \"${projectID}\"`,\r\n                    `DELETE FROM PROJECTS_APPLICATIONS WHERE projectID = \"${projectID}\"`\r\n                ];\r\n\r\n                this.db.sqlBatch(queries).then(() => {\r\n                    return this.getCurrentUser();\r\n                }).then((userID) => {\r\n                    return Promise.all([this.loadProject(projectID), this.loadUser(userID)]);\r\n                }).then(res => {\r\n                    this.projectChange.next(res[0]);\r\n                    this.userChange.next(res[1]);\r\n                    resolve();\r\n                }).catch((e) => {\r\n                    reject(e);\r\n                });\r\n            }).catch((e) => {\r\n                reject(e);\r\n            });\r\n        });\r\n    }\r\n\r\n    //Adding application from project\r\n    public addApplication(application: Application): Promise<User> {\r\n        return new Promise((resolve, reject) => {\r\n            this.createDB().then(() => {\r\n                let queries = [\r\n                    `INSERT INTO USERS_APPLICATIONS (userID, applicationID) VALUES (\r\n                        \"${application.authorId}\",\r\n                        \"${application.id}\"\r\n                    )`,\r\n                    `INSERT OR REPLACE INTO APPLICATIONS (applicationID, message, author, project, status) VALUES (\r\n                        \"${application.id}\",\r\n                        \"${application.message}\",\r\n                       \" ${application.authorId}\",\r\n                       \" ${application.projectId}\",\r\n                        \"${application.status}\"\r\n                    )`,\r\n                    `INSERT INTO PROJECTS_APPLICATIONS (projectID, applicationID) VALUES (\r\n                        \"${application.projectId}\",\r\n                        \"${application.id}\"\r\n                    )`\r\n                ];\r\n\r\n                this.db.sqlBatch(queries).then(() => {\r\n                    return Promise.all([this.loadUser(application.authorId), this.loadProject(application.projectId)]);\r\n                }).then(res => {\r\n                    this.userChange.next(res[0]);\r\n                    this.projectChange.next(res[1]);\r\n                    resolve();\r\n                }).catch((e) => {\r\n                    reject(e);\r\n                });\r\n            }).catch((e) => {\r\n                reject(e);\r\n            });\r\n        });\r\n    }\r\n\r\n    public addOwnProjectToUser(project: Project) {\r\n        return new Promise((resolve, reject) => {\r\n            this.createDB().then(() => {\r\n                let manyQuery = `INSERT OR IGNORE INTO USERS_OWNPROJECTS (userID, projectID) VALUES (\r\n                    \"${project.author.id}\",\r\n                    \"${project.id}\"\r\n                )`;\r\n                let insertQuery = `INSERT OR REPLACE INTO PROJECTS (projectID, title, description, startDate, endDate, location, payment, maxMemberAmount, status) VALUES (\r\n                    \"${project.id}\",\r\n                    \"${project.title}\",\r\n                    \"${project.description}\",\r\n                    \"${project.startDate}\",\r\n                    \"${project.endDate}\",\r\n                    '${JSON.stringify(project.location)}',\r\n                    '${JSON.stringify(project.payment)}',\r\n                    \"${project.maxMemberAmount}\",\r\n                    \"${project.status}\"\r\n                )`;\r\n\r\n                this.db.sqlBatch([\r\n                    manyQuery,\r\n                    insertQuery\r\n                ]).then(() => {\r\n                    return this.loadUser(project.author.id);\r\n                }).then(user => {\r\n                    this.userChange.next(user);\r\n                    resolve();\r\n                }).catch((e) => {\r\n                    reject(e);\r\n                });\r\n            }).catch((e) => {\r\n                reject(e);\r\n            });\r\n        });\r\n    }\r\n\r\n    public getTokens() {\r\n        return this.storage.get(\"tokens\");\r\n    }\r\n\r\n    public setTokens(tokens?, access?: string, refresh?: string) {\r\n        if (tokens) {\r\n            return this.storage.set(\"tokens\", tokens);\r\n        } else {\r\n            return this.storage.set(\"tokens\", {\r\n                accessToken: access,\r\n                refreshToken: refresh\r\n            });\r\n        }\r\n    }\r\n\r\n    public getCurrentUser(): Promise<any> {\r\n        return this.storage.get(\"user\");\r\n    }\r\n\r\n    public subscribeToUserChange(): Observable<User> {\r\n        return this.userChangeObservable;\r\n    }\r\n\r\n    public subscribeToProjectChange(): Observable<Project> {\r\n        return this.projectChangeObservable;\r\n    }\r\n\r\n    public updateCurrentUser(user: User) {\r\n        this.userChange.next(user);\r\n        return Promise.all([this.storage.set(\"user\", user.id), this.storeUser(user)]);\r\n    }\r\n\r\n    public storeLocalStorage(key: string, value: any) {\r\n        return this.storage.set(key, value);\r\n    }\r\n\r\n    public getLocalStorage(key: string) {\r\n        return this.storage.get(key);\r\n    }\r\n\r\n    public logOut() {\r\n        return Promise.all([/*this.googlePlus.logout(),*/ this.storage.remove(\"tokens\"), this.storage.remove(\"user\")]);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/storage-service.ts","import { Observable } from 'rxjs/Observable';\r\nimport { StorageService } from './storage-service';\r\nimport { AlertController, LoadingController, ToastController } from 'ionic-angular';\r\nimport { NetworkConstants } from './../data/constants/NetworkConstants';\r\nimport { Tag } from './../data/Tag';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class TagService {\r\n\r\n    constructor(private http: HttpClient,\r\n        private alertCtrl: AlertController,\r\n        private loadingCtrl: LoadingController,\r\n        private storageService: StorageService,\r\n        private toastCtrl: ToastController\r\n    ) {\r\n\r\n    }\r\n\r\n    getTags(): Observable<[Tag[]]> {\r\n\r\n        let local = Observable.fromPromise(this.storageService.loadTags());\r\n\r\n        let network = this.http.get(NetworkConstants.HOME_URL + \"/tags\").flatMap((result: any[]) => {\r\n            var tempResult = [];\r\n            result.forEach(element => {\r\n                tempResult.push(new Tag(element._id, element.title));\r\n            });\r\n            return Observable.fromPromise(this.storageService.storeTags(tempResult));\r\n        }).flatMap((result: any[]) => {\r\n            return Observable.of(result);\r\n        });\r\n\r\n        return Observable.zip(local, network);\r\n    }\r\n\r\n    askForMissingTags() {\r\n        this.alertCtrl.create({\r\n            title: 'Noch keine Skills',\r\n            subTitle: 'Du hast noch keine Skills festgelegt!',\r\n            message: 'Bitte wähle in den Einstellungen mindestens einen Skill aus. Klicke links oben um zu den Einstellungen zu gelangen',\r\n            enableBackdropDismiss: false,\r\n            buttons: [\r\n                {\r\n                    text: 'Weiter',\r\n                    role: 'cancel'\r\n                }\r\n            ]\r\n        }).present();\r\n    }\r\n\r\n    openTagDialog(selected?: Tag[]): Promise<Tag[]> {\r\n        return new Promise((resolve, reject) => {\r\n            let loader = this.loadingCtrl.create({\r\n                content: 'Lade Tags...'\r\n            });\r\n            loader.present();\r\n            this.getTags().take(1).subscribe((results) => {\r\n\r\n                loader.dismiss();\r\n                let result;\r\n\r\n                if (results[1] && results[1].length > 0) {\r\n                    result = results[1];\r\n                } else if (results[0] && results[0].length > 0) {\r\n                    result = results[0];\r\n                } else {\r\n                    return;\r\n                }\r\n\r\n                var alert = this.alertCtrl.create();\r\n                alert.setTitle(\"Wähle Tags\");\r\n                for (let i = 0; i < result.length; i++) {\r\n                    alert.addInput({\r\n                        type: \"checkbox\",\r\n                        label: result[i].title,\r\n                        value: result[i].id + \",\" + result[i].title,\r\n                        checked: function () {\r\n                            if (selected) {\r\n                                return (selected.find(function (tag: Tag) {\r\n                                    return tag.id === result[i].id\r\n                                }) ? true : false);\r\n                            }\r\n                            return false;\r\n                        }()\r\n                    });\r\n                }\r\n                alert.addButton({\r\n                    text: \"Abbrechen\",\r\n                    handler: data => {\r\n                    }\r\n                });\r\n                alert.addButton({\r\n                    text: \"Fertig\",\r\n                    handler: data => {\r\n                        let tags: Tag[] = [];\r\n                        data.forEach(element => {\r\n                            var values = element.split(\",\");\r\n                            tags.push(new Tag(values[0], values[1]));\r\n                        });\r\n                        if (tags.length > 0) {\r\n                            resolve(tags);\r\n                        } else {\r\n                            this.toastCtrl.create({\r\n                                message: \"Es muss mindestens ein Tag ausgewählt sein!\",\r\n                                duration: 3000\r\n                            }).present();\r\n                            return false;\r\n                        }\r\n                    }\r\n                });\r\n                alert.present();\r\n            }, (error) => {\r\n                loader.dismiss();\r\n                reject(error);\r\n            });\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/tag-service.ts","import { Observable } from 'rxjs/Observable';\r\nimport { StorageService } from './storage-service';\r\nimport { MapperService } from './mapper-service';\r\nimport { User } from './../data/User';\r\nimport { NetworkConstants } from './../data/constants/NetworkConstants';\r\nimport { Application } from './../data/Application';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Project } from './../data/Project';\r\nimport { Injectable } from '@angular/core';\r\nimport moment from 'moment';\r\n\r\n@Injectable()\r\nexport class ProjectService {\r\n\r\n    constructor(private http: HttpClient,\r\n        private mapperService: MapperService,\r\n        private storageService: StorageService) {\r\n\r\n    }\r\n\r\n    getSingleProject(projectId: string) {\r\n\r\n        let networkRequest = this.http.get(NetworkConstants.HOME_URL + '/projects/' + projectId).retry(3).flatMap((res) => {\r\n            let project = this.mapperService.jsonToProject(res);\r\n            return Observable.fromPromise(this.storageService.storeProject(project));\r\n        });\r\n\r\n        let localRequest = Observable.fromPromise(this.storageService.loadProject(projectId)).catch((error) => {\r\n            return Observable.empty();\r\n        });\r\n\r\n        return Observable.merge(localRequest, networkRequest);\r\n    }\r\n\r\n    getSingleApplication(applicationId: string) {\r\n        let networkRequest = this.http.get(NetworkConstants.HOME_URL + '/projects/applications/' + applicationId).retry(3).flatMap(\r\n            (result) => {\r\n                let application = this.mapperService.jsonToApplication(result);\r\n                return Observable.fromPromise(this.storageService.storeApplication(application));\r\n            });\r\n\r\n        let localRequest = Observable.fromPromise(this.storageService.loadApplication(applicationId)).catch((error) => {\r\n            return Observable.empty();\r\n        });\r\n\r\n        return Observable.merge(localRequest, networkRequest);\r\n    }\r\n\r\n    getInterestingProjects() {\r\n        return new Promise((resolve, reject) => {\r\n            this.http.get(NetworkConstants.HOME_URL + '/projects/interestingProjects').subscribe(\r\n                (result: any) => {\r\n                    let projects = this.mapperService.jsonToProjectArray(result);\r\n                    let promises = [];\r\n                    for (let project of projects) {\r\n                        promises.push(this.storageService.storeProject(project));\r\n                    }\r\n\r\n                    Promise.all(promises).then(() => {\r\n                        resolve(projects);\r\n                    }).catch((e) => {\r\n                        reject(e);\r\n                    })\r\n                },\r\n                (error) => {\r\n                    reject(error);\r\n                });\r\n        });\r\n    }\r\n\r\n    addProject(project: Project): Promise<Project> {\r\n        return new Promise((resolve, reject) => {\r\n            var body = {\r\n                data: JSON.stringify(project)\r\n            };\r\n            this.http.post(NetworkConstants.HOME_URL + '/projects/new', body).subscribe((result: any) => {\r\n                project.id = result[\"_id\"];\r\n                this.storageService.addOwnProjectToUser(project).then(() => {\r\n                    resolve(result);\r\n                }).catch(e => {\r\n                    reject(e);\r\n                });\r\n            }, (error) => {\r\n                reject(error);\r\n            });\r\n        });\r\n    }\r\n\r\n    removeProject(id: string): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            this.http.delete(NetworkConstants.HOME_URL + '/projects/' + id, { responseType: \"text\" }).subscribe((result: any) => {\r\n                this.storageService.removeProject(id).then(() => {\r\n                    resolve();\r\n                }).catch((error) => {\r\n                    reject(error)\r\n                });\r\n            }, (error) => {\r\n                reject(error);\r\n            });\r\n        });\r\n    }\r\n\r\n    editProject(project: Project) {\r\n\r\n    }\r\n\r\n    canApply(user: any, projectId: string) {\r\n        if (user.applications) {\r\n            for (let application of user.applications) {\r\n                if (application.authorId == user.id && application.projectId == projectId) {\r\n                    return application;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    isMember(user: User, project: Project): boolean {\r\n        for (let member of project.members) {\r\n            if (user.id == member.id) return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    sendApplication(application: Application) {\r\n\r\n        var body = {\r\n            data: JSON.stringify(application)\r\n        }\r\n\r\n        body.data = body.data.replace(\"projectId\", \"project\");\r\n        body.data = body.data.replace(\"author\", \"unimportant\");\r\n        body.data = body.data.replace(\"authorId\", \"author\");\r\n\r\n        return new Promise((resolve, reject) => {\r\n            this.http.post(NetworkConstants.HOME_URL + '/projects/applications', body).subscribe(\r\n                (result: any) => {\r\n                    application[\"id\"] = result.applicationId;\r\n                    this.storageService.addApplication(application).then(() => {\r\n                        resolve();\r\n                    }).catch((error) => {\r\n                        reject(error);\r\n                    });\r\n                },\r\n                (error) => {\r\n                    reject(error);\r\n                });\r\n        });\r\n    }\r\n\r\n    changeApplicationStatus(id: string, projectID: string, userID: string, status: number): Promise<any> {\r\n\r\n        let url = \"\";\r\n\r\n        switch (status) {\r\n            case 0:\r\n                url = \"deline/\";\r\n                break;\r\n            case 2:\r\n                url = \"accept/\";\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            this.http.post(NetworkConstants.HOME_URL + '/projects/applications/' + url + id, null, { responseType: \"text\" }).subscribe((result) => {\r\n                this.storageService.changeApplicationStatus(id, projectID, userID, status).then(() => {\r\n                    resolve();\r\n                }).catch((error) => {\r\n                    reject(error);\r\n                });\r\n            }, (error) => {\r\n                reject(error);\r\n            });\r\n        });\r\n    }\r\n\r\n    removeMember(userID: string, projectID: string, leaving: boolean) {\r\n        return new Promise((resolve, reject) => {\r\n            var body = { projectID: projectID, userID: userID };\r\n            this.http.post(NetworkConstants.HOME_URL + '/projects/leave', body, { responseType: \"text\" }).subscribe(\r\n                (result) => {\r\n                    this.storageService.removeMemberFromProject(projectID, userID, leaving).then(() => {\r\n                        resolve();\r\n                    }).catch((error) => {\r\n                        reject(error);\r\n                    });\r\n                },\r\n                (error) => {\r\n                    reject(error);\r\n                }\r\n            )\r\n        });\r\n    }\r\n\r\n    closeProject(projectID: string) {\r\n        return new Promise((resolve, reject) => {\r\n            var body = { projectID: projectID };\r\n            this.http.post(NetworkConstants.HOME_URL + '/projects/close', body, { responseType: \"text\" }).subscribe(\r\n                (result) => {\r\n                    this.storageService.closeProject(projectID).then(() => {\r\n                        resolve();\r\n                    }).catch((error) => {\r\n                        reject(error);\r\n                    });\r\n                },\r\n                (error) => {\r\n                    reject(error);\r\n                }\r\n            )\r\n        });\r\n    }\r\n\r\n    formateDate(date: string): string {\r\n        moment.locale(navigator.language);\r\n        return moment(date).format(\"L\");\r\n    }\r\n\r\n    calculateDuration(date1: string, date2: string): string {\r\n        let firstDate = moment(date1);\r\n        let secondDate = moment(date2);\r\n\r\n        let duration = moment.duration(secondDate.diff(firstDate));\r\n        return Math.ceil(duration.asWeeks()).toString();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/project-service.ts","import { Location } from './Location';\r\nimport { User } from './User';\r\nimport { Payment } from './Payment';\r\nimport { Application } from './Application';\r\nimport { Tag } from './Tag';\r\nimport moment from 'moment';\r\n\r\nexport class Project {\r\n\r\n    constructor(public title: string,\r\n        public description: string,\r\n        public payment: Payment,\r\n        public tags: Tag[],\r\n        public maxMemberAmount: Number,\r\n        public startDate: string,\r\n        public endDate: string,\r\n        public status: number,\r\n        public author?: User,\r\n        public location?: Location,\r\n        public applications?: Application[],\r\n        public id?: string,\r\n        public members?: User[],\r\n        public memberAmount?: Number,\r\n        public local?: boolean) {\r\n    }\r\n\r\n    public formatDate(): string {\r\n        let momentDate = moment(this.startDate);\r\n        return momentDate.format();\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/data/Project.ts","export class Location {\r\n    constructor(public coordinates: Number[], public name?: string) {\r\n\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/data/Location.ts","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\n@Injectable()\r\nexport class RefreshService {\r\n\r\n    private userChange: Subject<any> = new Subject();\r\n    public refreshObservable: Observable<any> = this.userChange.asObservable();\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    public refresh(data: any) {\r\n        this.userChange.next(data);\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/refresh-service.ts","import { MapperService } from './mapper-service';\r\nimport { StorageService } from './storage-service';\r\nimport { Project } from './../data/Project';\r\nimport { NetworkConstants } from './../data/constants/NetworkConstants';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { SearchSettings } from './../data/SearchSettings';\r\nimport { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\n@Injectable()\r\nexport class SearchService {\r\n\r\n    public searchSettings: SearchSettings = new SearchSettings();\r\n    private searchSettingsSource = new Subject<SearchSettings>();\r\n    private searchSettingsObservable: Observable<SearchSettings> = this.searchSettingsSource.asObservable();\r\n\r\n    constructor(private http: HttpClient, private storageService: StorageService,\r\n        private mapperService: MapperService) {\r\n    }\r\n\r\n    updateSearchSettings(key, value) {\r\n        this.searchSettings[key] = value;\r\n        this.searchSettingsSource.next(this.searchSettings);\r\n    }\r\n\r\n    getSearchSettings(): Observable<SearchSettings> {\r\n        return this.searchSettingsObservable;\r\n    }\r\n\r\n    clearSettings(): void {\r\n        this.searchSettings = new SearchSettings();\r\n    }\r\n\r\n    startSearch(searchSettings: SearchSettings, page?: number): Promise<Project[]> {\r\n        return new Promise((resolve, reject) => {\r\n            var query = \"\";\r\n\r\n            if (searchSettings.query) {\r\n                query += \"&query=\" + searchSettings.query;\r\n            }\r\n\r\n            if (searchSettings.location) {\r\n                query += \"&lat=\" + searchSettings.location.coordinates[0];\r\n                query += \"&lng=\" + searchSettings.location.coordinates[1];\r\n            }\r\n\r\n            if (searchSettings.tags && searchSettings.tags.length > 0) {\r\n                for (let tag of searchSettings.tags) {\r\n                    query += \"&tags=\" + tag.id;\r\n                }\r\n            }\r\n\r\n            if (searchSettings.paid) {\r\n                query += \"&paid=paid\";\r\n            }\r\n\r\n            if (page) {\r\n                query += \"&page=\" + page;\r\n            }\r\n\r\n            this.http.get(NetworkConstants.HOME_URL + \"/projects/search?\" + query).subscribe((result: any) => {\r\n                let projects: Project[] = [];\r\n\r\n                if (result && result.length > 0) {\r\n                    result.forEach(element => {\r\n                        let tempProject = this.mapperService.jsonToProject(element);\r\n                        this.storageService.storeProject(tempProject);\r\n                        projects.push(tempProject);\r\n                    });\r\n                }\r\n\r\n                resolve(projects);\r\n            }, (error) => {\r\n                reject(error);\r\n            });\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/search-service.ts","import { LoginService } from './login-service';\r\nimport { LoadingController } from 'ionic-angular';\r\nimport { NetworkConstants } from './../data/constants/NetworkConstants';\r\nimport { Injectable } from '@angular/core';\r\nimport { FileTransfer, FileTransferObject } from '@ionic-native/file-transfer';\r\nimport { File } from '@ionic-native/file';\r\n\r\n\r\ndeclare var cordova: any;\r\n\r\n@Injectable()\r\nexport class ImageUploadService {\r\n\r\n    constructor(private transfer: FileTransfer, private loginService: LoginService, private loadingCtrl: LoadingController, private file: File) {\r\n\r\n    }\r\n\r\n    public uploadProfilePicture(fileName: string) {\r\n        return new Promise((resolve, reject) => {\r\n            let loader = this.loadingCtrl.create({\r\n                content: \"Lade hoch...\"\r\n            });\r\n            loader.present();\r\n\r\n            const fileTransfer: FileTransferObject = this.transfer.create();\r\n            let uploadName;\r\n            try {\r\n                uploadName = this.pathForImage(fileName);\r\n            } catch (error) {\r\n                reject(error);\r\n            }\r\n\r\n            if (!uploadName) {\r\n                loader.dismiss();\r\n                reject();\r\n            }\r\n\r\n            this.loginService.loginValidation().then(token => {\r\n                let options = {\r\n                    fileKey: \"file\",\r\n                    fileName: fileName,\r\n                    chunkedMode: false,\r\n                    mimeType: \"multipart/form-data\",\r\n                    headers: { \"Authorization\": \"Bearer \" + token },\r\n                    params: { 'fileName': fileName }\r\n                };\r\n\r\n                return fileTransfer.upload(uploadName, NetworkConstants.HOME_URL + \"/profile/image\", options);\r\n            }).then((data: any) => {\r\n                loader.dismiss();\r\n                resolve(JSON.parse(data.response).url);\r\n            }).catch(e => {\r\n                loader.dismiss();\r\n                reject(e);\r\n            });\r\n        });\r\n    }\r\n\r\n    public pathForImage(img) {\r\n        if (img === null) {\r\n            return '';\r\n        } else {\r\n            return this.file.dataDirectory + img;\r\n        }\r\n    }\r\n\r\n    public storeImageLocal(namePath, currentName, newFileName) {\r\n        return new Promise((resolve, reject) => {\r\n            this.file.copyFile(namePath, currentName, this.file.dataDirectory, newFileName).then(success => {\r\n                resolve(newFileName);\r\n            }, error => {\r\n                reject(error);\r\n            });\r\n        });\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/image-upload-service.ts","export class Payment {\r\n    constructor(public paid: boolean, public amount?: Number) {\r\n\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/data/Payment.ts","import { User } from './User';\r\nimport { LoginService } from './../services/login-service';\r\nimport { Project } from './Project';\r\nexport class Application {\r\n    constructor(public message: string,\r\n        public projectId: string,\r\n        public authorId: string,\r\n        public status?: number,\r\n        public author?: User,\r\n        public id?: string,\r\n        public project?: Project) {\r\n\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/data/Application.ts","import { Project } from './Project';\r\nimport { Application } from './Application';\r\nimport { Tag } from './Tag';\r\nexport class User {\r\n    constructor(public username: string,\r\n        public email: string,\r\n        public password: string,\r\n        public firstname: string,\r\n        public lastname: string,\r\n        public profilepicture?: string,\r\n        public tags?: Tag[],\r\n        public id?: string,\r\n        public applications?: Application[],\r\n        public ownProjects?: Project[],\r\n        public memberProjects?: Project[],\r\n        public local?: Boolean\r\n    ) {\r\n\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/data/User.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { ImageUploadService } from './../services/image-upload-service';\r\nimport { Firebase } from '@ionic-native/firebase';\r\nimport { NotificationService } from './../services/notification-service';\r\nimport { LocalNotifications } from '@ionic-native/local-notifications';\r\nimport { RefreshService } from './../services/refresh-service';\r\nimport { DatePipe } from './../pipes/date-pipe';\r\nimport { StorageService } from './../services/storage-service';\r\nimport { MapperService } from './../services/mapper-service';\r\nimport { Autosize } from 'ionic2-autosize';\r\nimport { GooglePlus } from '@ionic-native/google-plus';\r\nimport { ProjectCardComponent } from './../components/project-card/project-card';\r\nimport { ComponentsModule } from './../components/components.module';\r\nimport { TagService } from './../services/tag-service';\r\nimport { ProjectService } from './../services/project-service';\r\nimport { SearchFilterPage } from './../pages/search-filter/search-filter';\r\nimport { SearchService } from './../services/search-service';\r\nimport { LocationService } from './../services/location-service';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { ErrorHandler, NgModule } from '@angular/core';\r\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { TokenInterceptor } from '../services/http-interceptor';\r\nimport { MyApp } from './app.component';\r\nimport { HomePage } from '../pages/home/home';\r\nimport { LoginService } from '../services/login-service';\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { IonicStorageModule } from '@ionic/storage';\r\nimport { Geolocation } from '@ionic-native/geolocation';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { GoogleMaps } from '@ionic-native/google-maps';\r\nimport { SQLite } from '@ionic-native/sqlite';\r\nimport { Camera } from '@ionic-native/camera';\r\nimport { Clipboard } from '@ionic-native/clipboard';\r\nimport { FileTransfer } from '@ionic-native/file-transfer';\r\nimport { File } from '@ionic-native/file';\r\nimport { FilePath } from '@ionic-native/file-path';\r\nimport { SocialSharing } from '@ionic-native/social-sharing';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MyApp,\r\n    HomePage\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    IonicModule.forRoot(MyApp),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicStorageModule.forRoot()\r\n  ],\r\n  bootstrap: [IonicApp],\r\n  entryComponents: [\r\n    MyApp,\r\n    HomePage\r\n  ],\r\n  providers: [\r\n    SocialSharing,\r\n    File,\r\n    FilePath,\r\n    FileTransfer,\r\n    ImageUploadService,\r\n    Camera,\r\n    Clipboard,\r\n    LocalNotifications,\r\n    Firebase,\r\n    StatusBar,\r\n    SplashScreen,\r\n    LocationService,\r\n    LoginService,\r\n    Geolocation,\r\n    ProjectService,\r\n    GoogleMaps,\r\n    TagService,\r\n    GooglePlus,\r\n    SQLite,\r\n    SearchService,\r\n    MapperService,\r\n    RefreshService,\r\n    NotificationService,\r\n    StorageService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: TokenInterceptor,\r\n      multi: true\r\n    },\r\n    { provide: ErrorHandler, useClass: IonicErrorHandler }\r\n  ]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","var map = {\n\t\"./af\": 198,\n\t\"./af.js\": 198,\n\t\"./ar\": 199,\n\t\"./ar-dz\": 200,\n\t\"./ar-dz.js\": 200,\n\t\"./ar-kw\": 201,\n\t\"./ar-kw.js\": 201,\n\t\"./ar-ly\": 202,\n\t\"./ar-ly.js\": 202,\n\t\"./ar-ma\": 203,\n\t\"./ar-ma.js\": 203,\n\t\"./ar-sa\": 204,\n\t\"./ar-sa.js\": 204,\n\t\"./ar-tn\": 205,\n\t\"./ar-tn.js\": 205,\n\t\"./ar.js\": 199,\n\t\"./az\": 206,\n\t\"./az.js\": 206,\n\t\"./be\": 207,\n\t\"./be.js\": 207,\n\t\"./bg\": 208,\n\t\"./bg.js\": 208,\n\t\"./bm\": 209,\n\t\"./bm.js\": 209,\n\t\"./bn\": 210,\n\t\"./bn.js\": 210,\n\t\"./bo\": 211,\n\t\"./bo.js\": 211,\n\t\"./br\": 212,\n\t\"./br.js\": 212,\n\t\"./bs\": 213,\n\t\"./bs.js\": 213,\n\t\"./ca\": 214,\n\t\"./ca.js\": 214,\n\t\"./cs\": 215,\n\t\"./cs.js\": 215,\n\t\"./cv\": 216,\n\t\"./cv.js\": 216,\n\t\"./cy\": 217,\n\t\"./cy.js\": 217,\n\t\"./da\": 218,\n\t\"./da.js\": 218,\n\t\"./de\": 219,\n\t\"./de-at\": 220,\n\t\"./de-at.js\": 220,\n\t\"./de-ch\": 221,\n\t\"./de-ch.js\": 221,\n\t\"./de.js\": 219,\n\t\"./dv\": 222,\n\t\"./dv.js\": 222,\n\t\"./el\": 223,\n\t\"./el.js\": 223,\n\t\"./en-au\": 224,\n\t\"./en-au.js\": 224,\n\t\"./en-ca\": 225,\n\t\"./en-ca.js\": 225,\n\t\"./en-gb\": 226,\n\t\"./en-gb.js\": 226,\n\t\"./en-ie\": 227,\n\t\"./en-ie.js\": 227,\n\t\"./en-nz\": 228,\n\t\"./en-nz.js\": 228,\n\t\"./eo\": 229,\n\t\"./eo.js\": 229,\n\t\"./es\": 230,\n\t\"./es-do\": 231,\n\t\"./es-do.js\": 231,\n\t\"./es-us\": 232,\n\t\"./es-us.js\": 232,\n\t\"./es.js\": 230,\n\t\"./et\": 233,\n\t\"./et.js\": 233,\n\t\"./eu\": 234,\n\t\"./eu.js\": 234,\n\t\"./fa\": 235,\n\t\"./fa.js\": 235,\n\t\"./fi\": 236,\n\t\"./fi.js\": 236,\n\t\"./fo\": 237,\n\t\"./fo.js\": 237,\n\t\"./fr\": 238,\n\t\"./fr-ca\": 239,\n\t\"./fr-ca.js\": 239,\n\t\"./fr-ch\": 240,\n\t\"./fr-ch.js\": 240,\n\t\"./fr.js\": 238,\n\t\"./fy\": 241,\n\t\"./fy.js\": 241,\n\t\"./gd\": 242,\n\t\"./gd.js\": 242,\n\t\"./gl\": 243,\n\t\"./gl.js\": 243,\n\t\"./gom-latn\": 244,\n\t\"./gom-latn.js\": 244,\n\t\"./gu\": 245,\n\t\"./gu.js\": 245,\n\t\"./he\": 246,\n\t\"./he.js\": 246,\n\t\"./hi\": 247,\n\t\"./hi.js\": 247,\n\t\"./hr\": 248,\n\t\"./hr.js\": 248,\n\t\"./hu\": 249,\n\t\"./hu.js\": 249,\n\t\"./hy-am\": 250,\n\t\"./hy-am.js\": 250,\n\t\"./id\": 251,\n\t\"./id.js\": 251,\n\t\"./is\": 252,\n\t\"./is.js\": 252,\n\t\"./it\": 253,\n\t\"./it.js\": 253,\n\t\"./ja\": 254,\n\t\"./ja.js\": 254,\n\t\"./jv\": 255,\n\t\"./jv.js\": 255,\n\t\"./ka\": 256,\n\t\"./ka.js\": 256,\n\t\"./kk\": 257,\n\t\"./kk.js\": 257,\n\t\"./km\": 258,\n\t\"./km.js\": 258,\n\t\"./kn\": 259,\n\t\"./kn.js\": 259,\n\t\"./ko\": 260,\n\t\"./ko.js\": 260,\n\t\"./ky\": 261,\n\t\"./ky.js\": 261,\n\t\"./lb\": 262,\n\t\"./lb.js\": 262,\n\t\"./lo\": 263,\n\t\"./lo.js\": 263,\n\t\"./lt\": 264,\n\t\"./lt.js\": 264,\n\t\"./lv\": 265,\n\t\"./lv.js\": 265,\n\t\"./me\": 266,\n\t\"./me.js\": 266,\n\t\"./mi\": 267,\n\t\"./mi.js\": 267,\n\t\"./mk\": 268,\n\t\"./mk.js\": 268,\n\t\"./ml\": 269,\n\t\"./ml.js\": 269,\n\t\"./mr\": 270,\n\t\"./mr.js\": 270,\n\t\"./ms\": 271,\n\t\"./ms-my\": 272,\n\t\"./ms-my.js\": 272,\n\t\"./ms.js\": 271,\n\t\"./my\": 273,\n\t\"./my.js\": 273,\n\t\"./nb\": 274,\n\t\"./nb.js\": 274,\n\t\"./ne\": 275,\n\t\"./ne.js\": 275,\n\t\"./nl\": 276,\n\t\"./nl-be\": 277,\n\t\"./nl-be.js\": 277,\n\t\"./nl.js\": 276,\n\t\"./nn\": 278,\n\t\"./nn.js\": 278,\n\t\"./pa-in\": 279,\n\t\"./pa-in.js\": 279,\n\t\"./pl\": 280,\n\t\"./pl.js\": 280,\n\t\"./pt\": 281,\n\t\"./pt-br\": 282,\n\t\"./pt-br.js\": 282,\n\t\"./pt.js\": 281,\n\t\"./ro\": 283,\n\t\"./ro.js\": 283,\n\t\"./ru\": 284,\n\t\"./ru.js\": 284,\n\t\"./sd\": 285,\n\t\"./sd.js\": 285,\n\t\"./se\": 286,\n\t\"./se.js\": 286,\n\t\"./si\": 287,\n\t\"./si.js\": 287,\n\t\"./sk\": 288,\n\t\"./sk.js\": 288,\n\t\"./sl\": 289,\n\t\"./sl.js\": 289,\n\t\"./sq\": 290,\n\t\"./sq.js\": 290,\n\t\"./sr\": 291,\n\t\"./sr-cyrl\": 292,\n\t\"./sr-cyrl.js\": 292,\n\t\"./sr.js\": 291,\n\t\"./ss\": 293,\n\t\"./ss.js\": 293,\n\t\"./sv\": 294,\n\t\"./sv.js\": 294,\n\t\"./sw\": 295,\n\t\"./sw.js\": 295,\n\t\"./ta\": 296,\n\t\"./ta.js\": 296,\n\t\"./te\": 297,\n\t\"./te.js\": 297,\n\t\"./tet\": 298,\n\t\"./tet.js\": 298,\n\t\"./th\": 299,\n\t\"./th.js\": 299,\n\t\"./tl-ph\": 300,\n\t\"./tl-ph.js\": 300,\n\t\"./tlh\": 301,\n\t\"./tlh.js\": 301,\n\t\"./tr\": 302,\n\t\"./tr.js\": 302,\n\t\"./tzl\": 303,\n\t\"./tzl.js\": 303,\n\t\"./tzm\": 304,\n\t\"./tzm-latn\": 305,\n\t\"./tzm-latn.js\": 305,\n\t\"./tzm.js\": 304,\n\t\"./uk\": 306,\n\t\"./uk.js\": 306,\n\t\"./ur\": 307,\n\t\"./ur.js\": 307,\n\t\"./uz\": 308,\n\t\"./uz-latn\": 309,\n\t\"./uz-latn.js\": 309,\n\t\"./uz.js\": 308,\n\t\"./vi\": 310,\n\t\"./vi.js\": 310,\n\t\"./x-pseudo\": 311,\n\t\"./x-pseudo.js\": 311,\n\t\"./yo\": 312,\n\t\"./yo.js\": 312,\n\t\"./zh-cn\": 313,\n\t\"./zh-cn.js\": 313,\n\t\"./zh-hk\": 314,\n\t\"./zh-hk.js\": 314,\n\t\"./zh-tw\": 315,\n\t\"./zh-tw.js\": 315\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 435;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/moment/locale ^\\.\\/.*$\n// module id = 435\n// module chunks = 16","import { User } from './User';\r\nexport class ChatMessage {\r\n    constructor(public message: string, public author: User, public sent: Date) {\r\n\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/data/ChatMessage.ts","import { Location } from './Location';\r\nimport { Tag } from './Tag';\r\nexport class SearchSettings {\r\n    public global: Boolean;\r\n    public tags: Tag[];\r\n    public location: Location;\r\n    public query: string;\r\n    public paid: boolean;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/data/SearchSettings.ts","export class NetworkConstants {\r\n    //public static HOME_URL: string = \"http://localhost:3000\";\r\n    //public static HOME_URL: string = \"http://192.168.1.103:3000\";\r\n    //public static HOME_URL: string = \"http://192.168.0.31:3000\";\r\n    //public static HOME_URL: string = \"http://192.168.0.66:3000\";\r\n    public static HOME_URL: string = \"http://172.16.16.155:3000\";\r\n    // public static HOME_URL: string = \"http://10.0.0.5:3000\";\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/data/constants/NetworkConstants.ts","import { NetworkConstants } from './../data/constants/NetworkConstants';\r\nimport {App, ToastController } from 'ionic-angular';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { LoginService } from './login-service';\r\nimport { Injectable, Injector } from '@angular/core';\r\nimport {\r\n    HttpRequest,\r\n    HttpHandler,\r\n    HttpEvent,\r\n    HttpInterceptor\r\n} from '@angular/common/http';\r\nimport 'rxjs/Rx';\r\nimport { fromPromise } from \"rxjs/observable/fromPromise\";\r\nimport { HttpErrorResponse } from \"@angular/common/http\";\r\n\r\n\r\n/**\r\n * Interceptor for all HTTP calls which adds the auth token and checks for auth errors\r\n */\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n    constructor(private inj: Injector, private app: App, private toastCtrl: ToastController) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        const auth = this.inj.get(LoginService);\r\n\r\n        if (request.url.startsWith(NetworkConstants.HOME_URL + \"/auth\") || request.url.startsWith(NetworkConstants.HOME_URL + \"/tags\")) {\r\n            return next.handle(request).timeout(5000).do((event: HttpEvent<any>) => {\r\n            }, (err: any) => {\r\n                if (err instanceof HttpErrorResponse) {\r\n                    if (!request.url.endsWith(\"/login\") && (err.status === 0 || err.status === 400 || err.status === 401 || err.status === 500)) {\r\n                        this.toastCtrl.create({\r\n                            message: \"Authentication error\",\r\n                            duration: 3000\r\n                        }).present();\r\n                        auth.logOut();\r\n                        this.app.getRootNav().setRoot(\"LoginPage\");\r\n                    }\r\n                    return Observable.throw(err);\r\n                }\r\n            });\r\n        }\r\n\r\n        //Check validation and get access token, then transform to Observable\r\n        return fromPromise(auth.loginValidation()).switchMap(result => {\r\n            if (result) {\r\n                //Clone request and add auth header\r\n                request = request.clone({\r\n                    setHeaders: {\r\n                        Authorization: \"Bearer \" + result,\r\n                        'Cache-Control': 'no-cache',\r\n                        Pragma: 'no-cache',\r\n                        Expires: 'Sat, 01 Jan 2000 00:00:00 GMT'\r\n                    }\r\n                });\r\n            }\r\n\r\n            return next.handle(request).timeout(5000).do((event: HttpEvent<any>) => {\r\n            }, (err: any) => {\r\n                if (err instanceof HttpErrorResponse) {\r\n                    if (err.status === 0) {\r\n                        this.toastCtrl.create({\r\n                            message: \"Network request error. Are you connected to the internet?\",\r\n                            duration: 3000\r\n                        }).present();\r\n\r\n                    }\r\n\r\n                    if (err.status === 401) {\r\n                        auth.logOut().then(() => {\r\n                            this.toastCtrl.create({\r\n                                message: \"Not logged in.\",\r\n                                duration: 3000\r\n                            }).present();\r\n                            this.app.getRootNav().setRoot(\"LoginPage\");\r\n                        });\r\n                    }\r\n\r\n                    if (err.status === 400) {\r\n                        /*\r\n                        this.toastCtrl.create({\r\n                            message: \"Network request error.\",\r\n                            duration: 3000\r\n                        }).present();\r\n                        */\r\n                    }\r\n\r\n                    if (err.status === 404) {\r\n                        this.toastCtrl.create({\r\n                            message: \"Not found!\",\r\n                            duration: 3000\r\n                        }).present();\r\n                        this.app.getActiveNav().pop();\r\n                    }\r\n\r\n                    if (err.status === 500) {\r\n                        /*\r\n                        this.toastCtrl.create({\r\n                            message: \"Server error.\",\r\n                            duration: 3000\r\n                        }).present();\r\n                        */\r\n                    }\r\n\r\n                    return Observable.throw(err);\r\n                }\r\n            });\r\n        }).catch((error) => {\r\n            console.log(error.message);\r\n            return Observable.throw(new Error(error));\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/http-interceptor.ts","import { ChatMessage } from './../data/ChatMessage';\r\nimport { Location } from './../data/Location';\r\nimport { Payment } from './../data/Payment';\r\nimport { Project } from './../data/Project';\r\nimport { Application } from './../data/Application';\r\nimport { Tag } from './../data/Tag';\r\nimport { User } from './../data/User';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class MapperService {\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    public jsonToUser(json: any): User {\r\n        if (!json) {\r\n            return null;\r\n        }\r\n        return new User(json[\"username\"],\r\n            json[\"email\"],\r\n            json[\"password\"],\r\n            json[\"firstname\"],\r\n            json[\"lastname\"],\r\n            json[\"profilepicture\"],\r\n            this.jsonToTagArray(json[\"tags\"]),\r\n            json[\"id\"],\r\n            this.jsonToApplicationArray(json[\"applications\"]),\r\n            this.jsonToProjectArray(json[\"ownProjects\"]),\r\n            this.jsonToProjectArray(json[\"memberProjects\"]),\r\n            json[\"local\"]\r\n        );\r\n    }\r\n\r\n    public jsonToUserArray(json: any): User[] {\r\n        let result: User[] = [];\r\n        if (json && json.length > 0) {\r\n            for (let user of json) {\r\n                result.push(this.jsonToUser(user));\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public jsonToTagArray(json: any): Tag[] {\r\n        let result: Tag[] = [];\r\n        if (json && json.length > 0) {\r\n            for (let tag of json) {\r\n                result.push(this.jsonToTag(tag));\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    jsonToTag(json: any): Tag {\r\n        if (!json) {\r\n            return null;\r\n        }\r\n        return new Tag(json[\"id\"], json[\"title\"]);\r\n    }\r\n\r\n    jsonToApplicationArray(json: any): Application[] {\r\n        let result: Application[] = [];\r\n        if (json && json.length > 0) {\r\n            for (let application of json) {\r\n                result.push(this.jsonToApplication(application));\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    jsonToApplication(json: any): Application {\r\n        if (!json) {\r\n            return null;\r\n        }\r\n\r\n        if (!json[\"project\"]) {\r\n            return null;\r\n        }\r\n\r\n        return new Application(\r\n            json[\"message\"],\r\n            json[\"project\"][\"id\"],\r\n            json[\"author\"][\"id\"],\r\n            json[\"status\"],\r\n            this.jsonToUser(json[\"author\"]),\r\n            json[\"id\"],\r\n            this.jsonToProject(json[\"project\"]));\r\n    }\r\n\r\n    jsonToPayemnt(json: any): Payment {\r\n        if (!json) {\r\n            return null;\r\n        }\r\n        return new Payment(json[\"paid\"], json[\"amount\"]);\r\n    }\r\n\r\n    jsonToLocation(json: any): Location {\r\n        if (!json) {\r\n            return null;\r\n        }\r\n        return new Location(json[\"coordinates\"], json[\"name\"]);\r\n    }\r\n\r\n    jsonToProjectArray(json: any): Project[] {\r\n        let result: Project[] = [];\r\n        if (json && json.length > 0) {\r\n            for (let project of json) {\r\n                result.push(this.jsonToProject(project));\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    jsonToProject(json: any): Project {\r\n        if (!json) {\r\n            return null;\r\n        }\r\n        return new Project(json[\"title\"],\r\n            json[\"description\"],\r\n            this.jsonToPayemnt(json[\"payment\"]),\r\n            this.jsonToTagArray(json[\"tags\"]),\r\n            json[\"maxMemberAmount\"],\r\n            json[\"startDate\"],\r\n            json[\"endDate\"],\r\n            (json[\"status\"]) ? json[\"status\"] : 0,\r\n            this.jsonToUser(json[\"author\"]),\r\n            this.jsonToLocation(json[\"location\"]),\r\n            this.jsonToApplicationArray(json[\"applications\"]),\r\n            (json[\"id\"]) ? json[\"id\"] : json[\"_id\"],\r\n            this.jsonToUserArray(json[\"members\"]),\r\n            json[\"memberAmount\"],\r\n            json[\"local\"])\r\n    }\r\n\r\n    jsonToChatMessage(json: any): ChatMessage {\r\n        if (!json) {\r\n            return null;\r\n        }\r\n\r\n        return new ChatMessage(json[\"message\"], this.jsonToUser(json[\"author\"]), new Date(json[\"sent\"]));\r\n    }\r\n\r\n    jsonToChatMessageArray(json: any): ChatMessage[] {\r\n        let result: ChatMessage[] = [];\r\n        if (json && json.length > 0) {\r\n            for (let message of json) {\r\n                result.push(this.jsonToChatMessage(message));\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/mapper-service.ts","import { NotificationService } from './notification-service';\r\nimport { Tag } from './../data/Tag';\r\nimport { StorageService } from './storage-service';\r\nimport { MapperService } from './mapper-service';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { User } from './../data/User';\r\nimport { NetworkConstants } from './../data/constants/NetworkConstants';\r\nimport { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\ndeclare var require: any\r\nvar jwtDecode: any = require('jwt-decode');\r\n\r\n@Injectable()\r\nexport class LoginService {\r\n\r\n    private loggedIn: boolean;\r\n\r\n    constructor(private http: HttpClient,\r\n        private storageService: StorageService,\r\n        private notificationService: NotificationService,\r\n        private mapperService: MapperService) {\r\n\r\n    }\r\n\r\n    public login(username?: string, password?: string, idToken?: string) {\r\n        return new Promise((resolve, reject) => {\r\n            if ((!idToken) && (!username || !password)) {\r\n                reject();\r\n            }\r\n\r\n            var body = {}\r\n            var url = \"\";\r\n            if (idToken) {\r\n                body = { token: idToken, network: \"google\" };\r\n                url = \"/auth/socialLogin\";\r\n            } else {\r\n                body = { name: username, password: password };\r\n                url = \"/auth/login\";\r\n            }\r\n\r\n            this.http.post(NetworkConstants.HOME_URL + url, body).subscribe(\r\n                (result) => {\r\n                    if (result[\"tokens\"] && result[\"user\"]) {\r\n                        Promise.all([this.storageService.setTokens(result[\"tokens\"]), this.storageService.updateCurrentUser(this.mapperService.jsonToUser(result[\"user\"]))]).then(() => {\r\n                            this.loggedIn = true;\r\n                            this.notificationService.storeNotificationToken();\r\n                            resolve();\r\n                        }).catch((e) => {\r\n                            reject(e);\r\n                        });\r\n                    } else {\r\n                        reject()\r\n                    }\r\n                },\r\n                (error) => {\r\n                    reject(error);\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n    public register(user: User) {\r\n        return new Promise((resolve, reject) => {\r\n            var body = { data: JSON.stringify(user) };\r\n            this.http.post(NetworkConstants.HOME_URL + '/auth/register', body).retry(3).subscribe(\r\n                (result) => {\r\n                    resolve();\r\n                },\r\n                (error) => {\r\n                    reject(error);\r\n                }\r\n            )\r\n        });\r\n    }\r\n\r\n    public accessCheck(): Boolean {\r\n        return this.loggedIn;\r\n    }\r\n\r\n    public freshAccessCheck(): Promise<Boolean> {\r\n        return new Promise((resolve, rejct) => {\r\n            this.loginValidation().then(() => {\r\n                resolve(true);\r\n            }).catch((error) => {\r\n                resolve(false);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Validate current access Token\r\n     * \r\n     * If invalid or about to expire, try to refresh it\r\n     */\r\n    public loginValidation(): Promise<Object> {\r\n        return new Promise((resolve, reject) => {\r\n            this.storageService.getTokens().then((result) => {\r\n                if (!result) {\r\n                    this.loggedIn = false;\r\n                    reject();\r\n                }\r\n\r\n                var decoded = jwtDecode(result.accessToken);\r\n                if (decoded.exp * 1000 > Date.now() + 300000) {\r\n                    this.loggedIn = true;\r\n                    resolve(result.accessToken);\r\n                } else {\r\n                    return this.refreshAccessToken(result.refreshToken);\r\n                }\r\n            }).then((accessToken) => {\r\n                this.loggedIn = true;\r\n                resolve(accessToken);\r\n            }).catch((error) => {\r\n                this.loggedIn = false;\r\n                reject(error);\r\n            });\r\n        });\r\n    }\r\n\r\n    //Refreshes the current access token and saves it to Storage\r\n    private refreshAccessToken(refreshToken: string) {\r\n        return new Promise((resolve, reject) => {\r\n            var body = { refreshToken: refreshToken };\r\n\r\n            this.http.post(NetworkConstants.HOME_URL + '/auth/refreshToken', body).subscribe(\r\n                (result) => {\r\n                    if (result[\"accessToken\"]) {\r\n                        this.storageService.setTokens(null, result[\"accessToken\"], refreshToken);\r\n                        resolve(result[\"accessToken\"]);\r\n                    }\r\n                    reject();\r\n                },\r\n                (error) => {\r\n                    reject(error);\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n    public resetPassword(name: string) {\r\n        return new Promise((resolve, reject) => {\r\n            var body = {\r\n                name: name\r\n            };\r\n            this.http.post(NetworkConstants.HOME_URL + '/auth/resetPassword', body, { responseType: \"text\" }).subscribe(\r\n                (result) => {\r\n                    resolve();\r\n                },\r\n                (error) => {\r\n                    reject(error);\r\n                }\r\n            )\r\n        });\r\n    }\r\n\r\n    public simplyGetCurrentTokens() {\r\n        return new Promise((resolve, reject) => {\r\n            this.storageService.getTokens().then((result) => {\r\n                resolve(result);\r\n            }).catch(() => {\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n\r\n    public getUser(): Observable<User> {\r\n        let localRequest = Observable.fromPromise(this.storageService.getCurrentUser()).flatMap((userID) => {\r\n            return Observable.fromPromise(this.storageService.loadUser(userID));\r\n        }).catch((error) => {\r\n            return Observable.empty();\r\n        });\r\n\r\n        let networkRequest = this.http.get(NetworkConstants.HOME_URL + \"/projects/user\").flatMap((user) => {\r\n            let parsedUser = this.mapperService.jsonToUser(user);\r\n            return Observable.fromPromise(this.storageService.updateCurrentUser(parsedUser));\r\n        }).flatMap((res) => {\r\n            return Observable.of(res[1]);\r\n        });\r\n\r\n        return Observable.merge(localRequest, networkRequest);\r\n    }\r\n\r\n    public updateUser(user: User): Promise<any> {\r\n\r\n        const body = {};\r\n        body[\"user\"] = {};\r\n        body[\"user\"][\"firstname\"] = user.firstname;\r\n        body[\"user\"][\"lastname\"] = user.lastname;\r\n        body[\"user\"][\"tags\"] = [];\r\n        for (let tag of user.tags) {\r\n            body[\"user\"][\"tags\"].push(tag.id);\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            this.http.patch(NetworkConstants.HOME_URL + \"/profile\", body, { responseType: \"text\" }).subscribe(res => {\r\n                this.storageService.updateCurrentUser(user).then(() => {\r\n                    resolve();\r\n                }).catch(error => {\r\n                    reject(error);\r\n                })\r\n            }, error => {\r\n                reject(error);\r\n            });\r\n        });\r\n    }\r\n\r\n    public getLocalUser(): Observable<User> {\r\n        return Observable.fromPromise(this.storageService.getCurrentUser()).flatMap((userID) => {\r\n            return Observable.fromPromise(this.storageService.loadUser(userID));\r\n        });\r\n    }\r\n\r\n    public deleteAccount(email: string) {\r\n        return new Promise((resolve, reject) => {\r\n            var body = {\r\n                email: email\r\n            };\r\n            this.http.post(NetworkConstants.HOME_URL + '/deleteAccount/', body, { responseType: \"text\" }).subscribe(\r\n                (result) => {\r\n                    resolve();\r\n                },\r\n                (error) => {\r\n                    reject(error);\r\n                }\r\n            )\r\n        });\r\n    }\r\n\r\n    public logOut() {\r\n        return this.storageService.logOut();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/login-service.ts","import { StorageService } from './../services/storage-service';\r\nimport { User } from './../data/User';\r\nimport { LoginService } from './../services/login-service';\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { Platform, App, AlertController } from 'ionic-angular';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\n@Component({\r\n  templateUrl: 'app.html'\r\n})\r\nexport class MyApp {\r\n\r\n  @ViewChild(\"mycontent\") nav;\r\n  rootPage: any = \"FeedPage\";\r\n  user: User;\r\n\r\n  constructor(platform: Platform, statusBar: StatusBar,\r\n    splashScreen: SplashScreen,\r\n    private loginService: LoginService,\r\n    private storageService: StorageService,\r\n    private alertCtrl: AlertController,\r\n    public app: App) {\r\n    platform.ready().then(() => {\r\n      // Okay, so the platform is ready and our plugins are available.\r\n      // Here you can do any higher level native things you might need.\r\n      statusBar.styleDefault();\r\n      splashScreen.hide();\r\n      branchInit();\r\n\r\n      this.loginService.getUser().subscribe((user) => {\r\n        this.user = user;\r\n      }, (error) => {\r\n\r\n      });\r\n\r\n      this.storageService.subscribeToUserChange().subscribe((user) => {\r\n        this.user = user;\r\n      });\r\n    });\r\n\r\n    platform.resume.subscribe(() => {\r\n      branchInit();\r\n    });\r\n\r\n    const branchInit = () => {\r\n      // only on devices\r\n      if (!platform.is('cordova')) { return }\r\n      const Branch = window['Branch'];\r\n      Branch.initSession(data => {\r\n        if (data['+clicked_branch_link']) {\r\n          // read deep link data on click\r\n          console.log(data);\r\n          if (data.projectID) {\r\n            this.nav.push(\"ProjectPage\", {\r\n              projectId: data.projectID\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  openImpressum() {\r\n    this.alertCtrl.create({\r\n      title: \"Impressum\",\r\n      message: \"Erstellt von Linu Weiss und Magdalena Mayrhofer. Bei Fragen und Anregungen bitte an weisslinus@gmail.com wenden. Mehr Infos zum Projekt finden Sie auf Github\",\r\n      buttons: [\r\n        {\r\n          text: \"Ok\",\r\n          role: \"cancel\"\r\n        },\r\n        {\r\n          text: \"Github\",\r\n          handler: () => {\r\n\r\n          }\r\n        }\r\n      ]\r\n    })\r\n  }\r\n\r\n  logOut() {\r\n    this.loginService.logOut().then(() => {\r\n      this.app.getRootNav().setRoot(\"LoginPage\");\r\n    });\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { LocationService } from './../../services/location-service';\r\nimport { Component } from '@angular/core';\r\nimport { NavController } from 'ionic-angular';\r\n\r\n@Component({\r\n  selector: 'page-home',\r\n  templateUrl: 'home.html'\r\n})\r\nexport class HomePage {\r\n\r\n  constructor(public navCtrl: NavController, public locationService: LocationService) {\r\n  }\r\n\r\n\r\n  openLogin() {\r\n    this.navCtrl.push(\"LoginPage\");\r\n  }\r\n\r\n  openFeed() {\r\n    this.navCtrl.push(\"FeedPage\");\r\n  }\r\n\r\n  openApplication() {\r\n    this.navCtrl.push(\"ApplicationPage\", {\r\n      project: \"5a04b4d870bd504f94effe9e\"\r\n    });\r\n  }\r\n\r\n  openAddProject() {\r\n    this.navCtrl.push(\"AddProjectPage\");\r\n  }\r\n\r\n  openSettings() {\r\n    this.navCtrl.push(\"SettingsPage\");\r\n  }\r\n\r\n  openProject() {\r\n    this.navCtrl.push(\"ProjectPage\", {\r\n      projectId: \"5a1ea10fbbf5d93514647751\"\r\n    });\r\n  }\r\n\r\n  openSearchPlace() {\r\n    this.locationService.selectLocation();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts"],"sourceRoot":""}